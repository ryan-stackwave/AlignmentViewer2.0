{"version":3,"sources":["common/Utils.ts","common/MolecularStyles.ts","common/SequenceLogoGlyphs.tsx","common/Residues.ts","common/Alignment.ts","common/ScrollSync.ts","common/AceAlignmentMode.ts","components/SequenceLogoComponent.tsx","components/SequenceBarplotComponent.tsx","components/CanvasAlignmentViewportComponent.tsx","components/CanvasAlignmentHighlighterComponent.tsx","components/CanvasAlignmentTiledComponent.tsx","components/CanvasAlignmentComponent.tsx","components/MiniMapComponent.tsx","components/AceEditorComponent.tsx","components/AceMultipleSequenceAlignmentComponent.tsx","components/AceConsensusSequenceComponent.tsx","components/AceTargetSequenceComponent.tsx","components/AceTextualRulerComponent.tsx","components/AlignmentViewerComponent.tsx","common/FastaAlignment.ts","common/StockholmAlignment.ts","components/AlignmentFileLoaderComponent.tsx","App.tsx","serviceWorker.js","index.js","common/MolecularStyles.module.scss"],"names":["stringToColor","str","ctx","document","createElement","getContext","fillStyle","hex","replace","m","r","g","b","rgbaResult","exec","rgb","red","parseInt","green","blue","mapGroupBy","items","fn","reduce","acc","item","key","existing","get","set","Map","ALL_AMINOACID_COLORSCHEMES","assembleColorSchemes","ALL_NUCLEOTIDE_COLORSCHEMES","moleculeType","Object","keys","styles","styleName","indexOf","colorSchemeName","split","colorOrder","hexValues","description","push","commonName","className","backgroundAlpha","parseFloat","colors","fromEntries","map","_","i","AlignmentTypes","allColorSchemes","list","find","at","AMINOACID","aaAlignTypeClass","NUCLEOTIDE","ntAlignTypeClass","PositionsToStyle","ALL","styPosAllClass","QUERY","styPosQueryClass","QUERY_DIFF","styPosQueryDiffClass","CONSENSUS","styPosConsensusClass","CONSENSUS_DIFF","styPosConsensusDiffClass","ResidueStyle","LIGHT","lightHueClass","DARK","darkHueClass","NO_BACKGROUND","lettersOnlyHueClass","AlignmentStyle","alignmentType","colorScheme","positionsToStyle","residueDetail","AminoAcidAlignmentStyle","NucleotideAlignmentStyle","aceResidueParentClass","generateFastClassLookup","isForAceItself","ALL_POSSIBLE_CHARS","String","fromCharCode","letter","letterInClass","prefix","acePrefix","preAceConsensusClass","preAceQueryClass","LETTER_CLASS_NAMES","LETTER_CLASS_NAMES_FOR_ACE","getLetterClassNames","isConsensus","isQuery","forAceItself","GlyphFactory","letterToGlyphHM","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","singleton","props","d","transform","fill","cx","cy","stroke","strokeOpacity","fillOpacity","strokeWidth","AminoAcid","singleLetterCode","threeLetterCode","fullName","glyph","this","glyphFromChar","cs","colorPair","entries","aa","colorString","colorInfo","hexString","bySingleLetterCode","UNKNOWN","byThreeLetterCode","canonicalAminoAcids","DistanceFunctions","Nucleotide","toUpperCase","allNucleotides","SequenceSortOptions","isTargetSequenceDependent","distanceFn","INPUT","HAMMING_DIST_TARGET","hamming","ScrollType","Alignment","name","sequencesAsInput","uuid","aceEditorMode","predictedNT","sequences","targetSequence","positionalLetterCounts","globalAlphaLetterCounts","allUpperAlphaLettersInAlignmentSorted","consensus","c","window","crypto","getRandomValues","Uint8Array","toString","start","Date","allLettersInAlignment","sequenceIdx","length","seq","sequence","positionIdx","letterIsAlpha","match","fromSingleLetterCode","position","letterCounts","sort","arr","value","Array","from","topLetter","a","aIsLetter","bIsLetter","occurrences","console","log","getTime","seq1","seq2","distFn","minLength","distance","Error","validLetters","totalCounts","includes","mode","alignment","modeSplit","modeName","ace","define","require","exports","module","oop","TextHighlightRules","AlignmentHighlightRules","rules","re","stateName","nextStateName","getMaxSequenceLength","token","getConsensus","getTargetSequence","regex","next","$rules","inherits","TextMode","Mode","Tokenizer","$tokenizer","getRules","call","prototype","defineNewAlignmentMode","isNaN","normalize","normalizeLetterCounts","getSequences","acc2","sortBy","forceReSort","has","sortByDistanceToTargetSequence","newTarget","undefined","forEach","inputSequences","s","getSequenceDistance","LOGO_TYPES","ScrollSync","scrollDirection","aceEditorDirection","scrollers","scrollFnHandles","handleScroll","scroller","event","filter","possibleSib","siblingScroller","syncScrollPosition","horizontal","addEventListener","addScrollEvents","removeScrollEvents","parentElem","x","newScrollLeft","isAceEditor","session","getScrollLeft","scrollLeft","setScrollLeft","newScrollTop","getScrollTop","scrollTop","setScrollTop","bind","scrollFn","on","off","removeEventListener","SequenceLogoComponent","logoData","id","effect","type","border","getContent","idx","glyphData","slice","reverse","letterFreq","myidx","classNames","residue","frequency","toFixed","count","positionalFrequencies","numGlyphStacks","logoType","dy","freq","BARS","xscale","width","height","numberSequences","lettersSorted","getAllUpperAlphaLettersInAlignmentSorted","moleculeClass","getPredictedType","letterObjects","plc","getPositionalLetterCounts","nextProps","glyphWidth","ReactTooltip","rebuild","mungeLogoData","totalWidth","preserveAspectRatio","viewBox","style","xmlns","singlePositionData","renderSinglePositionStack","data-for","data-tip","data-class","renderTooltip","React","Component","defaultProps","LETTERS","SequenceBarplotComponent","cache","state","svgHovered","positionsSelected","handleSvgHover","handlePositionHover","handlePositionClicked","isHovered","setState","onPositionMouseEnter","onPositionMouseLeave","relatedTarget","getBars","barsGroupedByPosition","positionHovered","element","bars","onPositionSelectionChanged","newPositionsSelected","some","p","allHeights","bar","overallMinHeight","Math","min","overallMaxHeight","max","minHeight","maxHeight","dataSeries","plotOptions","fixYMax","normalizedHeight","POSITION_VIEWBOX_HEIGHT","maxSeqLength","allBars","ds","getPositionalInfo","groupBy","categoryBars","normalizeBarHeights","flat","barsGroupedByDataseries","barsObj","pos","posInt","barsAtPostion","posPlusOne","cssClass","positionWidth","POSITION_VIEWBOX_WIDTH","onMouseEnter","onMouseLeave","maxBarHeight","numDataSeries","size","barWidth","firstBarOffset","onClick","dataseriesIdx","renderBarPlot","SHANNON_ENTROPY_BARPLOT","al","log2","values","KULLBAC_LEIBLER_DIVERGENCE_BARPLOT","allLetters","pk","qk","getGlobalAlphaLetterCounts","GAPS_BARPLOT","getGapCountAtColumn","CanvasAlignmentViewport","PixiComponent","create","app","mouseClick","numColumns","numRows","useDrag","usePinch","useWheel","zoomPercent","renderer","backgroundColor","vp","Viewport","screenWidth","screenHeight","worldWidth","worldHeight","interaction","plugins","decelerate","clamp","direction","bounce","friction","time","underflow","clampZoom","drag","pinch","wheel","e","world","y","applyProps","oldProps","newProps","fitWorld","setZoom","CanvasAlignmentHighlighter","toReturn","Graphics","interactive","instance","fillColor","fillAlpha","clear","beginFill","drawRect","endFill","dragFunctions","removeAllListeners","addListener","stopPropagation","dragStart","onDragStart","parent","dragEnd","onDragEnd","dragMove","onDragMove","CanvasAlignmentTiled","fullWidth","fullHeight","sizes","targetTileWidth","targetTileHeight","tiledImages","initializeTiledImages","tileYNumber","numYTiles","tileXNumber","numXTiles","tiledImage","generateCanvasForTile","tiles","tile","source","image","pixelX","pixelY","tileX","tileY","getName","tileImageData","tileCanvasContext","tileCanvas","offsets","imageDataIdx","seqIdx","seqY","letterIdx","letterX","getCurrentMoleculeColors","data","putImageData","lastTileHeight","lastTileWidth","fillRect","getImageData","colorCanvasWithSequence","consensusSequence","querySequence","molecule","floor","CanvasAlignmentComponent","scaleX","scaleY","body","overflow","onWheel","dragging","newValue","xy","stage","children","sprite","scale","rowHighlightStart","rowHighlighterHeight","highlightRows","onClickOrDrag","stageResolution","viewportProps","dragPositions","numSequences","PIXI","skipHello","SCALE_MODE","NEAREST","round","current","startOffset","top","options","transparent","Consumer","startPosition","getLocalPosition","left","finalPosition","newPosition","MiniMapComponent","renderCanvasComponent","getSizing","frameWidth","frameHeight","onMouseDown","borderWidth","margin","alignHorizontal","right","AceEditorComponent","editor","lastText","lastMode","lastElementWidth","lastElementHeight","text","editorMode","el","edit","setShowPrintMargin","setReadOnly","setHighlightActiveLine","setHighlightGutterLine","setFontSize","fontSize","setShowGutter","setPadding","$cursorLayer","display","characterSizeChanged","mouseDown","mouseMove","getMousePosition","getDocumentPosition","screenCoordinates","textToScreenCoordinates","row","column","mouseRow","mouseColumn","mousePageX","pageX","mousePageY","pageY","getFontSize","getEditorMode","newMode","setMode","getText","selectAll","removeLines","newText","insert","clientWidth","clientHeight","setupEditor","addEventListeners","setText","editorLoaded","resize","mouseEnter","mouseLeave","ref","initialLoad","AceMultipleSequenceAlignmentComponent","join","getAceEditorMode","AceConsensusSequenceComponent","AceTargetSequenceComponent","AceTextualRulerComponent","generateTextualRuler","maxLength","sn","np","substr","logoPlotStyle","zoomLevel","showMiniMap","showAnnotations","showConsensus","showQuery","showRuler","showLogo","barplotDataseries","AlignmentViewer","verticalScrollSync","horizontalScrollSync","handleCharacterSizeChanged","newCharSize","aceCharacterWidth","aceEditorLoaded","scrollSyncDirection","both","registerAceScroller","vertical","characterWidth","aceEditors","concat","setTimeout","alignmentEditorVisibleFirstRow","getFirstFullyVisibleRow","alignmentEditorVisibleLastRow","getLastFullyVisibleRow","windowDimensionsUpdated","windowWidth","innerWidth","windowHeight","innerHeight","renderSequenceLogo","renderConservationBox","renderConsensusQueryBox","renderQuerySeqBox","renderPositionBox","renderAlignmentBox","renderAlignmentAnnotationBox","onMinimapClick","alignmentEditorFirstRow","alignmentEditorLastRow","scrollToRow","annotation","content","addAsElementToScrollSync","registerElementScroller","annotationClass","renderMiniMap","generateWidget","series","mmClassName","FastaAlignment","fileName","fileContents","fastaSplitCaret","trim","seqArr","seqObj","StockholmAlignment","metadata","trimmedAndSplit","startsWith","GF","GS","GR","GC","line","warn","metadataGroup","keyVal","seqId","featureVal","AlignmentFileLoaderComponent","fileInput","handleFileUploadInputChange","handleClick","preventDefault","click","file","onAlignmentLoaded","reader","FileReader","onload","fileText","result","fromFileContents","readAsText","onFileLoadStart","files","readFileText","fileSelectorLabelText","onChange","exampleFiles","ef","fileURL","File","fetch","blob","f","labelText","renderFileUpload","renderExampleFiles","App","renderSettingsBox","alignmentDescription","showSettings","renderAlignmentTypeLabel","renderSortControl","renderColorScheme","renderResidueDetail","renderPositionStyling","renderZoomButtons","renderMiniMapToggle","renderAnnotationToggle","loading","fromKey","target","sso","fromAlignmentType","index","rd","pts","disabled","process","onAlignmentReceived","checked","alignmentElement","getDefaultStyle","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f8f3d9a.chunk.js","sourcesContent":["/**\n * Convert any valid color string into a hex code and RGB\n * value using the built in browser converter.\n * taken from\n * https://stackoverflow.com/questions/1573053/\n * and\n * https://stackoverflow.com/questions/5623838/\n * @param str The string to convert\n * @returns An object that contains the hex and rgb values for that string\n *          Default to black (#000000) if the string is not recognized.\n */\nexport function stringToColor(\n  str: string\n): {\n  hex: string;\n  rgb: { red: number; green: number; blue: number };\n} {\n  const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n  ctx!.fillStyle = str;\n  let hex = ctx!.fillStyle!;\n\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  // https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n  // (I think only necessary in testing, but might catch odd browser behavior)\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n    return \"#\" + r + r + g + g + b + b;\n  });\n\n  var rgbaResult = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)!;\n  return {\n    hex: hex,\n    rgb: {\n      red: parseInt(rgbaResult[1], 16),\n      green: parseInt(rgbaResult[2], 16),\n      blue: parseInt(rgbaResult[3], 16),\n    },\n  };\n}\n\n/**\n * Generate a UUID. Modified from:\n * https://stackoverflow.com/questions/105034\n */\nexport function generateUUIDv4() {\n  const x = (([1e7] as any) + -1e3 + -4e3 + -8e3 + -1e11) as string;\n  return x.replace(/[018]/g, function (c: string) {\n    return (\n      parseInt(c) ^\n      (window.crypto.getRandomValues(new Uint8Array(1))[0] &\n        (15 >> (parseInt(c) / 4)))\n    ).toString(16);\n  });\n}\n\n/**\n * Creates an object composed of keys generated from the results of\n * running each element of collection through fn. The corresponding\n * value of each key is an array of the elements responsible for\n * generating the key. (description taken from lodash documentation)\n *\n * The difference between this function and the lodash \"groupBy\",\n * function is that this returns a Map object, allowing for more complex\n * keys.\n *\n * @param items\n * @param fn\n */\nexport function mapGroupBy<T1, T2>(\n  items: T1[],\n  fn: (item: T1) => T2\n): Map<T2, T1[]> {\n  //{ [key: string]: T[] } {\n  return items.reduce((acc, item) => {\n    const key = fn(item);\n    const existing = acc.get(key) ? acc.get(key)! : [];\n    acc.set(key, [...existing, item]);\n    return acc;\n  }, new Map<T2, T1[]>());\n}\n\n/**\n * Array type that requires at least one array element.\n * https://stackoverflow.com/questions/49910889\n */\nexport type ArrayOneOrMore<T> = {\n  0: T;\n} & Array<T>;\n","/**\n * This file centralizes the location of javascript style definitions\n * for nucleotide and amino acid styles.\n */\nimport styles from \"./MolecularStyles.module.scss\";\n//console.log(\"STYLES AS INPUT ::::: \", styles);\n\n/**\n * Defines a single color scheme interface which consists of\n * a name, className, background alpha, and set of colors for\n * all residues (hex string format).\n *\n * @export\n * @interface IColorScheme\n */\nexport interface IColorScheme {\n  commonName: string;\n  description: string;\n  backgroundAlpha: number;\n  className: string;\n  colors: {\n    [residueCode: string]: string;\n  };\n}\n\nexport const ALL_AMINOACID_COLORSCHEMES = assembleColorSchemes(\"aa\");\nexport const ALL_NUCLEOTIDE_COLORSCHEMES = assembleColorSchemes(\"nt\");\n\n/**\n * Read in class names and colors for amino acid or nucleotide\n * color schemes from the scss file.\n *\n * @param {(\"aa\" | \"nt\")} moleculeType\n * @returns\n */\nfunction assembleColorSchemes(moleculeType: \"aa\" | \"nt\") {\n  return Object.keys(styles).reduce((acc, styleName) => {\n    if (styleName.indexOf(moleculeType + \"StyClass_\") !== -1) {\n      const colorSchemeName = styleName.split(moleculeType + \"StyClass_\")[1];\n      const colorOrder = styles[\n        moleculeType + \"StyColorOrder_\" + colorSchemeName\n      ]\n        .replace(/ /g, \"\")\n        .split(\",\"); // \"build\" removes spaces, but local \"run\" does not\n      const hexValues = styles[moleculeType + \"StyColors_\" + colorSchemeName]\n        .replace(/ /g, \"\")\n        .split(\",\"); // \"build\" removes spaces, but local \"run\" does not\n      const description = styles[moleculeType + \"StyDesc_\" + colorSchemeName];\n      acc.push({\n        commonName: colorSchemeName,\n        description: description,\n        className: styles[styleName],\n        backgroundAlpha: parseFloat(\n          styles[moleculeType + \"StyBGAlpha_\" + colorSchemeName]\n        ),\n        colors: Object.fromEntries(\n          colorOrder.map((_, i) => [colorOrder[i], hexValues[i]])\n        ),\n      });\n    }\n    return acc;\n  }, [] as IColorScheme[]);\n}\n\n/**\n * Top level alignment type descriptions. There are two supported\n * alignment types: AMINOACID and NUCLEOTIDE.\n *\n * @export\n * @class AlignmentTypes\n */\nexport class AlignmentTypes {\n  static readonly AMINOACID = new AlignmentTypes(\n    \"aminoacid-alignment\",\n    \"Amino Acid Sequences\",\n    styles.aaAlignTypeClass,\n    ALL_AMINOACID_COLORSCHEMES\n  );\n  static readonly NUCLEOTIDE = new AlignmentTypes(\n    \"nucleotide-alignment\",\n    \"Nucleotide Sequences\",\n    styles.ntAlignTypeClass,\n    ALL_NUCLEOTIDE_COLORSCHEMES\n  );\n\n  static list = [AlignmentTypes.AMINOACID, AlignmentTypes.NUCLEOTIDE];\n\n  static fromKey(key: string) {\n    return AlignmentTypes.list.find((at) => {\n      return at.key === key;\n    });\n  }\n\n  private constructor(\n    public readonly key: string,\n    public readonly description: string,\n    public readonly className: string,\n    public readonly allColorSchemes: IColorScheme[]\n  ) {}\n}\n\n/**\n * This class represents different position styling modes.\n *\n * @export\n * @class PositionsToStyle\n */\nexport class PositionsToStyle {\n  static readonly ALL = new PositionsToStyle(\n    \"all\",\n    \"All\",\n    styles.styPosAllClass\n  );\n  static readonly QUERY = new PositionsToStyle(\n    \"query\",\n    \"Same as Query\",\n    styles.styPosQueryClass\n  );\n  static readonly QUERY_DIFF = new PositionsToStyle(\n    \"query-diff\",\n    \"Different from Query\",\n    styles.styPosQueryDiffClass\n  );\n  static readonly CONSENSUS = new PositionsToStyle(\n    \"consensus\",\n    \"Same as Consensus\",\n    styles.styPosConsensusClass\n  );\n  static readonly CONSENSUS_DIFF = new PositionsToStyle(\n    \"consensus-diff\",\n    \"Different from Consensus\",\n    styles.styPosConsensusDiffClass\n  );\n\n  static list = [\n    PositionsToStyle.ALL,\n    PositionsToStyle.QUERY,\n    PositionsToStyle.QUERY_DIFF,\n    PositionsToStyle.CONSENSUS,\n    PositionsToStyle.CONSENSUS_DIFF,\n  ];\n\n  static fromKey(key: string) {\n    return PositionsToStyle.list.find((at) => {\n      return at.key === key;\n    });\n  }\n\n  // private to disallow creating other instances of this type\n  private constructor(\n    public readonly key: string,\n    public readonly description: string,\n    public readonly className: string\n  ) {}\n}\n\nexport class ResidueStyle {\n  static readonly LIGHT = new ResidueStyle(\n    \"light\",\n    \"Light\",\n    styles.lightHueClass\n  );\n  static readonly DARK = new ResidueStyle(\"dark\", \"Dark\", styles.darkHueClass);\n  static readonly NO_BACKGROUND = new ResidueStyle(\n    \"lettersonly\",\n    \"Letters Only\",\n    styles.lettersOnlyHueClass\n  );\n\n  static list = [\n    ResidueStyle.DARK,\n    ResidueStyle.LIGHT,\n    ResidueStyle.NO_BACKGROUND,\n  ];\n\n  static fromKey(key: string) {\n    return ResidueStyle.list.find((at) => {\n      return at.key === key;\n    });\n  }\n\n  private constructor(\n    public readonly key: string,\n    public readonly description: string,\n    public readonly className: string\n  ) {}\n}\n\n/**\n * Object to describe the style of a set of sequences (MSA, logo, etc).\n * Contains 2 key parameters:\n *     \"alignmentType\": should be set by implementing classes\n *     \"colorScheme\": describes the color scheme to apply to the alignment.\n *                    defaults to the first available from the scss file\n *     \"positionsToStyle\": description of which positions should be styled.\n *                         defaults to all positions.\n *\n * @interface AlignmentStyle\n */\nexport abstract class AlignmentStyle {\n  abstract readonly alignmentType: AlignmentTypes;\n  abstract colorScheme: IColorScheme;\n  abstract positionsToStyle: PositionsToStyle;\n  abstract residueDetail: ResidueStyle;\n\n  static fromAlignmentType(alignmentType: AlignmentTypes) {\n    if (alignmentType === AlignmentTypes.AMINOACID)\n      return new AminoAcidAlignmentStyle();\n    return new NucleotideAlignmentStyle();\n  }\n}\n\n/**\n * Object to describe an amino acid alignment style\n * @class AminoAcidAlignmentStyle\n * @implements {AlignmentStyle}\n */\nexport class AminoAcidAlignmentStyle implements AlignmentStyle {\n  readonly allColorSchemes = ALL_AMINOACID_COLORSCHEMES;\n  readonly alignmentType = AlignmentTypes.AMINOACID;\n\n  constructor(\n    public colorScheme: IColorScheme = ALL_AMINOACID_COLORSCHEMES[0],\n    public positionsToStyle: PositionsToStyle = PositionsToStyle.ALL,\n    public residueDetail: ResidueStyle = ResidueStyle.LIGHT\n  ) {}\n}\n\n/**\n * Object to describe an nucleotide alignment style\n *\n * @export\n * @class NucleotideAlignmentStyle\n * @implements {AlignmentStyle}\n */\nexport class NucleotideAlignmentStyle implements AlignmentStyle {\n  readonly allColorSchemes = ALL_NUCLEOTIDE_COLORSCHEMES;\n  readonly alignmentType = AlignmentTypes.NUCLEOTIDE;\n\n  constructor(\n    public colorScheme: IColorScheme = ALL_NUCLEOTIDE_COLORSCHEMES[0],\n    public positionsToStyle: PositionsToStyle = PositionsToStyle.ALL,\n    public residueDetail: ResidueStyle = ResidueStyle.LIGHT\n  ) {}\n}\n\n/**\n * Export globals\n */\nconst darkHueClass = styles.darkHueClass;\nconst lightHueClass = styles.lightHueClass;\nconst aceResidueParentClass = styles.aceResidueParentClass;\nexport {\n  lightHueClass,\n  darkHueClass,\n  aceResidueParentClass, // place above any residue (e.g., ace_A) to get default coloring\n};\n\n/**\n * Export ace helper parameters and functions.\n */\n\n/**\n * fast lookup of the query, consensus classes\n * @param isForAceItself If it is for ace, do not include the ace_ prefix\n *                       as this is added automatically by ace itself.\n */\nfunction generateFastClassLookup(isForAceItself?: boolean) {\n  let ALL_POSSIBLE_CHARS = \"\";\n  for (var i = 32; i <= 126; i++) {\n    ALL_POSSIBLE_CHARS += String.fromCharCode(i);\n  }\n\n  return ALL_POSSIBLE_CHARS.split(\"\") //\".-abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    .reduce((acc, letter) => {\n      const letterInClass = letter === \".\" ? \"dot\" : letter;\n      const prefix = isForAceItself\n        ? letterInClass\n        : styles.acePrefix + letterInClass;\n      acc.set(\n        letter,\n        new Map([\n          [\n            true,\n            new Map([\n              [\n                true,\n                prefix +\n                  \" \" +\n                  styles.preAceConsensusClass +\n                  \" \" +\n                  styles.preAceQueryClass,\n              ], //is consensus and query\n              [false, prefix + \" \" + styles.preAceConsensusClass], //is consensus, not query\n            ]),\n          ],\n          [\n            false,\n            new Map([\n              [true, prefix + \" \" + styles.preAceQueryClass], //is query, not consensus\n              [false, prefix], //not query and not consensus\n            ]),\n          ],\n        ])\n      );\n      return acc;\n    }, new Map<string, Map<boolean, Map<boolean, string>>>());\n}\n\nconst LETTER_CLASS_NAMES = generateFastClassLookup(false);\nconst LETTER_CLASS_NAMES_FOR_ACE = generateFastClassLookup(true);\n\n/**\n * Export a class name array that is used by the ace editor\n * mode to fill class names for each letter. The structure\n * of this string is just the list of class names, separated\n * by a period. Ace subsequently prepends ace_ to each value\n * when adding the classes to the editor.\n *\n * Update: I only use a single class name separated by a space.\n *         I think this helps with performance:(1) ace no\n *         longer needs to split the returned value by periods\n *         and apply any multi-class logic, and (2) the dom has\n *         shorter classnames. I did rough tests and this seems\n *         to help with performance, but admittedly they were not\n *         rigerous or scientific and it doesn't seem to make a\n *         large impact.\n *\n * @param letter\n * @param isConsensus\n * @param isQuery\n * @param forAceItself if set to true, the first returned class will\n *                     not have ace_ prepended as the ace editor will\n *                     do the prepending on its own.\n */\nexport function getLetterClassNames(\n  letter: string,\n  isConsensus: boolean,\n  isQuery: boolean,\n  forAceItself?: boolean\n) {\n  return forAceItself\n    ? LETTER_CLASS_NAMES_FOR_ACE.get(letter)!.get(isConsensus)!.get(isQuery)!\n    : LETTER_CLASS_NAMES.get(letter)!.get(isConsensus)!.get(isQuery)!;\n}\n","/**\n *\n * Glyph definitions for the logo component.\n * Inspired / derived from https://github.com/weng-lab/logojs-package\n *\n */\nimport React from \"react\";\n\nexport class GlyphFactory {\n  private static singleton: undefined | GlyphFactory;\n\n  private letterToGlyphHM: {\n    [key: string]: (props: { [key: string]: string }) => JSX.Element;\n  } = {\n    A: GlyphFactory.A,\n    B: GlyphFactory.B,\n    C: GlyphFactory.C,\n    D: GlyphFactory.D,\n    E: GlyphFactory.E,\n    F: GlyphFactory.F,\n    G: GlyphFactory.G,\n    H: GlyphFactory.H,\n    I: GlyphFactory.I,\n    J: GlyphFactory.J,\n    K: GlyphFactory.K,\n    L: GlyphFactory.L,\n    M: GlyphFactory.M,\n    N: GlyphFactory.N,\n    O: GlyphFactory.O,\n    P: GlyphFactory.P,\n    Q: GlyphFactory.Q,\n    R: GlyphFactory.R,\n    S: GlyphFactory.S,\n    T: GlyphFactory.T,\n    U: GlyphFactory.U,\n    V: GlyphFactory.V,\n    W: GlyphFactory.W,\n    X: GlyphFactory.X,\n    Y: GlyphFactory.Y,\n    Z: GlyphFactory.Z\n  };\n\n  static glyphFromChar(letter: string) {\n    if (!GlyphFactory.singleton) {\n      GlyphFactory.singleton = new GlyphFactory();\n    }\n    return GlyphFactory.singleton.letterToGlyphHM[letter];\n  }\n\n  private static A = (props: { [key: string]: string }) => (\n    <g key={props.key + \"_g\"}>\n      <path\n        {...props}\n        d=\"M 0 100 L 33 0 L 66 0 L 100 100 L 75 100 L 66 75 L 33 75 L 25 100 L 0 100\"\n      />\n      <path\n        key={props.key + \"_p2\"}\n        transform={props.transform}\n        fill=\"#ffffff\"\n        d=\"M 41 55 L 50 25 L 58 55 L 41 55\"\n      />\n    </g>\n  );\n\n  private static B = (props: { [key: string]: string }) => (\n    <g key={props.key + \"_g\"}>\n      <path\n        {...props}\n        d=\"M 0 0 L 80 0 C 105 0 105 50 80 50 C 105 50 105 100 80 100 L 00 100 L 0 0\"\n      />\n      <path\n        key={props.key + \"_p2\"}\n        transform={props.transform}\n        d=\"M 20 15 L 70 15 C 80 15 80 35 70 35 L 20 35 L 20 15\"\n        fill=\"#ffffff\"\n      />\n      <path\n        key={props.key + \"_p3\"}\n        transform={props.transform}\n        d=\"M 20 65 L 70 65 C 80 65 80 85 70 85 L 20 85 L 20 65\"\n        fill=\"#ffffff\"\n      />\n    </g>\n  );\n\n  private static C = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 100 28 C 100 -13 0 -13 0 50\n      C 0 113 100 113 100 72 L 75 72\n      C 75 90 30 90 30 50 C 30 10 75 10 75 28\n      L 100 28\"\n    />\n  );\n\n  private static D = (props: { [key: string]: string }) => (\n    <g key={props.key + \"_g\"}>\n      <path {...props} d=\"M 0 0 L 60 0 C 110 0 110 100 60 100 L 0 100 L 0 0\" />\n      <path\n        key={props.key + \"_p2\"}\n        transform={props.transform}\n        fill=\"#ffffff\"\n        d=\"M 20 15 L 40 15 C 85 15 85 85 40 85 L 20 85 L 20 15\"\n      />\n    </g>\n  );\n\n  private static E = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 100 0 L 100 20 L 20 20 L 20 40 L 90 40 L 90 60 L 20 60 L 20 80 L 100 80 L 100 100 L 0 100 L 0 0\"\n    />\n  );\n\n  private static F = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 100 0 L 100 20 L 20 20 L 20 40 L 80 40 L 80 60 L 20 60 L 20 100 L 0 100 L 0 0\"\n    />\n  );\n\n  private static G = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 100 28 C 100 -13 0 -13 0 50 C 0 113 100 113 100 72 L 100 48 L 55 48 L 55 72 L 75 72 C 75 90 30 90 30 50 C 30 10 75 5 75 28 L 100 28\"\n    />\n  );\n\n  private static H = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 20 0 L 20 40 L 80 40 L 80 0 L 100 0 L 100 100 L 80 100 L 80 60 L 20 60 L 20 100 L 0 100 L 0 0\"\n    />\n  );\n\n  private static I = (props: { [key: string]: string }) => (\n    <path {...props} d=\"M 40 0 L 60 0 L 60 100 L 40 100 L 40 0\" />\n  );\n\n  private static J = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 60 C 0 111 100 111 100 60 L 100 0 L 75 0 L 75 60 C 80 90 20 90 25 60\"\n    />\n  );\n\n  private static K = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 20 0 L 20 40 L 75 0 L 100 0 L 50 50 L 100 100 L 75 100 L 30 65 L 20 75 L 20 100 L 0 100 L 0 0\"\n    />\n  );\n\n  private static L = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 0 100 L 100 100 L 100 80 L 20 80 L 20 0 L 0 0\"\n    />\n  );\n\n  private static M = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 20 0 L 50 35 L 80 0 L 100 0 L 100 100 L 80 100 L 80 30 L 50 65 L 20 30 L 20 100 L 0 100 L 0 0\"\n    />\n  );\n\n  private static N = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 100 L 0 0 L 20 0 L 80 75 L 80 0 L 100 0 L 100 100 L 80 100 L 20 25 L 20 100 L 0 100\"\n    />\n  );\n\n  private static O = (props: { [key: string]: string }) => (\n    <g key={props.key + \"_g\"}>\n      <circle cx=\"50\" cy=\"50\" r=\"50\" {...props} />\n      <circle\n        key={props.key + \"_c2\"}\n        transform={props.transform}\n        cx=\"50\"\n        cy=\"50\"\n        r=\"32\"\n        fill=\"#ffffff\"\n      />\n    </g>\n  );\n\n  private static P = (props: { [key: string]: string }) => (\n    <g key={props.key + \"_g\"}>\n      <path\n        {...props}\n        d=\"M 0 0 L 80 0 C 105 0 105 50 80 50 L 20 50 L 20 100 L 0 100 L 0 0\"\n      />\n      <path\n        key={props.key + \"_p2\"}\n        transform={props.transform}\n        fill=\"#ffffff\"\n        d=\"M 20 15 L 70 15 C 80 15 80 35 70 35 L 20 35 L 20 15\"\n      />\n    </g>\n  );\n\n  private static Q = (props: { [key: string]: string }) => (\n    <g key={props.key + \"_g\"}>\n      <circle\n        cx=\"50\"\n        cy=\"50\"\n        r=\"50\"\n        {...{ ...props, key: props.key + \"_c1\" }}\n      />\n      <circle\n        key={props.key + \"_c2\"}\n        transform={props.transform}\n        cx=\"50\"\n        cy=\"50\"\n        r=\"32\"\n        fill=\"#ffffff\"\n      />\n      <path d=\"M 85 100 L 55 70 L 70 55 L 100 85 L 85 100\" {...props} />\n    </g>\n  );\n\n  private static R = (props: { [key: string]: string }) => (\n    <g key={props.key + \"_g\"}>\n      <path\n        {...props}\n        d=\"M 0 0 L 80 0 C 105 0 105 50 80 50 C 100 50 100 70 100 70 L 100 100 L 80 100 L 80 80 C 80 80 80 60 50 60 L 20 60 L 20 100 L 0 100 L 0 0\"\n      />\n      <path\n        key={props.key + \"_p2\"}\n        transform={props.transform}\n        fill=\"#ffffff\"\n        d=\"M 20 15 L 70 15 C 80 15 80 35 70 35 L 20 35 L 20 15\"\n      />\n    </g>\n  );\n\n  /**\n   *NOTE: Requires \"stroke\" and \"strokeOpacity\" instead of just the fill prop.\n   */\n  private static S = (props: { [key: string]: string }) => {\n    if (!props.stroke) {\n      props.stroke = props.fill;\n    }\n    if (!props.strokeOpacity) {\n      props.strokeOpacity = props.fillOpacity;\n    }\n\n    return (\n      <path\n        fill=\"#ffffff\"\n        {...props}\n        strokeWidth=\"18\"\n        d=\"M92 26 A43 20 0 1 0 43 46 A42 23 0 1 1 9 68\"\n      />\n    );\n  };\n\n  private static T = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 0 20 L 35 20 L 35 100 L 65 100 L 65 20 L 100 20 L 100 0 L 0 0\"\n    />\n  );\n\n  private static U = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 0 60 C 0 111 100 111 100 60 L 100 0 L 75 0 L 75 60 C 80 90 20 90 25 60 L 25 0 L 0 0\"\n    />\n  );\n\n  private static V = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 20 0 L 50 80 L 80 0 L 100 0 L 60 100 L 40 100 L 0 0\"\n    />\n  );\n\n  private static W = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 20 0 L 30 70 L 50 30 L 70 70 L 80 0 L 100 0 L 90 100 L 70 100 L 50 65 L 30 100 L 10 100 L 0 0\"\n    />\n  );\n\n  private static X = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 20 0 L 50 40 L 80 0 L 100 0 L 70 50 L 100 100 L 80 100 L 50 60 L 20 100 L 0 100 L 30 50 L 0 0\"\n    />\n  );\n\n  private static Y = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 20 0 L 50 45 L 80 0 L 100 0 L 60 60 L 60 100 L 40 100 L 40 60 L 0 0\"\n    />\n  );\n\n  private static Z = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 100 0 L 100 20 L 35 80 L 100 80 L 100 100 L 0 100 L 0 80 L 65 20 L 0 20 L 0 0\"\n    />\n  );\n}\n","import { GlyphFactory } from \"./SequenceLogoGlyphs\";\nimport { stringToColor } from \"./Utils\";\nimport {\n  ALL_AMINOACID_COLORSCHEMES,\n  ALL_NUCLEOTIDE_COLORSCHEMES,\n} from \"./MolecularStyles\";\n\ninterface IResidueColor {\n  [colorScheme: string]: {\n    hexString: string;\n    rgb: {\n      red: number;\n      green: number;\n      blue: number;\n    };\n    backgroundAlpha: number;\n  };\n}\n\ninterface IAminoAcid {\n  singleLetterCode: string;\n  threeLetterCode: string;\n  fullName: string;\n  glyph: (props: { [key: string]: string }) => JSX.Element;\n  colors: IResidueColor;\n}\n\ninterface INucleotide {\n  singleLetterCode: string;\n  fullName: string;\n  glyph: (props: { [key: string]: string }) => JSX.Element;\n  colors: IResidueColor;\n}\n\nexport class AminoAcid implements IAminoAcid {\n  glyph: (props: { [key: string]: string }) => JSX.Element;\n  colors: IResidueColor;\n\n  public static readonly canonicalAminoAcids: AminoAcid[] = [\n    new AminoAcid(\"A\", \"ALA\", \"Alanine\"),\n    new AminoAcid(\"R\", \"ARG\", \"Arginine\"),\n    new AminoAcid(\"N\", \"ASN\", \"Asparagine\"),\n    new AminoAcid(\"D\", \"ASP\", \"Aspartic Acid\"),\n    new AminoAcid(\"C\", \"CYS\", \"Cysteine\"),\n    new AminoAcid(\"Q\", \"GLU\", \"Glutamine\"),\n    new AminoAcid(\"E\", \"GLN\", \"Glutamic Acid\"),\n    new AminoAcid(\"G\", \"GLY\", \"Glycine\"),\n    new AminoAcid(\"H\", \"HIS\", \"Histidine\"),\n    new AminoAcid(\"I\", \"ILE\", \"Isoleucine\"),\n    new AminoAcid(\"L\", \"LEU\", \"Leucine\"),\n    new AminoAcid(\"K\", \"LYS\", \"Lysine\"),\n    new AminoAcid(\"M\", \"MET\", \"Methionine\"),\n    new AminoAcid(\"F\", \"PHE\", \"Phenylalanine\"),\n    new AminoAcid(\"P\", \"PRO\", \"Proline\"),\n    new AminoAcid(\"S\", \"SER\", \"Serine\"),\n    new AminoAcid(\"T\", \"THR\", \"Threonine\"),\n    new AminoAcid(\"W\", \"TRP\", \"Tryptophan\"),\n    new AminoAcid(\"Y\", \"TYR\", \"Tyrosine\"),\n    new AminoAcid(\"V\", \"VAL\", \"Valine\"),\n\n    new AminoAcid(\"X\", \"UKN\", \"Unknown\"),\n  ];\n\n  private static bySingleLetterCode = AminoAcid.canonicalAminoAcids.reduce(\n    (acc, aa) => {\n      acc[aa.singleLetterCode] = aa;\n      return acc;\n    },\n    {} as { [key: string]: AminoAcid }\n  );\n\n  private static byThreeLetterCode = AminoAcid.canonicalAminoAcids.reduce(\n    (acc, aa) => {\n      acc[aa.threeLetterCode] = aa;\n      return acc;\n    },\n    {} as { [key: string]: AminoAcid }\n  );\n\n  public static readonly UNKNOWN = AminoAcid.bySingleLetterCode[\"X\"];\n\n  static fromSingleLetterCode(singleLetterCode: string): IAminoAcid {\n    if (singleLetterCode in this.bySingleLetterCode) {\n      return AminoAcid.bySingleLetterCode[singleLetterCode];\n    }\n    return AminoAcid.UNKNOWN;\n  }\n\n  static fromThreeLetterCode(threeLetterCode: string): IAminoAcid {\n    if (threeLetterCode in this.byThreeLetterCode) {\n      return AminoAcid.byThreeLetterCode[threeLetterCode];\n    }\n    return AminoAcid.UNKNOWN;\n  }\n\n  constructor(\n    public singleLetterCode: string,\n    public threeLetterCode: string,\n    public fullName: string\n  ) {\n    this.singleLetterCode = singleLetterCode;\n    this.threeLetterCode = threeLetterCode;\n    this.fullName = fullName;\n    this.glyph = GlyphFactory.glyphFromChar(singleLetterCode);\n    this.colors = ALL_AMINOACID_COLORSCHEMES.reduce((acc, cs) => {\n      const colorPair = Object.entries(cs.colors).find(([aa, color]) => {\n        if (aa === singleLetterCode) {\n          return true;\n        }\n        return false;\n      });\n\n      let colorString = \"#ffffff\";\n      if (colorPair) {\n        colorString = colorPair[1];\n      }\n      const colorInfo = stringToColor(colorString);\n      acc[cs.commonName] = {\n        hexString: colorInfo.hex,\n        rgb: colorInfo.rgb,\n        backgroundAlpha: cs.backgroundAlpha,\n      };\n      return acc;\n    }, {} as IResidueColor);\n  }\n}\n\nexport class Nucleotide implements INucleotide {\n  glyph: (props: { [key: string]: string }) => JSX.Element;\n  colors: IResidueColor;\n\n  static allNucleotides: Nucleotide[] = [\n    new Nucleotide(\"A\", \"Adenine\"),\n    new Nucleotide(\"C\", \"Cytosine\"),\n    new Nucleotide(\"G\", \"Guanine\"),\n    new Nucleotide(\"T\", \"Thymidine\"),\n    new Nucleotide(\"U\", \"Uracil\"),\n\n    new Nucleotide(\"R\", \"Purine\"),\n    new Nucleotide(\"Y\", \"Pyrimidine\"),\n\n    new Nucleotide(\"X\", \"Unknown\"),\n  ];\n\n  private static bySingleLetterCode = Nucleotide.allNucleotides.reduce(\n    (acc, aa) => {\n      acc[aa.singleLetterCode] = aa;\n      return acc;\n    },\n    {} as { [key: string]: Nucleotide }\n  );\n\n  public static UNKNOWN = Nucleotide.bySingleLetterCode[\"X\"];\n\n  static fromSingleLetterCode(singleLetterCode: string): Nucleotide {\n    singleLetterCode = singleLetterCode.toUpperCase();\n    if (this.bySingleLetterCode[singleLetterCode]) {\n      return Nucleotide.bySingleLetterCode[singleLetterCode];\n    }\n    return Nucleotide.UNKNOWN;\n  }\n\n  constructor(public singleLetterCode: string, public fullName: string) {\n    this.singleLetterCode = singleLetterCode;\n    this.fullName = fullName;\n    this.glyph = GlyphFactory.glyphFromChar(singleLetterCode);\n    this.colors = ALL_NUCLEOTIDE_COLORSCHEMES.reduce((acc, cs) => {\n      const colorPair = Object.entries(cs.colors).find(([aa, color]) => {\n        if (aa === singleLetterCode) {\n          return true;\n        }\n        return false;\n      });\n\n      let colorString = \"#ffffff\";\n      if (colorPair) {\n        colorString = colorPair[1];\n      }\n      const colorInfo = stringToColor(colorString);\n      acc[cs.commonName] = {\n        hexString: colorInfo.hex,\n        rgb: colorInfo.rgb,\n        backgroundAlpha: cs.backgroundAlpha,\n      };\n      return acc;\n    }, {} as IResidueColor);\n  }\n}\n","import { generateUUIDv4 } from \"./Utils\";\nimport { defineNewAlignmentMode } from \"./AceAlignmentMode\";\nimport { Nucleotide } from \"./Residues\";\nimport {\n  AlignmentTypes,\n  AminoAcidAlignmentStyle,\n  NucleotideAlignmentStyle,\n} from \"./MolecularStyles\";\n\nexport interface ISequence {\n  id: string;\n  sequence: string;\n}\n\nenum DistanceFunctions {\n  \"hamming\",\n}\nexport class SequenceSortOptions {\n  static readonly INPUT = new SequenceSortOptions(\n    \"as-input\",\n    \"As input\",\n    false\n  );\n  static readonly HAMMING_DIST_TARGET = new SequenceSortOptions(\n    \"hamming-dist-to-target\",\n    \"Hamming distance to target sequence\",\n    true,\n    DistanceFunctions.hamming\n  );\n\n  static list = [\n    SequenceSortOptions.INPUT,\n    SequenceSortOptions.HAMMING_DIST_TARGET,\n  ];\n\n  static fromKey(key: string) {\n    return SequenceSortOptions.list.find((at) => {\n      return at.key === key;\n    });\n  }\n\n  private constructor(\n    public readonly key: string,\n    public readonly description: string,\n    public readonly isTargetSequenceDependent: boolean,\n    public readonly distanceFn?: DistanceFunctions\n  ) {}\n}\n\n/**\n * Alignment\n * This class represents a multiple sequence alignment. During initialization,\n * positional statistics are generated about the alignment and a consensus\n * sequence is determined.\n *\n * The class should be instantiated using the static methods:\n *     fromFileContents: accepts a fasta file-like string\n */\nexport class Alignment {\n  private uuid: string;\n  private aceEditorMode: string | undefined;\n  private name: string;\n  private predictedNT: boolean;\n  private sequences: Map<SequenceSortOptions, ISequence[]>;\n  private targetSequence: ISequence;\n  private positionalLetterCounts = new Map<\n    number,\n    { [letter: string]: number }\n  >();\n  private globalAlphaLetterCounts: { [letter: string]: number } = {};\n  private allUpperAlphaLettersInAlignmentSorted: string[];\n  private consensus: {\n    letter: string;\n    position: number;\n    occurrences: number;\n  }[] = [];\n\n  /**\n   * Determine the distance between two sequences\n   * @param seq1\n   * @param seq2\n   * @param distFn what method should be used to calculate distance\n   * @returns the distance between the sequence pair\n   * @throws an Error if an invalid distance function is provided.\n   */\n  private static getSequenceDistance(\n    seq1: ISequence,\n    seq2: ISequence,\n    distFn: DistanceFunctions\n  ) {\n    const minLength =\n      seq1.sequence.length < seq2.sequence.length\n        ? seq1.sequence.length\n        : seq2.sequence.length;\n    let distance = 0;\n\n    if (distFn === DistanceFunctions.hamming) {\n      for (var i = 0; i < minLength; i++) {\n        if (seq1.sequence[i] !== seq2.sequence[i]) {\n          distance += 1;\n        }\n      }\n      return distance;\n    }\n    throw Error(\n      \"Unable to determine sequence distance with distance function \" + distFn\n    );\n  }\n\n  /**\n   * Normalize all values in an object that contains all counts such that\n   * the sum of those counts equals 1.\n   * @param letterCounts an object that contains the same keys, but whose\n   *                     values now sum to 1.\n   * @param validLetters if provided, returned object will only contain letters\n   *                     that are in this array.\n   */\n  private static normalizeLetterCounts(\n    letterCounts: { [letter: string]: number },\n    validLetters?: string[]\n  ) {\n    const totalCounts = Object.keys(letterCounts).reduce((acc, letter) => {\n      if (!validLetters || validLetters.includes(letter)) {\n        acc += letterCounts[letter];\n      }\n      return acc;\n    }, 0);\n\n    return Object.keys(letterCounts).reduce((acc, letter) => {\n      if (!validLetters || validLetters.includes(letter)) {\n        acc[letter] = letterCounts[letter] / totalCounts;\n      }\n      return acc;\n    }, {} as { [letter: string]: number });\n  }\n\n  /**\n   * Create a new Alignment object. The default target sequence will\n   * be set to the first sequence in sequences. This can be changed\n   * by calling setTargetSequence() after creation\n   * @param sequences\n   */\n  public constructor(name: string, sequencesAsInput: ISequence[]) {\n    this.uuid = generateUUIDv4();\n    this.name = name;\n    this.sequences = new Map<SequenceSortOptions, ISequence[]>();\n    this.sequences.set(SequenceSortOptions.INPUT, sequencesAsInput);\n    this.targetSequence = sequencesAsInput[0];\n    this.predictedNT = true;\n\n    //\n    //generate statistics\n    //\n    const start = new Date();\n    const allLettersInAlignment: { [key: string]: number } = {}; //all letters in the alignment\n\n    //this for loop takes the bulk of the time\n    for (\n      let sequenceIdx = 0;\n      sequenceIdx < sequencesAsInput.length;\n      sequenceIdx++\n    ) {\n      const seq = sequencesAsInput[sequenceIdx].sequence;\n      for (let positionIdx = 0; positionIdx < seq.length; positionIdx++) {\n        const letter = seq[positionIdx];\n        const letterIsAlpha = letter.match(/[a-z]/i) ? true : false;\n        if (\n          letterIsAlpha &&\n          this.predictedNT &&\n          Nucleotide.fromSingleLetterCode(letter) === Nucleotide.UNKNOWN\n        ) {\n          this.predictedNT = false;\n        }\n\n        const position = positionIdx; // zero based\n        allLettersInAlignment[letter] = 1;\n\n        let letterCounts = this.positionalLetterCounts.get(position);\n        if (!letterCounts) {\n          letterCounts = {};\n          this.positionalLetterCounts.set(position, letterCounts);\n        }\n        if (letter in letterCounts === false) {\n          letterCounts[letter] = 0;\n        }\n        letterCounts[letter] += 1;\n\n        if (letterIsAlpha) {\n          if (letter in this.globalAlphaLetterCounts === false) {\n            this.globalAlphaLetterCounts[letter] = 0;\n          }\n          this.globalAlphaLetterCounts[letter] += 1;\n        }\n      }\n    }\n\n    this.allUpperAlphaLettersInAlignmentSorted = Object.keys(\n      allLettersInAlignment\n    )\n      .sort()\n      .reduce((arr: string[], value: string) => {\n        if (value.match(/[A-Z]/)) {\n          // only keep letters\n          arr.push(value);\n        }\n        return arr;\n      }, []);\n\n    this.consensus = Array.from(this.positionalLetterCounts).map(\n      ([position, letterCounts]) => {\n        const topLetter = Object.keys(letterCounts).reduce((a, b) => {\n          const aIsLetter = a.match(/[a-z]/i);\n          const bIsLetter = b.match(/[a-z]/i);\n          if (aIsLetter && !bIsLetter) {\n            return a;\n          }\n          if (bIsLetter && !aIsLetter) {\n            return b;\n          }\n          return letterCounts[a] > letterCounts[b] ? a : b;\n        });\n        return {\n          position: position,\n          letter: topLetter,\n          occurrences: letterCounts[topLetter],\n        };\n      }\n    );\n    console.log(\n      \"done parsing alignment. took \" +\n        (new Date().getTime() - start.getTime()) +\n        \"ms\"\n    );\n  }\n\n  /**\n   * Is this alignment predicted to be nucleotides?\n   * @returns true if it is predicted to be nucleotide sequences.\n   */\n  getPredictedType(): AlignmentTypes {\n    return this.predictedNT\n      ? AlignmentTypes.NUCLEOTIDE\n      : AlignmentTypes.AMINOACID;\n  }\n\n  /**\n   * Returns a default nucleotide or amino acid style for this alignment,\n   * predicted from the sequence itself.\n   */\n  getDefaultStyle(): AminoAcidAlignmentStyle | NucleotideAlignmentStyle {\n    return this.predictedNT\n      ? new NucleotideAlignmentStyle()\n      : new AminoAcidAlignmentStyle();\n  }\n\n  /**\n   * Get a unique uuid for this alignment.\n   * @returns a uuid string for this alignment\n   */\n  getUUID() {\n    return this.uuid;\n  }\n\n  /**\n   * Get the name of this alignment\n   * @returns a name for the alignment - usually the filename\n   */\n  getName() {\n    return this.name;\n  }\n\n  /**\n   * Get an ace editor mode for this alignemnt. If one doesn't exist\n   * then it will be defined.\n   * @returns the ace editor mode for this alignment\n   */\n  getAceEditorMode() {\n    if (!this.aceEditorMode) {\n      this.aceEditorMode = \"ace/mode/\" + this.uuid;\n      defineNewAlignmentMode(this.aceEditorMode, this);\n    }\n    return this.aceEditorMode;\n  }\n\n  /**\n   * Get the consensus sequence\n   * @returns a position ordered array of objects that contain each letter, its number of\n   *          occurrences, and the actual position number\n   */\n  getConsensus() {\n    return this.consensus;\n  }\n\n  /**\n   * Get the number of gaps at each position\n   * @returns an array of gap counts, ordered by position\n   */\n  getGapsPerColumn(): number[] {\n    return Array.from(this.positionalLetterCounts).map(\n      ([position, letterCounts]) => {\n        return !isNaN(letterCounts[\"-\"]) ? letterCounts[\"-\"] : 0;\n      }\n    );\n  }\n\n  /**\n   * Get the number of gaps at a specific position\n   * @returns the gap counts at the specified position\n   */\n  getGapCountAtColumn(position: number): number {\n    const letterCounts = this.positionalLetterCounts.get(position);\n    if (!letterCounts || !letterCounts[\"-\"]) {\n      return 0;\n    }\n    return letterCounts[\"-\"];\n  }\n\n  /**\n   * Get the total number of times each letter appears in the alignment.\n   * @param normalize if true, will normalize the returned array such that\n   *                  it sums to 1.\n   * @param validLetters if provided, only those letters will be included\n   *                     in the resulting counts\n   */\n  getGlobalAlphaLetterCounts(normalize?: boolean, validLetters?: string[]) {\n    if (normalize) {\n      return Alignment.normalizeLetterCounts(\n        this.globalAlphaLetterCounts,\n        validLetters\n      );\n    }\n    return !validLetters\n      ? this.globalAlphaLetterCounts\n      : Object.keys(this.globalAlphaLetterCounts).reduce((acc, letter) => {\n          //don't normalize, but remove invalid letters\n          if (validLetters.includes(letter)) {\n            acc[letter] = this.globalAlphaLetterCounts[letter];\n          }\n          return acc;\n        }, {} as { [letter: string]: number });\n  }\n\n  /**\n   * Get the length of the longest sequence\n   * @returns the length of the largest sequence in this alignment\n   */\n  getMaxSequenceLength(): number {\n    return this.getSequences().reduce((acc, seq) => {\n      if (seq.sequence.length > acc) {\n        acc = seq.sequence.length;\n      }\n      return acc;\n    }, -1);\n  }\n\n  /**\n   * Get the frequencies of all letters in this alignment for each position.\n   * @param normalize if true, will normalize the returned letter counts for each\n   *                  position such that each sums to 1.\n   * @param validLetters if provided, only those letters will be included\n   *                     in the resulting counts\n   * @returns a Map whose keys are position (ordered) and values are a dictionary\n   *          with [key = letter (e.g., amino acid code)] and [value = # occurrences].\n   * TODO: Test parameter use cases.\n   */\n  getPositionalLetterCounts(normalize?: boolean, validLetters?: string[]) {\n    if (normalize || validLetters) {\n      return Array.from(this.positionalLetterCounts).reduce(\n        (acc, [position, letterCounts]) => {\n          acc.set(\n            position,\n            normalize\n              ? Alignment.normalizeLetterCounts(letterCounts, validLetters) // normalize + remove invalid letters\n              : Object.keys(letterCounts).reduce((acc2, letter) => {\n                  //don't normalize, but remove invalid letters\n                  if (validLetters!.includes(letter)) {\n                    acc2[letter] = letterCounts[letter];\n                  }\n                  return acc2;\n                }, {} as { [letter: string]: number })\n          );\n          return acc;\n        },\n        new Map<Number, { [letter: string]: number }>()\n      );\n    }\n    return this.positionalLetterCounts;\n  }\n\n  /**\n   * Get all the sequences in this alignment - ordered as they were input\n   * @param sortBy specifies the order of the returned sequences. If it isn't\n   *               provided, returns the sequences as they were input to create\n   *               the Alignment object, e.g., usually fasta order.\n   * @param forceReSort if provided, sequences are forced to be re-sorted (rather\n   *                    than possibly cached)\n   * @returns all sequences in this alignment\n   */\n  getSequences(\n    sortBy?: SequenceSortOptions,\n    forceReSort?: boolean\n  ): ISequence[] {\n    sortBy = sortBy ? sortBy : SequenceSortOptions.INPUT;\n    forceReSort = forceReSort ? forceReSort : false;\n    if (!this.sequences.has(sortBy) || forceReSort) {\n      //cache not yet populated for this sort option\n      switch (sortBy) {\n        case SequenceSortOptions.INPUT:\n          break;\n        case SequenceSortOptions.HAMMING_DIST_TARGET:\n          this.sequences.set(\n            sortBy,\n            this.sortByDistanceToTargetSequence(\n              SequenceSortOptions.HAMMING_DIST_TARGET.distanceFn!\n            )\n          );\n          break;\n        default:\n          throw Error(\n            `The sortBy option provided \"${sortBy}\" is not implemented`\n          );\n      }\n    }\n    return this.sequences.get(sortBy)!;\n  }\n\n  /**\n   * Get a sorted list of all of the upper case letters in the alignment.\n   * @returns a list of all letters in the alignment sorted alphabetically.\n   */\n  getAllUpperAlphaLettersInAlignmentSorted(): string[] {\n    return this.allUpperAlphaLettersInAlignmentSorted;\n  }\n\n  /**\n   * Get all the first sequence in the alignment, aka, target / query / first\n   * @returns all sequences in this alignment\n   */\n  getTargetSequence(): ISequence {\n    return this.targetSequence;\n  }\n\n  /**\n   * Set the target sequence\n   * @param newTarget The new target sequence. Must already exist in the alignment.\n   * @throws an error if the target sequence does not yet exist in the alignment\n   *\n   * IMPORTANT: Requires re-sorting\n   */\n  setTargetSequence(newTarget: ISequence) {\n    const targetInAlignment = this.getSequences().find((seq) => {\n      if (seq === newTarget) {\n        return true;\n      }\n      return false;\n    });\n    if (targetInAlignment !== undefined) {\n      this.targetSequence = newTarget;\n\n      this.sequences.forEach(\n        (sequences: ISequence[], sortBy: SequenceSortOptions) => {\n          this.getSequences(sortBy, true); // force re-sorting, which updates cache\n        }\n      );\n    } else {\n      throw Error(\"target sequence does not exist in alignment\");\n    }\n  }\n\n  /**\n   * This method sorts sequences or\n   * Sort the current alignment similarity to the target sequence\n   * @returns a new alignment whose sequences are sorted in descending\n   *          order by similarity to the target sequence.\n   */\n  private sortByDistanceToTargetSequence(distFn: DistanceFunctions) {\n    const inputSequences = this.getSequences();\n    switch (distFn) {\n      case DistanceFunctions.hamming:\n        return inputSequences\n          .map((s) => s)\n          .sort((seq1, seq2) => {\n            const dist1 = Alignment.getSequenceDistance(\n              this.targetSequence,\n              seq1,\n              DistanceFunctions.hamming\n            );\n            const dist2 = Alignment.getSequenceDistance(\n              this.targetSequence,\n              seq2,\n              DistanceFunctions.hamming\n            );\n            return dist1 - dist2;\n          });\n      default:\n        throw Error(\n          `The distFn option provided \"${distFn}\" is not implemented`\n        );\n    }\n  }\n}\n","import { Ace } from \"ace-builds\";\n\n/**\n * ScrollSync.ts\n * This helper is used to synchronize the different ace and div scrolling\n * scrolling.\n *\n * Example usage:\n *     import ScrollSync from './ScrollSync';\n *     let scrollSyncV = new ScrollSync(ScrollType.vertical);\n *     scrollSyncV.registerScroller(domElement);\n *     scrollSyncV.registerScroller(aceEditor);\n *\n * Ideas adapted to work with both dom elements and ace from 2 projects\n * (each of which are aimed at dom elements):\n *   https://github.com/okonet/react-scroll-sync\n *   https://github.com/AhmadMHawwash/scroll-sync-react\n */\nexport enum ScrollType {\n  vertical,\n  horizontal,\n  both,\n}\n\nexport class ScrollSync {\n  private scrollDirection: ScrollType.vertical | ScrollType.horizontal;\n  private aceEditorDirection: \"changeScrollLeft\" | \"changeScrollTop\";\n  private scrollers: (Ace.Editor | HTMLElement)[];\n\n  //reuse the same scroll functions for each element / ace editor\n  private scrollFnHandles: Map<\n    Ace.Editor | HTMLElement,\n    (this: HTMLElement) => any\n  >;\n\n  /*\n   *\n   *\n   * PUBLIC METHODS\n   *\n   *\n   */\n  constructor(scrollDirection: ScrollType.vertical | ScrollType.horizontal) {\n    this.scrollDirection = scrollDirection;\n    this.aceEditorDirection =\n      scrollDirection === ScrollType.horizontal\n        ? \"changeScrollLeft\"\n        : \"changeScrollTop\";\n    this.scrollers = [];\n    this.scrollFnHandles = new Map<\n      Ace.Editor | HTMLElement,\n      (this: HTMLElement) => any\n    >();\n  }\n\n  /**\n   * Register a scroller with this scroll sync. By attaching\n   * the scroll events only when a scroll is possible, we avoid\n   * ths jerky-ness and potential forever loop of one scroll\n   * updating another back and forth.\n   * @param scroller\n   */\n  registerElementScroller(scroller: HTMLElement) {\n    if (!this.scrollers.includes(scroller)) {\n      this.scrollers.push(scroller);\n      scroller.addEventListener(\"mouseenter\", () => {\n        this.addScrollEvents(scroller);\n      });\n      scroller.addEventListener(\"mouseleave\", () => {\n        this.removeScrollEvents(scroller);\n      });\n    }\n  }\n\n  /**\n   * Register a scroller with this scroll sync. By attaching\n   * the scroll events only when a scroll is possible, we avoid\n   * ths jerky-ness and potential forever loop of one scroll\n   * updating another back and forth.\n   * Note - the ace editor doesn't have a native mouseenter/leave\n   * so we need to use the parent element's event listeners.\n   * @param scroller\n   */\n  registerAceScroller(scroller: Ace.Editor, parentElem: HTMLElement) {\n    if (!this.scrollers.includes(scroller)) {\n      this.scrollers.push(scroller);\n\n      parentElem.addEventListener(\"mouseenter\", () => {\n        this.addScrollEvents(scroller);\n      });\n      parentElem.addEventListener(\"mouseleave\", () => {\n        this.removeScrollEvents(scroller);\n      });\n    }\n  }\n\n  /**\n   * Deregister a scroller with this scroll sync\n   * Requires removal of mouse events also ..\n   * @param scroller\n   */\n  //unRegisterScroller(scroller: HTMLElement | Ace.Editor) {\n  //  this.scrollers = this.scrollers.filter((s) => s !== scroller);\n  //  this.removeScrollEvents(scroller);\n  //}\n\n  /*\n   *\n   *\n   * PRIVATE METHODS\n   *\n   *\n   */\n  private isAceEditor(x: Ace.Editor | HTMLElement): x is Ace.Editor {\n    return \"renderer\" in x;\n  }\n\n  /**\n   * Execute the scroll changes to all group scrollers.\n   *\n   * Note: the reason for jumpy scrolling I think is due\n   * to easing from the scroller, that doesn't happen with the\n   * scrollSibling. I'm not sure how to fix (one thought was\n   * to cancel the scroll event and set the position myself,\n   * but one can't cancel a scroll event).\n   */\n  private handleScroll = (\n    scroller: Ace.Editor | HTMLElement,\n    event?: Event\n  ) => {\n    const siblingScrollers = this.scrollers.filter(\n      (possibleSib) => possibleSib !== scroller\n    );\n    siblingScrollers.forEach((siblingScroller) => {\n      this.syncScrollPosition(scroller, siblingScroller);\n    });\n  };\n\n  /**\n   * This function executes the actual position sync\n   * @param scroller\n   * @param siblingScroller\n   */\n  private syncScrollPosition(\n    scroller: Ace.Editor | HTMLElement,\n    siblingScroller: Ace.Editor | HTMLElement\n  ) {\n    if (this.scrollDirection === ScrollType.horizontal) {\n      const newScrollLeft = this.isAceEditor(scroller)\n        ? scroller.session.getScrollLeft()\n        : scroller.scrollLeft;\n\n      if (this.isAceEditor(siblingScroller)) {\n        if (siblingScroller.session.getScrollLeft() !== newScrollLeft) {\n          siblingScroller.session.setScrollLeft(newScrollLeft);\n        }\n      } else if (siblingScroller.scrollLeft !== newScrollLeft) {\n        siblingScroller.scrollLeft = newScrollLeft;\n      }\n    } else {\n      const newScrollTop = this.isAceEditor(scroller)\n        ? scroller.session.getScrollTop()\n        : scroller.scrollTop;\n\n      if (this.isAceEditor(siblingScroller)) {\n        if (siblingScroller.session.getScrollTop() !== newScrollTop) {\n          siblingScroller.session.setScrollTop(newScrollTop);\n        }\n      } else if (siblingScroller.scrollTop !== newScrollTop) {\n        siblingScroller.scrollTop = newScrollTop;\n      }\n    }\n  }\n\n  /**\n   * Add event listeners and functions from a particular scroller\n   * @param scroller\n   */\n  private addScrollEvents(scroller: Ace.Editor | HTMLElement) {\n    if (!this.scrollFnHandles.has(scroller)) {\n      this.scrollFnHandles.set(\n        scroller,\n        this.handleScroll.bind(this, scroller)\n      );\n    }\n\n    const scrollFn = this.scrollFnHandles.get(scroller)!;\n    if (this.isAceEditor(scroller)) {\n      scroller.session.on(this.aceEditorDirection, scrollFn);\n    } else {\n      scroller.addEventListener(\"scroll\", scrollFn);\n    }\n  }\n\n  /**\n   * Remove event listeners and functions from a particular scroller\n   * @param scroller\n   */\n  private removeScrollEvents(scroller: Ace.Editor | HTMLElement) {\n    const scrollFn = this.scrollFnHandles.get(scroller);\n    if (scrollFn) {\n      if (this.isAceEditor(scroller)) {\n        scroller.session.off(this.aceEditorDirection, scrollFn);\n      } else {\n        scroller.removeEventListener(\"scroll\", scrollFn);\n      }\n    } else {\n      console.log(\"failed to remove scrollFn\");\n    }\n  }\n}\n","/**\n * AceAlignmentMode.js\n * This file defines an alignment highlight mode form ace editor documents.\n */\n\nimport { default as ace } from \"ace-builds\";\nimport { Alignment } from \"./Alignment\";\nimport { getLetterClassNames } from \"./MolecularStyles\";\n\ninterface IAceType {\n  [key: string]: any;\n}\n\nexport function defineNewAlignmentMode(mode: string, alignment: Alignment) {\n  const modeSplit = mode.split(\"/\");\n  if (\n    modeSplit.length !== 3 ||\n    modeSplit[0] !== \"ace\" ||\n    modeSplit[1] !== \"mode\"\n  ) {\n    throw Error(\"ace mode name must be of the form '/ace/mode/MODENAME'\");\n  }\n  const modeName = mode.split(\"/\")[2];\n\n  (ace as IAceType).define(\n    \"ace/mode/\" + modeName + \"_highlight_rules\",\n    function (require: Function, exports: any, module: any) {\n      var oop = require(\"../lib/oop\");\n      var TextHighlightRules = require(\"./text_highlight_rules\")\n        .TextHighlightRules;\n\n      /**\n       * Rules parse individual characters in the editor and assign classes\n       * to each character. Note that characters will be grouped together\n       * if they match the same rule and are side by side.\n       */\n      var AlignmentHighlightRules = function (this: any) {\n        //We define an alignment-specific set of rules that will\n        //add classes including whether a character matches the\n        //consensus sequence, matches the query etc.\n        let rules: {\n          [key: string]: {\n            token: (letter: string) => void;\n            regex: RegExp;\n            next: string;\n          }[];\n        } = {};\n\n        //note: this is by far the thing that kills performance the most\n        //      I'm not sure whether it is due to how it parses (state machine)\n        //      slowing things down, or whether it is an issue with attaching\n        //      ~4 classes to every single residue -- either way, removing parsing\n        //      all together makes it much more snappy and also decreases the\n        //      memory footprint drastically.\n        const re = /./;\n        const statePrefix = \"p\";\n        for (let i = 0; i < alignment.getMaxSequenceLength(); i++) {\n          const stateName = i === 0 ? \"start\" : statePrefix + i;\n          const nextStateName =\n            i === alignment.getMaxSequenceLength() - 1\n              ? \"start\"\n              : statePrefix + (i + 1);\n\n          rules[stateName] = [\n            {\n              token: function (letter: string) {\n                const toreturn = getLetterClassNames(\n                  letter,\n                  letter === alignment.getConsensus()[i].letter,\n                  letter === alignment.getTargetSequence().sequence[i],\n                  true\n                );\n                return toreturn;\n              },\n              regex: re,\n              next: nextStateName,\n            },\n          ];\n        }\n        this.$rules = rules;\n      };\n\n      oop.inherits(AlignmentHighlightRules, TextHighlightRules);\n\n      exports.AlignmentHighlightRules = AlignmentHighlightRules;\n    }\n  );\n\n  (ace as IAceType).define(\"ace/mode/\" + modeName, function (\n    require: Function,\n    exports: any,\n    module: any\n  ) {\n    var oop = require(\"../lib/oop\");\n    var TextMode = require(\"../mode/text\").Mode;\n    var Tokenizer = require(\"../tokenizer\").Tokenizer;\n    var AlignmentHighlightRules = require(\"ace/mode/\" +\n      modeName +\n      \"_highlight_rules\").AlignmentHighlightRules;\n\n    const Mode = function (this: any) {\n      this.$tokenizer = new Tokenizer(new AlignmentHighlightRules().getRules());\n    };\n\n    oop.inherits(Mode, TextMode);\n\n    (function () {\n      // Extra logic goes here. (see below)\n    }.call(Mode.prototype));\n\n    exports.Mode = Mode;\n  });\n}\n","/**\n * Sequence logo component.\n * Inspired / derived from https://github.com/weng-lab/logojs-package\n *  (but simpler)\n */\n\nimport React from \"react\";\nimport \"./SequenceLogo.scss\";\nimport { Alignment } from \"../common/Alignment\";\nimport { GlyphFactory } from \"../common/SequenceLogoGlyphs\";\nimport {\n  aceResidueParentClass,\n  getLetterClassNames,\n  AlignmentTypes,\n} from \"../common/MolecularStyles\";\nimport ReactTooltip from \"react-tooltip\";\nimport { AminoAcid, Nucleotide } from \"../common/Residues\";\n\nexport enum LOGO_TYPES {\n  LETTERS = \"Letter Stack\",\n  BARS = \"Bar Plot\",\n}\n\ninterface ILetterWithClasses {\n  letter: string;\n  classNames: string;\n}\ninterface IGlyphFrequency {\n  count: number;\n  frequency: number;\n  letter: ILetterWithClasses;\n  residue: AminoAcid | Nucleotide;\n}\ninterface IGlyphStackData extends Array<IGlyphFrequency> {}\n\nexport interface ISequenceLogoProps {\n  alignment: Alignment;\n  glyphWidth: number;\n  logoType: LOGO_TYPES;\n  alignmentType?: AlignmentTypes;\n}\n\ninterface ISequenceLogoState {\n  logoData?: IGlyphStackData;\n}\n\nexport class SequenceLogoComponent extends React.Component<\n  ISequenceLogoProps,\n  ISequenceLogoState\n> {\n  private logoData?: IGlyphStackData[];\n\n  static defaultProps = {\n    logoType: LOGO_TYPES.LETTERS,\n    height: 100,\n  };\n\n  /*\n   *\n   *\n   * PRIVATE METHODS\n   *\n   *\n   */\n\n  private renderTooltip() {\n    return (\n      <ReactTooltip\n        id=\"getLogoTooltip\"\n        effect=\"solid\"\n        type=\"light\"\n        border={true}\n        getContent={(idx: string) => {\n          if (!idx || !this.logoData) {\n            return;\n          }\n\n          const position = parseInt(idx) + 1;\n          const glyphData = this.logoData![parseInt(idx)];\n          return glyphData.length === 0 ? null : (\n            <div className=\"logo-tooltip\">\n              <h1>Position: {position}</h1>\n              <div className=\"row\">\n                <div className=\"col legend-square\"></div>\n                <div className=\"col header name\">Residue</div>\n                <div className=\"col header frequency\">Frequency</div>\n                <div className=\"col header count\">Count</div>\n              </div>\n              {glyphData\n                .slice()\n                .reverse()\n                .map((letterFreq, myidx) => {\n                  return (\n                    <div key={myidx} className=\"row\">\n                      <div\n                        className={`col legend-square ${letterFreq.letter.classNames}`}\n                      ></div>\n                      <div className=\"col name\">\n                        {`${letterFreq.residue.fullName} [${letterFreq.letter.letter}]`}\n                      </div>\n                      <div className=\"col frequency\">\n                        {+(letterFreq.frequency * 100).toFixed(2)}%\n                      </div>\n                      <div className=\"col count\">{letterFreq.count}</div>\n                    </div>\n                  );\n                })}\n            </div>\n          );\n        }}\n      />\n    );\n  }\n\n  /**\n   * Generate the svg elements for a single position, i.e., column\n   */\n  private renderSinglePositionStack(\n    positionalFrequencies: IGlyphStackData,\n    numGlyphStacks: number\n  ) {\n    const { logoType } = this.props;\n    let dy = 100;\n\n    return positionalFrequencies.map((freq, idx) => {\n      dy = dy - freq.frequency * 100;\n\n      if (logoType === LOGO_TYPES.BARS) {\n        const xscale = 2 / numGlyphStacks; // not exact, but works.\n        return (\n          <rect\n            width=\"100\"\n            height=\"100\"\n            transform={`translate(0, ${dy}) scale(${xscale},${freq.frequency})`}\n            className={freq.letter.classNames}\n            key={`idxrect_${idx}`}\n          ></rect>\n        );\n      }\n\n      const xscale = 0.009; // invariant scaling\n      const selectedGlyph = GlyphFactory.glyphFromChar(freq.letter.letter)({\n        className: freq.letter.classNames,\n        transform: `translate(0, ${dy}) scale(${xscale},${freq.frequency})`,\n        key: `idxglyph_${idx}`,\n      });\n      return selectedGlyph;\n    });\n  }\n\n  /**\n   * Munge letter count data that was calculated during alignment creation\n   * into a form appropriate for the glyph generation\n   */\n  private mungeLogoData(): IGlyphStackData[] {\n    const { alignment } = this.props;\n\n    const numberSequences = alignment.getSequences().length;\n    const lettersSorted = alignment.getAllUpperAlphaLettersInAlignmentSorted();\n\n    const alignmentType = this.props.alignmentType\n      ? this.props.alignmentType\n      : this.props.alignment.getPredictedType();\n    const moleculeClass =\n      alignmentType === AlignmentTypes.AMINOACID ? AminoAcid : Nucleotide;\n\n    //load class names for each letter\n    const letterObjects = lettersSorted.reduce((arr, letter) => {\n      arr[letter] = {\n        letter: letter,\n        classNames: getLetterClassNames(letter, false, false, false),\n      };\n      return arr;\n    }, {} as { [letter: string]: ILetterWithClasses });\n\n    //note: removes invalid letters, but letterCount (value) isn't sorted\n    const plc = alignment.getPositionalLetterCounts(false, lettersSorted);\n    return Array.from(plc).map(\n      ([pos, letterCounts]): IGlyphStackData => {\n        return Object.entries(letterCounts)\n          .map(([letter, count]) => {\n            return {\n              count: count,\n              frequency: count / numberSequences,\n              letter: letterObjects[letter],\n              residue: moleculeClass.fromSingleLetterCode(letter),\n            };\n          })\n          .filter((freq) => {\n            // remove empty letters\n            return freq.frequency !== 0;\n          })\n          .sort((a, b) => (a.frequency > b.frequency ? 1 : -1));\n      }\n    );\n  }\n\n  /*\n   *\n   *\n   * REACT METHODS\n   *\n   *\n   */\n  shouldComponentUpdate(nextProps: ISequenceLogoProps) {\n    const { alignment, alignmentType, logoType, glyphWidth } = this.props;\n    if (\n      !this.logoData ||\n      logoType !== nextProps.logoType ||\n      glyphWidth !== nextProps.glyphWidth ||\n      alignment !== nextProps.alignment ||\n      alignmentType !== nextProps.alignmentType\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  render() {\n    const { alignment, glyphWidth } = this.props;\n    if (!alignment || !glyphWidth) {\n      return null;\n    }\n\n    //perform a bunch of data munging\n    this.logoData = this.mungeLogoData();\n    const totalWidth = this.logoData.length * glyphWidth;\n\n    return (\n      <div className=\"sequence-logo\">\n        <svg\n          preserveAspectRatio=\"none\"\n          viewBox={`0 0 ${this.logoData.length} 100`}\n          style={{ width: totalWidth }}\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {this.logoData.map((singlePositionData, positionIdx) => {\n            return (\n              <g\n                transform={`translate(${positionIdx},0)`}\n                className={aceResidueParentClass} //required for default coloring\n                key={\"p_\" + positionIdx}\n              >\n                {this.renderSinglePositionStack(\n                  singlePositionData,\n                  this.logoData!.length\n                )}\n                <rect\n                  className=\"interaction-placeholder\"\n                  width=\"1\"\n                  height=\"100\"\n                  data-for=\"getLogoTooltip\"\n                  data-tip={positionIdx}\n                  data-class={\"sequence-logo-tooltip-container\"}\n                ></rect>\n              </g>\n            );\n          })}\n        </svg>\n        {this.renderTooltip()}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./SequenceBarplot.scss\";\nimport _ from \"lodash\";\nimport { Alignment } from \"../common/Alignment\";\nimport { mapGroupBy, ArrayOneOrMore } from \"../common/Utils\";\nimport ReactTooltip from \"react-tooltip\";\n\nexport interface ISequenceBarplotDataSeries {\n  id: string; //must be unique for each series\n  name: string;\n  cssClass: string;\n  plotOptions?: {\n    fixYMax?(alignment: Alignment): number; //defaults to data max\n    //fixYMin?: number; //defaults to data min\n  };\n  getPositionalInfo(pos: number, alignment: Alignment): ISingleBarDetails;\n}\n\nexport interface ISequenceBarplotProps {\n  alignment: Alignment;\n  dataSeries: ArrayOneOrMore<ISequenceBarplotDataSeries>;\n  positionWidth: number;\n\n  //height?: number;\n  onPositionSelectionChanged?(\n    positionsSelected: {\n      position: number;\n      element: SVGRectElement;\n      bars: ISingleBarDetailsFull[];\n    }[]\n  ): void;\n  onPositionMouseEnter?(\n    position: number,\n    element: SVGRectElement,\n    bars: ISingleBarDetailsFull[]\n  ): void;\n  onPositionMouseLeave?(\n    position: number,\n    element: SVGRectElement,\n    bars: ISingleBarDetailsFull[]\n  ): void;\n}\n\ninterface ISingleBarDetails {\n  height: number;\n}\ninterface ISingleBarDetailsFull extends ISingleBarDetails {\n  normalizedHeight: number;\n  position: number;\n  dataSeries: ISequenceBarplotDataSeries;\n}\ninterface ISequenceBarplotState {\n  positionHovered?: {\n    position: number;\n    element: SVGRectElement;\n    bars: ISingleBarDetailsFull[];\n  };\n  positionsSelected: {\n    position: number;\n    element: SVGRectElement;\n    bars: ISingleBarDetailsFull[];\n  }[];\n  svgHovered: boolean;\n}\n\nexport class SequenceBarplotComponent extends React.Component<\n  ISequenceBarplotProps,\n  ISequenceBarplotState\n> {\n  private static POSITION_VIEWBOX_HEIGHT = 100;\n  private static POSITION_VIEWBOX_WIDTH = 1;\n\n  private cache: Partial<ISequenceBarplotProps> & {\n    bars?: ISingleBarDetailsFull[];\n    barsGroupedByPosition?: Map<number, ISingleBarDetailsFull[]>;\n    barsGroupedByDataseries?: Map<\n      ISequenceBarplotDataSeries,\n      ISingleBarDetailsFull[]\n    >;\n  } = {};\n\n  static defaultProps = {\n    height: 100,\n  };\n\n  constructor(props: ISequenceBarplotProps) {\n    super(props);\n    this.state = {\n      svgHovered: false,\n      positionsSelected: [],\n    };\n    this.handleSvgHover = this.handleSvgHover.bind(this);\n    this.handlePositionHover = this.handlePositionHover.bind(this);\n    this.handlePositionClicked = this.handlePositionClicked.bind(this);\n  }\n\n  /*\n   *\n   *\n   * PRE-CONFIGURED BARPLOTS\n   *\n   *\n   */\n  /**\n   * Plot the shannon entropy at each position -sum(p * log p)\n   *   - p is the fraction of each upper case letter at the position\n   *   - ymax is set to the maximum entropy, which is an equal number\n   *     of all upper case letters in the alignment.\n   */\n  public static SHANNON_ENTROPY_BARPLOT: ISequenceBarplotDataSeries = {\n    id: \"entropy\",\n    name: \"Entropy\",\n    cssClass: \"barplot-shannon-entropy\",\n    plotOptions: {\n      fixYMax: (al) => {\n        const allLettersInAlignment = al.getAllUpperAlphaLettersInAlignmentSorted();\n        const p = 1 / allLettersInAlignment.length;\n        return (\n          -1 *\n          allLettersInAlignment.reduce((acc) => {\n            return acc + p * Math.log2(p);\n          }, 0)\n        );\n      },\n    },\n    getPositionalInfo: (pos, al) => {\n      const plc = al\n        .getPositionalLetterCounts(\n          true,\n          al.getAllUpperAlphaLettersInAlignmentSorted()\n        )\n        .get(pos);\n      return {\n        height:\n          !plc || Object.keys(plc).length === 0\n            ? 0\n            : -1 *\n              Object.values(plc).reduce((acc, p) => {\n                return acc + p * Math.log2(p);\n              }, 0),\n      };\n    },\n  };\n\n  /**\n   * Plot the Kullback-Leibler (KL) divergence for individual columns in the alignment\n   *        S = sum(pk * log(pk / qk)\n   *   also see scipy docs:\n   *     https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.entropy.html\n   *\n   * No maximum is explicitly set (so it because the max value)\n   */\n  public static KULLBAC_LEIBLER_DIVERGENCE_BARPLOT: ISequenceBarplotDataSeries = {\n    id: \"kullback-leibler-divergence\",\n    name: \"KL Divergence\",\n    cssClass: \"barplot-kullback-leibler-divergence\",\n    getPositionalInfo: (pos, al) => {\n      const allLetters = al.getAllUpperAlphaLettersInAlignmentSorted();\n      const pk = al.getPositionalLetterCounts(true, allLetters).get(pos);\n      const qk = al.getGlobalAlphaLetterCounts(true, allLetters);\n      return {\n        height:\n          !pk || Object.keys(pk).length === 0\n            ? 0\n            : allLetters.reduce((acc, letter) => {\n                if (letter in pk) {\n                  acc += pk[letter] * Math.log(pk[letter] / qk[letter]);\n                }\n                return acc;\n              }, 0),\n      };\n    },\n  };\n\n  /**\n   * Plot the number of gaps at each position. The y max is set to\n   * the total length of the alignment and not the largest number of\n   * gaps.\n   */\n  public static GAPS_BARPLOT: ISequenceBarplotDataSeries = {\n    id: \"gaps\",\n    name: \"Gaps\",\n    cssClass: \"barplot-gaps\",\n    plotOptions: {\n      fixYMax: (alignment) => alignment.getSequences().length,\n    },\n    getPositionalInfo: (pos, al) => {\n      return {\n        height: al.getGapCountAtColumn(pos),\n      };\n    },\n  };\n\n  /**\n   *\n   *\n   * HELPER FUNCTIONS\n   *\n   *\n   */\n  private handleSvgHover(isHovered: boolean) {\n    this.setState({\n      svgHovered: isHovered,\n    });\n  }\n\n  private handlePositionHover(\n    event: React.MouseEvent<SVGElement, MouseEvent>,\n    position: number,\n    isHovered: boolean\n  ) {\n    const { onPositionMouseEnter, onPositionMouseLeave } = this.props;\n    if (isHovered && onPositionMouseEnter) {\n      //notify parent listeners\n      onPositionMouseEnter(\n        position,\n        event.relatedTarget as SVGRectElement,\n        this.getBars().barsGroupedByPosition.get(position)!\n      );\n    } else if (!isHovered && onPositionMouseLeave) {\n      onPositionMouseLeave(\n        position,\n        event.relatedTarget as SVGRectElement,\n        this.getBars().barsGroupedByPosition.get(position)!\n      );\n    }\n    this.setState({\n      positionHovered: isHovered\n        ? {\n            position: position,\n            element: event.relatedTarget as SVGRectElement,\n            bars: this.getBars().barsGroupedByPosition.get(position)!,\n          }\n        : undefined,\n    });\n  }\n\n  private handlePositionClicked(\n    event: React.MouseEvent<SVGElement, MouseEvent>,\n    position: number\n  ) {\n    const { positionsSelected } = this.state;\n    const { onPositionSelectionChanged } = this.props;\n    const newPositionsSelected = positionsSelected.some(\n      (p) => p.position === position\n    )\n      ? positionsSelected.filter((p) => p.position !== position)\n      : [\n          ...positionsSelected,\n          {\n            position: position,\n            element: event.relatedTarget as SVGRectElement,\n            bars: this.getBars().barsGroupedByPosition.get(position)!,\n          },\n        ];\n    if (onPositionSelectionChanged) {\n      onPositionSelectionChanged(newPositionsSelected);\n    }\n    this.setState({\n      positionsSelected: newPositionsSelected,\n    });\n  }\n\n  /**\n   * Normalize bars to fall between 0 and POSITION_MAX_HEIGHT in svg space. Obey the\n   * fixYMax if specified\n   * @param bars the same bars as input, with the \"normalizeHeight\"\n   *             attribute added\n   */\n  private normalizeBarHeights(\n    bars: ISingleBarDetailsFull[]\n  ): ISingleBarDetailsFull[] {\n    const { alignment } = this.props;\n    const allHeights = bars.map((bar) => bar.height);\n    const overallMinHeight = Math.min(...allHeights);\n    const overallMaxHeight = Math.max(...allHeights);\n    return bars.map((bar) => {\n      const minHeight = overallMinHeight;\n      const maxHeight =\n        bar.dataSeries.plotOptions && bar.dataSeries.plotOptions.fixYMax\n          ? bar.dataSeries.plotOptions.fixYMax(alignment)\n          : overallMaxHeight;\n      return {\n        ...bar,\n        normalizedHeight:\n          ((bar.height - minHeight) / (maxHeight - minHeight)) *\n          SequenceBarplotComponent.POSITION_VIEWBOX_HEIGHT,\n      };\n    });\n  }\n\n  /**\n   * Get bars and bar groups.\n   * Calls prop.getPositionalInfo to calculate heights for each\n   * position. Uses cache to avoid too many updates.\n   */\n  private getBars() {\n    const { alignment, dataSeries } = this.props;\n    if (\n      !this.cache.bars ||\n      alignment !== this.cache.alignment ||\n      dataSeries !== this.cache.dataSeries\n    ) {\n      this.cache.alignment = alignment;\n      this.cache.dataSeries = dataSeries;\n\n      const maxSeqLength = alignment.getMaxSequenceLength();\n      let allBars: ISingleBarDetailsFull[] = [];\n      dataSeries.forEach((ds) => {\n        for (let i = 0; i < maxSeqLength; i++) {\n          allBars.push({\n            ...ds.getPositionalInfo(i, alignment),\n            position: i,\n            dataSeries: ds,\n            normalizedHeight: -1, // define below\n          });\n        }\n      });\n\n      //normalize bars group by group\n      this.cache.bars = Object.entries(\n        _.groupBy(allBars, (bar) => bar.dataSeries.id)\n      )\n        .map(([categoryId, categoryBars]) => {\n          return this.normalizeBarHeights(categoryBars);\n        })\n        .flat();\n\n      this.cache.barsGroupedByPosition = mapGroupBy(\n        this.cache.bars,\n        (bar) => bar.position\n      );\n\n      this.cache.barsGroupedByDataseries = mapGroupBy(\n        this.cache.bars,\n        (item) => item.dataSeries\n      );\n    }\n    return {\n      bars: this.cache.bars!,\n      barsGroupedByPosition: this.cache.barsGroupedByPosition!,\n      barsGroupedByDataseries: this.cache.barsGroupedByDataseries!,\n    };\n  }\n\n  /**\n   *\n   *\n   * JSX RENDER FUNCTIONS\n   *\n   *\n   */\n\n  /**\n   * Render the tooltip for a particular position.\n   */\n  private renderTooltip() {\n    const barsObj = this.getBars();\n    return (\n      <ReactTooltip\n        id=\"getBarTooltip\"\n        effect=\"solid\"\n        type=\"light\"\n        border={true}\n        getContent={(pos: string) => {\n          const posInt = parseInt(pos);\n          const barsAtPostion = barsObj.barsGroupedByPosition.get(posInt)!;\n          const posPlusOne = posInt + 1; // positions should be 1 based, not zero based\n          return !barsAtPostion ? undefined : (\n            <div className=\"bar-position-textblock\">\n              <h1>Position: {posPlusOne}</h1>\n              {barsAtPostion.map((bar) => {\n                return (\n                  <div\n                    className={`dataseries-line ${bar.dataSeries.cssClass}`}\n                    key={bar.dataSeries.id}\n                  >\n                    <span className=\"legend-square\"></span>\n                    <span className=\"legend-text\">\n                      {bar.dataSeries.name}: {+bar.height.toFixed(1)}\n                    </span>\n                  </div>\n                );\n              })}\n            </div>\n          );\n        }}\n      />\n    );\n  }\n\n  /**\n   * Render the bar plot svg, with each bar appearing as a single rectangle.\n   * Final form:\n   *    <svg ...>\n   *      <g position 1>\n   *         <rect transparant rectangle for interaction for position 1>\n   *         <rect for dataseries 1 position 1>\n   *         <rect for dataseries 2 position 1>\n   *      </g>\n   *      <g position 2>\n   *         <rect transparant rectangle for interaction for position 2>\n   *         <rect for dataseries 1 position 2>\n   *         <rect for dataseries 2 position 2>\n   *      </g>\n   *   </svg>\n   */\n  private renderBarPlot() {\n    const { alignment, positionWidth } = this.props;\n\n    const maxSeqLength = alignment.getMaxSequenceLength();\n    const totalWidth = positionWidth * maxSeqLength;\n\n    const barsObj = this.getBars();\n\n    return (\n      <svg\n        preserveAspectRatio=\"none\"\n        viewBox={`0 0 ${\n          maxSeqLength * SequenceBarplotComponent.POSITION_VIEWBOX_WIDTH\n        } ${SequenceBarplotComponent.POSITION_VIEWBOX_HEIGHT}`}\n        style={{ width: totalWidth }}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        onMouseEnter={() => this.handleSvgHover(true)}\n        onMouseLeave={() => this.handleSvgHover(false)}\n      >\n        {Array.from(barsObj.barsGroupedByPosition.entries()).map(\n          ([pos, bars]) => {\n            const maxBarHeight = Math.max(\n              ...bars.map((bar) => bar.normalizedHeight)\n            );\n\n            const numDataSeries = barsObj.barsGroupedByDataseries.size;\n            const barWidth =\n              (numDataSeries === 1 ? 0.9 : 1 / numDataSeries) *\n              SequenceBarplotComponent.POSITION_VIEWBOX_WIDTH;\n            const firstBarOffset =\n              (numDataSeries === 1 ? pos + 0.05 : pos) *\n              SequenceBarplotComponent.POSITION_VIEWBOX_WIDTH;\n\n            return (\n              <g\n                transform={`translate(${firstBarOffset},0)`}\n                className={\n                  this.state.positionsSelected.some((p) => p.position === pos)\n                    ? \"position-container selected\"\n                    : \"position-container\"\n                }\n                onClick={(event) => {\n                  this.handlePositionClicked(event, pos);\n                }}\n                onMouseEnter={(event) => {\n                  this.handlePositionHover(event, pos, true);\n                }}\n                onMouseLeave={(event) => {\n                  this.handlePositionHover(event, pos, false);\n                }}\n                data-for=\"getBarTooltip\"\n                data-tip={pos}\n                data-class={\"barplot-tooltip-container\"}\n                key={`pos_${pos}`}\n              >\n                {bars.map((bar, dataseriesIdx) => {\n                  return (\n                    <rect\n                      className={bar.dataSeries.cssClass}\n                      transform={`translate(${\n                        ((dataseriesIdx * 1) / bars.length) *\n                        SequenceBarplotComponent.POSITION_VIEWBOX_WIDTH\n                      },${\n                        SequenceBarplotComponent.POSITION_VIEWBOX_HEIGHT -\n                        bar.normalizedHeight\n                      })`}\n                      width={barWidth}\n                      height={bar.normalizedHeight}\n                      key={`${bar.position}_${bar.dataSeries.id}`}\n                    ></rect>\n                  );\n                })}\n\n                <rect\n                  className=\"interaction-placeholder\"\n                  transform={`translate(0,${\n                    SequenceBarplotComponent.POSITION_VIEWBOX_HEIGHT -\n                    maxBarHeight\n                  })`}\n                  width={SequenceBarplotComponent.POSITION_VIEWBOX_WIDTH}\n                  height={maxBarHeight}\n                ></rect>\n              </g>\n            );\n          }\n        )}\n      </svg>\n    );\n  }\n\n  /*\n   *\n   *\n   * REACT METHODS\n   *\n   *\n   */\n  shouldComponentUpdate(nextProps: ISequenceBarplotProps) {\n    const { alignment, dataSeries, positionWidth } = this.props;\n    if (\n      !this.cache ||\n      alignment !== nextProps.alignment ||\n      dataSeries !== nextProps.dataSeries ||\n      positionWidth !== nextProps.positionWidth\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  render() {\n    const className = this.state.svgHovered ? \"barplot hovered\" : \"barplot\";\n\n    return !this.props.alignment ? null : (\n      <div className={className}>\n        {this.renderTooltip()}\n        {this.renderBarPlot()}\n      </div>\n    );\n  }\n}\n","import * as PIXI from \"pixi.js\";\nimport { PixiComponent } from \"@inlet/react-pixi\";\nimport { Viewport } from \"pixi-viewport\";\n\nexport interface ICanvasAlignmentViewportProps {\n  useDrag?: boolean; // Allows the user to drag the viewport around.\n  usePinch?: boolean; // Allows the user to pinch to zoom; e.g. on a trackpad.\n  useWheel?: boolean; // Allows the user to use a mouse wheel to zoom.\n  numColumns: number;\n  numRows: number;\n  app: PIXI.Application;\n  mouseClick?: (x: number, y: number) => void;\n  zoomPercent?: number;\n}\n\nexport const CanvasAlignmentViewport = PixiComponent<\n  ICanvasAlignmentViewportProps,\n  any\n>(\"CanvasAlignmentViewport\", {\n  create(props: ICanvasAlignmentViewportProps) {\n    const {\n      app,\n      mouseClick,\n      numColumns,\n      numRows,\n      useDrag,\n      usePinch,\n      useWheel,\n      zoomPercent,\n    } = props;\n    app.renderer.backgroundColor = 0xffffff;\n\n    let vp = new Viewport({\n      screenWidth: app.renderer.width,\n      screenHeight: app.renderer.height,\n      worldWidth: numColumns,\n      worldHeight: numRows,\n      interaction: app.renderer.plugins.interaction,\n    })\n      .decelerate()\n      .clamp({\n        direction: \"all\",\n      })\n      .bounce({ friction: 0.1, time: 150, underflow: \"center\" })\n      .clampZoom({\n        maxHeight: numRows + 0.1 * numRows,\n        //maxWidth: numColumns//app.renderer.width,\n      });\n\n    // !IMPORTANT\n    // Two-finger drag on trackpad is also enabled by this.\n    // Issue currently open: https://github.com/davidfig/pixi-viewport/issues/143\n    if (useDrag) {\n      vp = vp.drag({\n        direction: \"all\", //this is the line that kills pinch\n      });\n    }\n\n    if (usePinch) {\n      vp = vp.pinch();\n    }\n\n    if (useWheel) {\n      vp = vp.wheel();\n    }\n\n    if (zoomPercent) {\n      vp = vp.zoomPercent(zoomPercent);\n    }\n    vp.on(\"clicked\", (e) => {\n      if (mouseClick) {\n        mouseClick(e.world.x, e.world.y);\n      }\n    });\n    return vp;\n  },\n\n  applyProps(\n    vp: Viewport, //PIXI.Graphics,\n    oldProps: ICanvasAlignmentViewportProps,\n    newProps: ICanvasAlignmentViewportProps\n  ) {\n    if (\n      oldProps.numColumns !== newProps.numColumns ||\n      oldProps.numRows !== newProps.numRows\n    ) {\n      vp.screenWidth = newProps.app.renderer.width;\n      vp.screenHeight = newProps.app.renderer.height;\n      vp.worldWidth = newProps.numColumns;\n      vp.worldHeight = newProps.numRows;\n      vp = vp.fitWorld(true);\n      vp = vp.setZoom(newProps.app.renderer.width / newProps.numColumns, false);\n    }\n    return vp;\n  },\n});\n","import * as PIXI from \"pixi.js\";\nimport { PixiComponent } from \"@inlet/react-pixi\";\nimport { Graphics } from \"pixi.js\";\n\ninterface IAlignmentHighlighterProps {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  fillColor: number;\n  fillAlpha: number;\n  dragFunctions?: {\n    onDragStart(\n      event: PIXI.interaction.InteractionEvent,\n      parent: PIXI.DisplayObject\n    ): void;\n    onDragEnd(\n      event: PIXI.interaction.InteractionEvent,\n      parent: PIXI.DisplayObject\n    ): void;\n    onDragMove(\n      event: PIXI.interaction.InteractionEvent,\n      parent: PIXI.DisplayObject\n    ): void;\n  };\n}\n\nexport const CanvasAlignmentHighlighter = PixiComponent(\n  \"CanvasAlignmentHighlighter\",\n  {\n    create: (props: IAlignmentHighlighterProps) => {\n      const toReturn = new Graphics();\n      toReturn.interactive = true;\n      return toReturn;\n    },\n    applyProps: (instance, oldProps, newProps) => {\n      const { x, y, width, height, fillColor, fillAlpha } = newProps;\n      instance.clear();\n      instance.beginFill(fillColor, fillAlpha);\n      instance.drawRect(x, y, width, height);\n      instance.endFill();\n\n      //inspired by\n      //http://scottmcdonnell.github.io/pixi-examples/index.html?s=demos&f=dragging.js\n      if (oldProps.dragFunctions !== newProps.dragFunctions) {\n        instance.removeAllListeners();\n        if (newProps.dragFunctions) {\n          instance.addListener(\"pointerdown\", (e) => {\n            e.stopPropagation(); //keep entire viewport from moving\n          });\n\n          const dragStart = (e: PIXI.interaction.InteractionEvent) => {\n            newProps.dragFunctions?.onDragStart(e, instance.parent);\n          };\n          const dragEnd = (e: PIXI.interaction.InteractionEvent) => {\n            newProps.dragFunctions?.onDragEnd(e, instance.parent);\n          };\n          const dragMove = (e: PIXI.interaction.InteractionEvent) => {\n            newProps.dragFunctions?.onDragMove(e, instance.parent);\n          };\n\n          //events for drag start\n          instance.addListener(\"mousedown\", dragStart);\n          instance.addListener(\"touchstart\", dragStart);\n\n          // events for drag end\n          instance.addListener(\"mouseup\", dragEnd);\n          instance.addListener(\"mouseupoutside\", dragEnd);\n          instance.addListener(\"touchend\", dragEnd);\n          instance.addListener(\"touchendoutside\", dragEnd);\n\n          // events for drag move\n          instance.addListener(\"mousemove\", dragMove);\n          instance.addListener(\"touchmove\", dragMove);\n        }\n      }\n    },\n  }\n);\n","import React from \"react\";\nimport { ISequence } from \"../common/Alignment\";\nimport { Nucleotide, AminoAcid } from \"../common/Residues\";\nimport { Sprite } from \"@inlet/react-pixi\";\nimport { ICanvasAlignmentProps } from \"./CanvasAlignmentComponent\";\n\nimport { PositionsToStyle, AlignmentTypes } from \"../common/MolecularStyles\";\n\nexport interface ITiledImages {\n  targetTileWidth: number;\n  targetTileHeight: number;\n  lastTileWidth: number;\n  lastTileHeight: number;\n  numXTiles: number;\n  numYTiles: number;\n  tiles: {\n    tileX: number;\n    tileY: number;\n    pixelX: number;\n    pixelY: number;\n    width: number;\n    height: number;\n    image: HTMLCanvasElement;\n  }[];\n}\n\nexport class CanvasAlignmentTiled extends React.Component<\n  ICanvasAlignmentProps\n> {\n  shouldComponentUpdate(nextProps: ICanvasAlignmentProps) {\n    return (\n      nextProps.alignment !== this.props.alignment ||\n      nextProps.colorScheme !== this.props.colorScheme ||\n      nextProps.positionsToStyle !== this.props.positionsToStyle ||\n      nextProps.sortBy !== this.props.sortBy\n    );\n  }\n\n  render() {\n    if (!this.props.alignment) {\n      return null;\n    }\n\n    const {\n      alignment,\n      alignmentType,\n      colorScheme,\n      positionsToStyle,\n      sortBy,\n    } = this.props;\n\n    // Generate multiple tiled images from the alignment\n    const sequences = alignment.getSequences(sortBy);\n    const fullWidth = alignment.getMaxSequenceLength();\n    const fullHeight = sequences.length;\n\n    const sizes = {\n      fullWidth,\n      fullHeight,\n      targetTileWidth: Math.min(400, fullWidth),\n      targetTileHeight: Math.min(400, fullHeight),\n    };\n\n    const tiledImages: ITiledImages = this.initializeTiledImages(sizes);\n\n    for (\n      let tileYNumber = 0;\n      tileYNumber < tiledImages.numYTiles;\n      tileYNumber++\n    ) {\n      for (\n        let tileXNumber = 0;\n        tileXNumber < tiledImages.numXTiles;\n        tileXNumber++\n      ) {\n        const tiledImage = this.generateCanvasForTile(\n          tileXNumber,\n          tileYNumber,\n          sizes.targetTileWidth,\n          sizes.targetTileHeight,\n          tiledImages,\n          sequences\n        );\n        tiledImages.tiles.push(tiledImage);\n      }\n    }\n\n    //console.log(\"CANVAS rerender [\" + sortBy.key + \"]\", sequences);\n    return (\n      <>\n        {tiledImages.tiles.map((tile) => (\n          <Sprite\n            source={tile.image}\n            x={tile.pixelX}\n            y={tile.pixelY}\n            key={`${tile.tileX}_\n                  ${tile.tileY}_\n                  ${colorScheme.commonName}_\n                  ${positionsToStyle.key}_\n                  ${alignmentType.key}_\n                  ${sortBy.key}_\n                  ${alignment.getName()}`}\n          ></Sprite>\n        ))}\n      </>\n    );\n  }\n\n  protected colorCanvasWithSequence(\n    tileImageData: ImageData,\n    tileCanvasContext: CanvasRenderingContext2D,\n    tileCanvas: HTMLCanvasElement,\n    sequences: ISequence[],\n    offsets: { seqY: number; letterX: number }\n  ) {\n    let imageDataIdx = 0;\n\n    for (let seqIdx = 0; seqIdx < tileCanvas.height; seqIdx++) {\n      const seq = sequences[seqIdx + offsets.seqY];\n      for (let letterIdx = 0; letterIdx < tileCanvas.width; letterIdx++) {\n        const letter = seq.sequence[letterIdx + offsets.letterX];\n        const colorScheme = this.getCurrentMoleculeColors(\n          letter,\n          letterIdx,\n          offsets\n        );\n\n        tileImageData.data[imageDataIdx] = colorScheme.rgb.red;\n        tileImageData.data[imageDataIdx + 1] = colorScheme.rgb.green;\n        tileImageData.data[imageDataIdx + 2] = colorScheme.rgb.blue;\n        tileImageData.data[imageDataIdx + 3] = 255; //alpha between 0 (transparent) and 255 (opaque)\n\n        imageDataIdx += 4;\n      }\n    }\n    tileCanvasContext.putImageData(tileImageData, 0, 0);\n  }\n\n  protected generateCanvasForTile(\n    tileXNumber: number,\n    tileYNumber: number,\n    targetTileWidth: number,\n    targetTileHeight: number,\n    tiledImages: ITiledImages,\n    sequences: ISequence[]\n  ) {\n    const tileCanvas = document.createElement(\"canvas\") as HTMLCanvasElement;\n    tileCanvas.height =\n      tileYNumber === tiledImages.numYTiles - 1\n        ? tiledImages.lastTileHeight\n        : targetTileHeight;\n    tileCanvas.width =\n      tileXNumber === tiledImages.numXTiles - 1\n        ? tiledImages.lastTileWidth\n        : targetTileWidth;\n\n    const offsets = {\n      seqY: tileYNumber * targetTileHeight,\n      letterX: tileXNumber * targetTileWidth,\n    };\n\n    const tileCanvasContext = tileCanvas.getContext(\"2d\");\n    tileCanvasContext?.fillRect(0, 0, tileCanvas.width, tileCanvas.height); //unclear why necessary\n    const tileImageData = tileCanvasContext?.getImageData(\n      0,\n      0,\n      tileCanvas.width,\n      tileCanvas.height\n    );\n\n    if (tileImageData && tileCanvasContext) {\n      this.colorCanvasWithSequence(\n        tileImageData,\n        tileCanvasContext,\n        tileCanvas,\n        sequences,\n        offsets\n      );\n    }\n\n    return {\n      tileX: tileXNumber,\n      tileY: tileYNumber,\n      pixelX: offsets.letterX,\n      pixelY: offsets.seqY,\n      width: tileCanvas.width,\n      height: tileCanvas.height,\n      image: tileCanvas,\n    };\n  }\n\n  protected getCurrentMoleculeColors(\n    letter: string,\n    letterIdx: number,\n    offsets: { seqY: number; letterX: number }\n  ) {\n    const { alignment, alignmentType, colorScheme } = this.props;\n    const consensusSequence = alignment.getConsensus();\n    const querySequence = alignment.getTargetSequence().sequence;\n    const moleculeClass =\n      alignmentType === AlignmentTypes.AMINOACID ? AminoAcid : Nucleotide;\n    let molecule = moleculeClass.UNKNOWN;\n\n    if (this.props.positionsToStyle === PositionsToStyle.ALL) {\n      molecule = moleculeClass.fromSingleLetterCode(letter);\n    } else {\n      const isConsensus =\n        consensusSequence[letterIdx + offsets.letterX].letter === letter;\n      const isQuery = querySequence[letterIdx + offsets.letterX] === letter;\n      if (\n        (this.props.positionsToStyle === PositionsToStyle.CONSENSUS &&\n          isConsensus) ||\n        (this.props.positionsToStyle === PositionsToStyle.CONSENSUS_DIFF &&\n          !isConsensus) ||\n        (this.props.positionsToStyle === PositionsToStyle.QUERY && isQuery) ||\n        (this.props.positionsToStyle === PositionsToStyle.QUERY_DIFF &&\n          !isQuery)\n      ) {\n        molecule = moleculeClass.fromSingleLetterCode(letter);\n      }\n    }\n    return molecule.colors[colorScheme.commonName];\n  }\n\n  protected initializeTiledImages({\n    targetTileWidth = 0,\n    targetTileHeight = 0,\n    fullWidth = 0,\n    fullHeight = 0,\n  }): ITiledImages {\n    return {\n      targetTileWidth: targetTileWidth,\n      targetTileHeight: targetTileHeight,\n      lastTileWidth:\n        fullWidth % targetTileWidth !== 0\n          ? fullWidth % targetTileWidth\n          : targetTileWidth,\n      lastTileHeight:\n        fullHeight % targetTileHeight !== 0\n          ? fullHeight % targetTileHeight\n          : targetTileHeight,\n      numXTiles:\n        fullWidth % targetTileWidth !== 0\n          ? Math.floor(fullWidth / targetTileWidth) + 1\n          : Math.floor(fullWidth / targetTileWidth),\n      numYTiles:\n        fullHeight % targetTileHeight !== 0\n          ? Math.floor(fullHeight / targetTileHeight) + 1\n          : Math.floor(fullHeight / targetTileHeight),\n      tiles: [],\n    };\n  }\n}\n","import React from \"react\";\nimport { Alignment, SequenceSortOptions } from \"../common/Alignment\";\nimport * as PIXI from \"pixi.js\";\nimport { Stage, AppContext } from \"@inlet/react-pixi\";\nimport {\n  CanvasAlignmentViewport,\n  ICanvasAlignmentViewportProps,\n} from \"./CanvasAlignmentViewportComponent\";\nimport { CanvasAlignmentHighlighter } from \"./CanvasAlignmentHighlighterComponent\";\nimport { CanvasAlignmentTiled } from \"./CanvasAlignmentTiledComponent\";\n\nimport {\n  IColorScheme,\n  PositionsToStyle,\n  AlignmentTypes,\n} from \"../common/MolecularStyles\";\n\nexport interface ICanvasAlignmentProps {\n  alignment: Alignment;\n  alignmentType: AlignmentTypes;\n  sortBy: SequenceSortOptions;\n  positionsToStyle: PositionsToStyle;\n  colorScheme: IColorScheme;\n  highlightRows?: [number, number]; //[startRowNum, endRowNum]\n  stageResolution?: {\n    width: number;\n    height: number;\n  };\n  viewportProps?: Partial<ICanvasAlignmentViewportProps>;\n\n  onClickOrDrag?(x: number, y: number): void;\n}\n\ninterface ICanvasAlignmentState {\n  dragging: boolean;\n\n  dragPositions?: {\n    startOffset: {\n      left: number;\n      top: number;\n    };\n    current: PIXI.Point;\n  };\n}\n\nexport class CanvasAlignmentComponent extends React.Component<\n  ICanvasAlignmentProps,\n  ICanvasAlignmentState\n> {\n  app?: PIXI.Application;\n  scaleX: number = 1;\n  scaleY: number = 1;\n\n  static defaultProps = {\n    stageResolution: {\n      width: 485,\n      height: 650,\n    },\n    viewportProps: {\n      useDrag: true,\n      usePinch: true,\n      useWheel: true,\n      zoomPercent: 0,\n    },\n  };\n\n  constructor(props: ICanvasAlignmentProps) {\n    super(props);\n    this.state = {\n      dragging: false,\n    };\n  }\n\n  protected sliderChanged(newValue: number, xy: \"x\" | \"y\") {\n    if (this.app) {\n      this.app.stage.children.forEach((sprite) => {\n        if (xy === \"x\") {\n          sprite.scale.x = newValue;\n        } else {\n          sprite.scale.y = newValue;\n        }\n      });\n    }\n  }\n\n  render() {\n    if (!this.props.alignment) {\n      return null;\n    }\n\n    const {\n      alignment,\n      alignmentType,\n      colorScheme,\n      highlightRows,\n      onClickOrDrag,\n      positionsToStyle,\n      sortBy,\n      stageResolution,\n      viewportProps,\n    } = this.props;\n    const { dragging, dragPositions } = this.state;\n\n    const numSequences = alignment.getSequences().length;\n    const maxSeqLength = alignment.getMaxSequenceLength();\n\n    PIXI.utils.skipHello();\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST; //\n    //TODO: still anti-aliases on retina devices. probably requires\n    //      writing 4x the pixels and telling pixi that it is a retina\n    //      image\n    //PIXI.settings.RESOLUTION = 2;\n    //PIXI.settings.ROUND_PIXELS = true; //\n\n    let rowHighlightStart: number | undefined;\n    let rowHighlighterHeight: number | undefined;\n\n    if (highlightRows) {\n      rowHighlighterHeight = highlightRows[1] - highlightRows[0];\n      rowHighlightStart =\n        dragging && dragPositions\n          ? Math.round(dragPositions.current.y - dragPositions.startOffset.top)\n          : highlightRows[0];\n      rowHighlightStart = rowHighlightStart > 0 ? rowHighlightStart : 0;\n    }\n\n    return (\n      <div\n        className=\"alignment-canvas\"\n        onWheel={this.onWheel}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n      >\n        <Stage\n          width={stageResolution?.width}\n          height={stageResolution?.height}\n          options={{ transparent: true }}\n        >\n          <AppContext.Consumer>\n            {(app) => {\n              this.app = app;\n              return <></>;\n            }}\n          </AppContext.Consumer>\n          <AppContext.Consumer>\n            {(app) => (\n              <CanvasAlignmentViewport\n                app={app}\n                numColumns={maxSeqLength}\n                numRows={numSequences}\n                mouseClick={onClickOrDrag}\n                {...viewportProps}\n              >\n                <CanvasAlignmentTiled\n                  alignment={alignment}\n                  alignmentType={alignmentType}\n                  sortBy={sortBy}\n                  colorScheme={colorScheme}\n                  positionsToStyle={positionsToStyle}\n                />\n                {rowHighlightStart !== undefined &&\n                rowHighlighterHeight !== undefined ? (\n                  <CanvasAlignmentHighlighter\n                    fillColor={0xff0000}\n                    fillAlpha={0.25}\n                    x={0}\n                    y={rowHighlightStart}\n                    width={maxSeqLength}\n                    height={rowHighlighterHeight}\n                    dragFunctions={{\n                      onDragStart: (e, parent) => {\n                        const startPosition = e.data.getLocalPosition(parent);\n                        this.setState({\n                          dragging: true,\n                          dragPositions: {\n                            startOffset: {\n                              left: startPosition.x - 0,\n                              top: startPosition.y - rowHighlightStart!,\n                            },\n                            current: startPosition,\n                          },\n                        });\n                      },\n                      onDragEnd: (e, parent) => {\n                        this.setState({ dragging: false });\n                        const finalPosition = e.data.getLocalPosition(parent);\n\n                        if (onClickOrDrag) {\n                          //final release position\n                          onClickOrDrag(\n                            Math.round(finalPosition.x),\n                            Math.round(\n                              finalPosition.y - dragPositions!.startOffset.top\n                            )\n                          );\n                        }\n                      },\n                      onDragMove: (e, parent) => {\n                        if (dragging) {\n                          const newPosition = e.data.getLocalPosition(parent);\n\n                          this.setState({\n                            dragPositions: {\n                              startOffset: dragPositions!.startOffset,\n                              current: newPosition,\n                            },\n                          });\n                          if (onClickOrDrag) {\n                            onClickOrDrag(\n                              Math.round(newPosition.x),\n                              Math.round(\n                                newPosition.y - dragPositions!.startOffset.top\n                              )\n                            );\n                          }\n                        }\n                      },\n                    }}\n                  />\n                ) : (\n                  <></>\n                )}\n              </CanvasAlignmentViewport>\n            )}\n          </AppContext.Consumer>\n        </Stage>\n      </div>\n    );\n  }\n\n  protected onMouseEnter = (e: React.MouseEvent<HTMLDivElement>) => {\n    document.body.style.overflow = \"hidden\";\n  };\n\n  protected onMouseLeave = (e: React.MouseEvent<HTMLDivElement>) => {\n    document.body.style.overflow = \"auto\";\n  };\n\n  protected onWheel = (e: React.WheelEvent<HTMLDivElement>) => {\n    //e.preventDefault(); //TODO Drew is this necessary?\n  };\n}\n","import * as React from \"react\";\nimport \"./MiniMap.scss\";\n\nimport { CanvasAlignmentComponent } from \"./CanvasAlignmentComponent\";\nimport { Alignment, SequenceSortOptions } from \"../common/Alignment\";\nimport {\n  AminoAcidAlignmentStyle,\n  NucleotideAlignmentStyle,\n} from \"../common/MolecularStyles\";\n\nexport interface IMiniMapProps {\n  alignHorizontal: \"left\" | \"right\";\n  //alignVertical: \"top\" | \"bottom\";\n  alignment: Alignment;\n  height: number;\n  highlightRows?: [number, number];\n  onClickOrDrag?: (x: number, y: number) => void;\n  sortBy: SequenceSortOptions;\n  style: AminoAcidAlignmentStyle | NucleotideAlignmentStyle;\n  width: number;\n}\n\nexport interface IMiniMapState {\n  zoomPercent: number;\n}\n\nexport class MiniMapComponent extends React.Component<\n  IMiniMapProps,\n  IMiniMapState\n> {\n  public static defaultProps = {\n    alignHorizontal: \"right\",\n    //alignVertical: \"top\",\n    height: 600,\n    width: 300,\n  };\n  constructor(props: IMiniMapProps) {\n    super(props);\n    this.state = {\n      zoomPercent: 1,\n    };\n  }\n\n  protected getSizing() {\n    const frameBorderWidth = 1; // in pixels\n    const frameMargin = 2; // in pixels\n    return {\n      borderWidth: frameBorderWidth,\n      margin: frameMargin,\n      frameHeight: this.props.height - 2 * frameMargin - 1 * frameBorderWidth,\n      frameWidth: this.props.width - 2 * frameMargin - 1 * frameBorderWidth,\n    };\n  }\n\n  public render() {\n    const { alignHorizontal } = this.props;\n    const size = this.getSizing();\n    return (\n      <div\n        className=\"minimap-holder\"\n        style={{\n          ...(alignHorizontal === \"left\" ? { left: 0 } : { right: 0 }),\n          //...(alignVertical === \"top\" ? { top: 0 } : { bottom: 0 }),\n          height: size.frameHeight,\n          width: size.frameWidth,\n          borderWidth: `${size.borderWidth}px`,\n          margin: `${size.margin}px`,\n        }}\n      >\n        {this.renderCanvasComponent()}\n        {/*this.renderZoomControls()*/}\n      </div>\n    );\n  }\n\n  protected renderCanvasComponent = () => {\n    const { alignment, highlightRows, sortBy, style } = this.props;\n    const { zoomPercent } = this.state;\n    const size = this.getSizing();\n    return (\n      <CanvasAlignmentComponent\n        alignment={alignment}\n        alignmentType={style.alignmentType}\n        positionsToStyle={style.positionsToStyle}\n        colorScheme={style.colorScheme}\n        sortBy={sortBy}\n        stageResolution={{\n          width: size.frameWidth,\n          height: size.frameHeight,\n        }}\n        highlightRows={highlightRows}\n        viewportProps={{\n          useDrag: true,\n          usePinch: true,\n          useWheel: true,\n          zoomPercent,\n        }}\n        onClickOrDrag={this.onMouseDown}\n      />\n    );\n  };\n\n  protected onMouseDown = (x: number, y: number) => {\n    const { onClickOrDrag: onClick } = this.props;\n    if (onClick) {\n      onClick(x, y);\n    }\n  };\n\n  /*\n  protected renderZoomControls = () => (\n    <div style={{ textAlign: \"center\", opacity: 1 }}>\n      <button onClick={this.onZoomOut}>-</button>\n      <button onClick={this.onZoomReset}>Reset</button>\n      <button onClick={this.onZoomIn}>+</button>\n    </div>\n  );\n\n  protected onZoomIn = () => {\n    const { zoomPercent } = this.state;\n    this.setState({\n      zoomPercent: Math.min(8, zoomPercent + 0.25),\n    });\n  };\n\n  protected onZoomOut = () => {\n    const { zoomPercent } = this.state;\n    this.setState({\n      // A zoomPercent of 0 will not actually zoom out!\n      zoomPercent: Math.max(0.25, zoomPercent - 0.25),\n    });\n  };\n\n  protected onZoomReset = () => {\n    this.setState({\n      zoomPercent: 1,\n    });\n  };*/\n}\n","/**\n * Base class for Ace Editor Components\n */\nimport React from \"react\";\nimport ace from \"ace-builds\";\nimport { Ace } from \"ace-builds\";\n\nexport interface IAceEditorProps {\n  readonly id?: string;\n\n  text?: string;\n  fontSize?: number;\n  editorMode?: string;\n  classNames?: string;\n\n  editorLoaded?(editor: Ace.Editor, parentElem: HTMLDivElement): void;\n  characterSizeChanged?(newCharacterWidth: number): void;\n\n  mouseDown?(e: {\n    mouseRow: number;\n    mouseColumn: number;\n    mousePageX: number;\n    mousePageY: number;\n    //mouseContainerX: number;\n    //mouseContainerY: number;\n  }): void;\n\n  mouseMove?(e: {\n    mouseRow: number;\n    mouseColumn: number;\n    mousePageX: number;\n    mousePageY: number;\n    //mouseContainerX: number;\n    //mouseContainerY: number;\n  }): void;\n\n  mouseEnter?(): void;\n  mouseLeave?(): void;\n}\n\ninterface IChangeCharacterSizeEvent {\n  data: { height: number; width: number };\n  preventDefault(): void;\n  stopPropagation(): void;\n}\n\nexport class AceEditorComponent<\n  P extends IAceEditorProps,\n  S = {}\n> extends React.Component<P, S> {\n  private editor?: Ace.Editor;\n  private lastText?: string;\n  private lastMode?: string;\n  private element?: HTMLElement;\n  private lastElementWidth?: number;\n  private lastElementHeight?: number;\n  static defaultProps = {\n    fontSize: 14,\n  };\n\n  /**************************\n   *\n   *\n   * METHODS REQUIRED FROM SUBCLASSES\n   *\n   *\n   **************************/\n  getText(): string {\n    if (this.props.text) {\n      return this.props.text!;\n    }\n    throw Error(\n      \"Internal error: 'text' attribute must be provided or subclasses must implement getText()\"\n    );\n  }\n  getEditorMode(): string | undefined {\n    return this.props.editorMode;\n  }\n\n  /**************************\n   *\n   *\n   * PROTECTED METHODS\n   *\n   *\n   **************************/\n  /**\n   * Load and setup the ace editor\n   * @param el the element that will hold the ace editor.\n   */\n  protected setupEditor(el: HTMLElement) {\n    this.editor = ace.edit(el);\n    this.editor.setShowPrintMargin(false);\n    this.editor.setReadOnly(true);\n    this.editor.setHighlightActiveLine(false);\n    this.editor.setHighlightGutterLine(false);\n    this.editor.setFontSize(this.props.fontSize + \"px\");\n    this.editor.renderer.setShowGutter(false);\n    this.editor.renderer.setPadding(0);\n    this.editor.renderer.$cursorLayer.element.style.display = \"none\";\n  }\n\n  /**\n   * listen to mouse events and report them to instantiator\n   */\n  protected addEventListeners() {\n    if (!this.editor) {\n      throw Error(\"Editor must be defined before adding listeners.\");\n    }\n    const { characterSizeChanged, mouseDown, mouseMove } = this.props;\n\n    function getMousePosition(editor: Ace.Editor, event: Ace.AceEvent) {\n      var pos = event.getDocumentPosition();\n      var screenCoordinates = editor.renderer.textToScreenCoordinates(\n        pos.row,\n        pos.column\n      );\n      return {\n        mouseRow: pos.row,\n        mouseColumn: pos.column,\n        mousePageX: screenCoordinates.pageX,\n        mousePageY: screenCoordinates.pageY,\n        //mouseContainerX:\n        //  characterWidth * pos.column - this.editor.session.getScrollLeft(),\n        //mouseContainerY: characterWidth * pos.row ???\n      };\n    }\n\n    this.editor!.on(\"mousemove\", (e) => {\n      if (mouseMove) {\n        mouseMove(getMousePosition(this.editor!, e));\n      }\n    });\n\n    this.editor!.on(\"mousedown\", (e) => {\n      if (mouseDown) {\n        mouseDown(getMousePosition(this.editor!, e));\n      }\n    });\n\n    this.editor.renderer.on(\n      \"changeCharacterSize\",\n      (e: IChangeCharacterSizeEvent) => {\n        if (characterSizeChanged) {\n          characterSizeChanged(e.data.width);\n        }\n      }\n    );\n  }\n\n  /**\n   * update the text in the editor and set the editor to use that\n   * mode (if provided).\n   * @param newText\n   * @param modeName the mode name for highlighting this ace editor. For alignments, this can\n   *                 be defined as follows:\n   *    const modeName = \"ace/mode/\" + this.props.alignment.getName();\n   *    defineNewAlignmentMode(modeName, this.props.alignment);\n   *    setText()\n   * @throws an error if the editor is not yet defined.\n   */\n  protected setText() {\n    if (!this.editor) {\n      throw Error(\"Editor must be defined to call setText()\");\n    }\n    //only update if needed\n    if (this.props.fontSize + \"px\" !== this.editor.getFontSize()) {\n      this.editor.setFontSize(this.props.fontSize + \"px\");\n    }\n    if (this.lastMode !== this.getEditorMode()) {\n      const newMode = this.getEditorMode();\n      this.editor.session.setMode(newMode!);\n      this.lastMode = newMode;\n    }\n    if (!this.lastText || this.lastText !== this.getText()) {\n      this.editor.selectAll();\n      this.editor.removeLines();\n      const newText = this.getText();\n      this.editor.insert(newText);\n      this.lastText = newText;\n    }\n  }\n\n  /**\n   * The initial editor load function. Will only run a single time.\n   * @param e the HTMLelment that will hold the ace editor\n   */\n  protected initialLoad(e: HTMLDivElement | null) {\n    if (e && !this.editor) {\n      //only run if editor not loaded\n      this.element = e;\n      this.lastElementWidth = e.clientWidth;\n      this.lastElementHeight = e.clientHeight;\n      this.setupEditor(e);\n      this.addEventListeners();\n      this.setText();\n      if (this.props.editorLoaded) {\n        this.props.editorLoaded(this.editor!, e); //inform parent of loading.\n      }\n    }\n  }\n\n  /**************************\n   *\n   *\n   * REACT METHODS\n   *\n   *\n   **************************/\n  componentDidUpdate() {\n    if (!this.editor || !this.element) {\n      throw Error(\n        \"internal error - componentDidUpdate called before editor initialized\"\n      );\n    }\n    this.setText(); //smart and will update only if needed.\n    if (\n      this.element.clientWidth !== this.lastElementWidth ||\n      this.element.clientHeight !== this.lastElementHeight\n    ) {\n      this.lastElementWidth = this.element.clientWidth;\n      this.lastElementHeight = this.element.clientHeight;\n      this.editor.resize();\n    }\n    return false;\n  }\n\n  render() {\n    return (\n      <div\n        className={this.props.classNames}\n        onMouseEnter={() => {\n          if (this.props.mouseEnter) {\n            this.props.mouseEnter();\n          }\n        }}\n        onMouseLeave={() => {\n          if (this.props.mouseLeave) {\n            this.props.mouseLeave();\n          }\n        }}\n      >\n        <div id={this.props.id} ref={(e) => this.initialLoad(e)}></div>\n      </div>\n    );\n  }\n}\n","import { Alignment, SequenceSortOptions } from \"../common/Alignment\";\nimport { AceEditorComponent, IAceEditorProps } from \"./AceEditorComponent\";\n\nexport interface IAceMultipleSequenceAlignmentProps extends IAceEditorProps {\n  alignment: Alignment;\n  sortBy?: SequenceSortOptions;\n}\n\nexport class AceMultipleSequenceAlignmentComponent extends AceEditorComponent<\n  IAceMultipleSequenceAlignmentProps,\n  {}\n> {\n  static defaultProps = {\n    sortBy: SequenceSortOptions.INPUT,\n    fontSize: 14,\n  };\n\n  getText(): string {\n    return this.props.alignment\n      .getSequences(this.props.sortBy)\n      .map((x) => x.sequence)\n      .join(\"\\n\");\n  }\n  getEditorMode() {\n    return this.props.alignment.getAceEditorMode();\n  }\n}\n","import { AceMultipleSequenceAlignmentComponent } from \"./AceMultipleSequenceAlignmentComponent\";\n\nexport class AceConsensusSequenceComponent extends AceMultipleSequenceAlignmentComponent {\n  getText() {\n    return this.props.alignment\n      .getConsensus()\n      .map((letter) => {\n        return letter.letter;\n      })\n      .join(\"\");\n  }\n}\n","import { AceMultipleSequenceAlignmentComponent } from \"./AceMultipleSequenceAlignmentComponent\";\n\nexport class AceTargetSequenceComponent extends AceMultipleSequenceAlignmentComponent {\n  getText() {\n    return this.props.alignment.getTargetSequence().sequence;\n  }\n}\n","import { Alignment } from \"../common/Alignment\";\nimport { AceEditorComponent, IAceEditorProps } from \"./AceEditorComponent\";\n\nexport interface IAceTextualRulerComponentProps extends IAceEditorProps {\n  alignment: Alignment;\n}\n\nexport default class AceTextualRulerComponent extends AceEditorComponent<\n  IAceTextualRulerComponentProps,\n  {}\n> {\n  /**\n   * Generate a string axis (positional information) with one character per position\n   * through the maxLength. Taken from alignmentviewer 1.0:\n   *     https://github.com/sanderlab/alignmentviewer\n   * May want to implement this better in the future (SVG + sliding tooltip for cursor?)\n   * @param maxLength\n   */\n  static generateTextualRuler(maxLength: number): string {\n    let s = \"\"; // should be a better way to do this to be honest\n    for (let i = 1; i <= maxLength + 1; i++) {\n      const Q = i % 10 === 0;\n      const Q5 = !Q && i % 5 === 0;\n      s += Q ? \"|\" : Q5 ? \":\" : \".\";\n      if (!Q) {\n        continue;\n      }\n      const sn = \"\" + i;\n      const np = s.length - sn.length - 1; // where num starts\n      if (np < 0) {\n        continue;\n      }\n      s = s.substr(0, np) + sn + \"|\";\n    }\n    return s; // this.hruler = s.replace(/ /g, '.');\n  }\n\n  getText(): string {\n    return AceTextualRulerComponent.generateTextualRuler(\n      this.props.alignment.getMaxSequenceLength()\n    );\n  }\n  getEditorMode() {\n    return undefined;\n  }\n}\n","import React from \"react\";\nimport \"./AlignmentViewer.scss\";\nimport { Ace } from \"ace-builds\";\nimport { Alignment, SequenceSortOptions } from \"../common/Alignment\";\nimport { ScrollSync, ScrollType } from \"../common/ScrollSync\";\nimport { SequenceLogoComponent, LOGO_TYPES } from \"./SequenceLogoComponent\";\nimport {\n  ISequenceBarplotDataSeries,\n  SequenceBarplotComponent,\n} from \"./SequenceBarplotComponent\";\nimport {\n  AminoAcidAlignmentStyle,\n  NucleotideAlignmentStyle,\n  PositionsToStyle,\n} from \"../common/MolecularStyles\";\nimport { MiniMapComponent } from \"./MiniMapComponent\";\nimport { AceMultipleSequenceAlignmentComponent } from \"./AceMultipleSequenceAlignmentComponent\";\nimport { AceConsensusSequenceComponent } from \"./AceConsensusSequenceComponent\";\nimport { AceTargetSequenceComponent } from \"./AceTargetSequenceComponent\";\nimport AceTextualRulerComponent from \"./AceTextualRulerComponent\";\nimport { AceEditorComponent } from \"./AceEditorComponent\";\nimport { ArrayOneOrMore } from \"../common/Utils\";\n\nexport type IAlignmentViewerProps = {\n  alignment: Alignment;\n  style: AminoAcidAlignmentStyle | NucleotideAlignmentStyle;\n} & Partial<DefaultPropsTypes>;\n\ntype DefaultPropsTypes = Readonly<typeof defaultProps>;\n\nconst defaultProps = {\n  logoPlotStyle: LOGO_TYPES.LETTERS as LOGO_TYPES,\n  zoomLevel: 13 as number,\n  sortBy: SequenceSortOptions.INPUT as SequenceSortOptions,\n  showMiniMap: false as boolean,\n  showAnnotations: true as boolean,\n  showConsensus: true as boolean,\n  showQuery: true as boolean,\n  showRuler: true as boolean,\n  showLogo: true as boolean,\n  barplotDataseries: [\n    SequenceBarplotComponent.SHANNON_ENTROPY_BARPLOT,\n    //SequenceBarplotComponent.KULLBAC_LEIBLER_DIVERGENCE_BARPLOT,\n    SequenceBarplotComponent.GAPS_BARPLOT,\n  ] as undefined | ArrayOneOrMore<ISequenceBarplotDataSeries>,\n};\n\ninterface IAlignmentViewerState {\n  aceCharacterWidth: number;\n  aceEditors: Ace.Editor[];\n  alignmentEditorVisibleFirstRow?: number;\n  alignmentEditorVisibleLastRow?: number;\n\n  windowWidth: number;\n  windowHeight: number;\n}\n\nexport class AlignmentViewer extends React.Component<\n  IAlignmentViewerProps,\n  IAlignmentViewerState\n> {\n  private verticalScrollSync: ScrollSync;\n  private horizontalScrollSync: ScrollSync;\n\n  static defaultProps = defaultProps;\n\n  constructor(props: IAlignmentViewerProps) {\n    super(props);\n\n    this.state = {\n      aceEditors: [],\n      aceCharacterWidth: 0,\n      windowWidth: window.innerWidth,\n      windowHeight: window.innerHeight,\n    };\n\n    this.verticalScrollSync = new ScrollSync(ScrollType.vertical);\n    this.horizontalScrollSync = new ScrollSync(ScrollType.horizontal);\n\n    //setup scroll groups\n    //ScrollSync.getInstance().setScrollerGroup(\n    //  \"horizontal\",\n    //  ScrollType.horizontal\n    //);\n    //ScrollSync.getInstance().setScrollerGroup(\"vertical\", ScrollType.vertical);\n  }\n\n  private handleCharacterSizeChanged = (newCharSize: number) => {\n    if (this.state.aceCharacterWidth !== newCharSize) {\n      this.setState({\n        aceCharacterWidth: newCharSize,\n      });\n    }\n  };\n\n  private aceEditorLoaded = (\n    id: string,\n    editor: Ace.Editor,\n    parentElem: HTMLDivElement,\n    scrollSyncDirection: ScrollType\n  ) => {\n    //console.log(\"_aceEditorLoaded id =\" + id);\n    if (\n      scrollSyncDirection === ScrollType.horizontal ||\n      scrollSyncDirection === ScrollType.both\n    ) {\n      this.horizontalScrollSync.registerAceScroller(editor, parentElem);\n    }\n    if (\n      scrollSyncDirection === ScrollType.vertical ||\n      scrollSyncDirection === ScrollType.both\n    ) {\n      this.verticalScrollSync.registerAceScroller(editor, parentElem);\n    }\n\n    this.setState({\n      aceCharacterWidth: editor.renderer.characterWidth, //todo: check if the same always.\n      aceEditors: [editor].concat(this.state.aceEditors),\n    });\n\n    //track visible rows to show in canvas MSA\n    if (id === \"ace-alignment\") {\n      editor.renderer.on(\"afterRender\", () => {\n        // BREAKS LOGO, rerenders everything below and kills performance. React lifecycle stuff.\n        setTimeout(() => {\n          this.setState({\n            alignmentEditorVisibleFirstRow: editor.renderer.getFirstFullyVisibleRow(),\n            alignmentEditorVisibleLastRow: editor.renderer.getLastFullyVisibleRow(),\n          });\n        });\n      });\n    }\n  };\n\n  private generateWidget(\n    className: string,\n    annotation: string | JSX.Element,\n    content: JSX.Element | null,\n    addAsElementToScrollSync?: boolean\n  ) {\n    return (\n      <div className={`av-widget ${className}`}>\n        <div className=\"av-annotation\">{annotation}</div>\n        <div\n          className=\"av-content\"\n          ref={(e) => {\n            if (e && addAsElementToScrollSync) {\n              //TODO: move into separate component .. Ref can be null here and\n              //      also good to keep track of removal / addition for scroll sync\n              //console.log(\"the ref is:\", e);\n              this.horizontalScrollSync.registerElementScroller(e);\n            }\n          }}\n        >\n          {content}\n        </div>\n      </div>\n    );\n  }\n\n  protected windowDimensionsUpdated = () => {\n    this.setState({\n      windowWidth: window.innerWidth,\n      windowHeight: window.innerHeight,\n    });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.windowDimensionsUpdated);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.windowDimensionsUpdated);\n  }\n\n  render() {\n    const {\n      alignment,\n      barplotDataseries,\n      showAnnotations,\n      showConsensus,\n      showLogo,\n      showQuery,\n      showRuler,\n    } = this.props;\n    if (!alignment) {\n      return null;\n    }\n\n    const annotationClass = showAnnotations ? \"\" : \" annotation-closed\";\n\n    return (\n      <div className={`alignment-viewer${annotationClass}`}>\n        {this.renderMiniMap()}\n        {/*<div id=\"column_mouseover\"></div>*/}\n        {!barplotDataseries\n          ? null\n          : this.generateWidget(\n              \"av-barplot-holder\",\n              barplotDataseries.map((series) => series.name).join(\" / \"),\n              this.renderConservationBox(),\n              true\n            )}\n\n        {!showLogo\n          ? null\n          : this.generateWidget(\n              \"av-sequence-logo-holder\",\n              \"Logo:\",\n              this.renderSequenceLogo(),\n              true\n            )}\n\n        {!showConsensus\n          ? null\n          : this.generateWidget(\n              \"av-consensus-seq-holder\",\n              \"Consensus sequence:\",\n              this.renderConsensusQueryBox()\n            )}\n\n        {!showQuery\n          ? null\n          : this.generateWidget(\n              \"av-target-seq-holder\",\n              \"Query sequence:\",\n              this.renderQuerySeqBox()\n            )}\n\n        {!showRuler\n          ? null\n          : this.generateWidget(\n              \"av-position-indicator-holder\",\n              \"Position:\",\n              this.renderPositionBox()\n            )}\n\n        {this.generateWidget(\n          \"av-ace-msa-holder\",\n          this.renderAlignmentAnnotationBox(),\n          this.renderAlignmentBox()\n        )}\n      </div>\n    );\n  }\n\n  protected renderSequenceLogo = () => {\n    const { alignment, logoPlotStyle, style } = this.props;\n    return (\n      <div\n        className={\n          `${style.alignmentType.className} ` +\n          `${style.colorScheme.className} ` +\n          `${PositionsToStyle.ALL.className}`\n        }\n      >\n        {\n          <SequenceLogoComponent\n            alignment={alignment}\n            glyphWidth={this.state.aceCharacterWidth}\n            logoType={logoPlotStyle}\n            alignmentType={style.alignmentType}\n          />\n        }\n      </div>\n    );\n  };\n\n  protected renderConservationBox = () => {\n    const { barplotDataseries } = this.props;\n    return !barplotDataseries || barplotDataseries.length < 1 ? null : (\n      <SequenceBarplotComponent\n        alignment={this.props.alignment}\n        dataSeries={barplotDataseries}\n        positionWidth={this.state.aceCharacterWidth}\n      ></SequenceBarplotComponent>\n    );\n  };\n\n  protected renderConsensusQueryBox = () => (\n    <div className=\"consensusseq-box\">\n      <AceConsensusSequenceComponent\n        alignment={this.props.alignment}\n        fontSize={this.props.zoomLevel}\n        classNames={[\n          \"ace-consensusseq\",\n          this.props.style.residueDetail.className,\n          this.props.style.alignmentType.className,\n          this.props.style.positionsToStyle.className,\n          this.props.style.colorScheme.className,\n        ].join(\" \")}\n        editorLoaded={(editor, parentElem) => {\n          this.aceEditorLoaded(\n            \"ace-consensusseq\",\n            editor,\n            parentElem,\n            ScrollType.horizontal\n          );\n        }}\n      ></AceConsensusSequenceComponent>\n    </div>\n  );\n\n  protected renderQuerySeqBox = () => (\n    <div className=\"queryseq-box\">\n      <AceTargetSequenceComponent\n        alignment={this.props.alignment}\n        fontSize={this.props.zoomLevel}\n        sortBy={this.props.sortBy}\n        classNames={[\n          \"ace-queryseq\",\n          this.props.style.residueDetail.className,\n          this.props.style.alignmentType.className,\n          this.props.style.positionsToStyle.className,\n          this.props.style.colorScheme.className,\n        ].join(\" \")}\n        editorLoaded={(editor, parentElem) => {\n          this.aceEditorLoaded(\n            \"ace-queryseq\",\n            editor,\n            parentElem,\n            ScrollType.horizontal\n          );\n        }}\n      ></AceTargetSequenceComponent>\n    </div>\n  );\n\n  protected renderPositionBox = () => (\n    <div className=\"position-box\">\n      {\n        <AceTextualRulerComponent\n          classNames=\"ace-positions\"\n          alignment={this.props.alignment}\n          fontSize={this.props.zoomLevel}\n          editorLoaded={(editor, parentElem) => {\n            this.aceEditorLoaded(\n              \"ace-positions\",\n              editor,\n              parentElem,\n              ScrollType.horizontal\n            );\n          }}\n          mouseEnter={() => {\n            //console.log(\"mouse entered position box\");\n          }}\n          mouseLeave={() => {\n            //console.log(\"mouse left position box\");\n          }}\n          mouseMove={(e) => {\n            //console.log(\"mouse moved in position box\", e);\n          }}\n          mouseDown={(e) => {\n            //console.log(\"mouse down in position box\", e);\n          }}\n        />\n      }\n    </div>\n  );\n\n  protected renderAlignmentBox = () => (\n    <div className=\"alignment-box\">\n      <AceMultipleSequenceAlignmentComponent\n        alignment={this.props.alignment}\n        fontSize={this.props.zoomLevel}\n        sortBy={this.props.sortBy}\n        classNames={[\n          \"ace-alignment\",\n          this.props.style.residueDetail.className,\n          this.props.style.alignmentType.className,\n          this.props.style.positionsToStyle.className,\n          this.props.style.colorScheme.className,\n        ].join(\" \")}\n        characterSizeChanged={this.handleCharacterSizeChanged}\n        editorLoaded={(editor, parentElem) => {\n          this.aceEditorLoaded(\n            \"ace-alignment\",\n            editor,\n            parentElem,\n            ScrollType.both\n          );\n        }}\n      ></AceMultipleSequenceAlignmentComponent>\n    </div>\n  );\n\n  protected renderAlignmentAnnotationBox = () => (\n    <div className=\"alignment-metadata-box\">\n      <AceEditorComponent\n        classNames=\"ace-alignment-metadata\"\n        text={this.props.alignment\n          .getSequences(this.props.sortBy)\n          .map((x) => x.id)\n          .join(\"\\n\")}\n        fontSize={this.props.zoomLevel}\n        editorLoaded={(editor, parentElem) => {\n          this.aceEditorLoaded(\n            \"ace-alignment-metadata\",\n            editor,\n            parentElem,\n            ScrollType.vertical\n          );\n        }}\n      ></AceEditorComponent>\n    </div>\n  );\n\n  protected renderMiniMap() {\n    const {\n      alignment,\n      sortBy,\n      showMiniMap,\n      style,\n      //minimapOptions,\n    } = this.props;\n    const { windowHeight } = this.state;\n\n    //let width, height;\n    //if (minimapOptions) {\n    //width = minimapOptions.width ?\n    //}\n    const width = Math.max(\n      300,\n      Math.min(450, alignment.getMaxSequenceLength())\n    );\n\n    const mmClassName = showMiniMap ? \"mini-map\" : \"mini-map hidden\";\n    return (\n      alignment &&\n      style && (\n        <div className={mmClassName}>\n          <MiniMapComponent\n            width={width}\n            height={windowHeight}\n            alignHorizontal={\"right\"}\n            alignment={alignment}\n            style={style}\n            sortBy={sortBy!}\n            highlightRows={\n              this.state.alignmentEditorVisibleFirstRow !== undefined &&\n              this.state.alignmentEditorVisibleLastRow !== undefined\n                ? [\n                    this.state.alignmentEditorVisibleFirstRow,\n                    this.state.alignmentEditorVisibleLastRow,\n                  ]\n                : undefined\n            }\n            onClickOrDrag={this.onMinimapClick}\n          />\n        </div>\n      )\n    );\n  }\n\n  protected onMinimapClick = (x: number, y: number) => {\n    const {\n      aceEditors,\n      alignmentEditorVisibleFirstRow: alignmentEditorFirstRow,\n      alignmentEditorVisibleLastRow: alignmentEditorLastRow,\n    } = this.state;\n    let rowCount = 40;\n    if (\n      alignmentEditorFirstRow !== undefined &&\n      alignmentEditorLastRow !== undefined\n    ) {\n      rowCount = alignmentEditorLastRow - alignmentEditorFirstRow;\n    }\n\n    if (aceEditors.length >= 1) {\n      aceEditors[0].scrollToRow(Math.floor(y));\n    }\n  };\n}\n","import { Alignment, ISequence } from \"./Alignment\";\n\n/**\n * FastaAlignment\n * This class represents a Fasta formatted multiple sequence alignment.\n */\nexport class FastaAlignment extends Alignment {\n  /**\n   * Parse a string that contains a fasta alignment.\n   * @param fileName\n   * @param fileContents\n   */\n  static fromFileContents(\n    fileName: string,\n    fileContents: string\n  ): FastaAlignment {\n    const fastaSplitCaret = fileContents.trim().split(\">\");\n    var sequences: ISequence[] = [];\n    for (var i = 0; i < fastaSplitCaret.length; i++) {\n      const seqArr = fastaSplitCaret[i].split(/\\r?\\n/);\n      if (seqArr.length > 1) {\n        var seqObj = {\n          id: seqArr[0],\n          sequence: seqArr.slice(1).join(\"\"),\n        };\n        sequences.push(seqObj);\n      }\n    }\n    return new FastaAlignment(fileName, sequences);\n  }\n}\n","import { Alignment, ISequence } from \"./Alignment\";\n\nexport interface IStockholmAlignmentMetadata {\n  //GF: Data relating to the multiple sequence alignment as a whole, such as authors or\n  //    number of sequences in the alignment. Duplicate feature names allowed (values added\n  //    to string array)\n  //\n  //  e.g., #=GF DE CBS domain\n  //        Where ``DE`` is the feature name and ``CBS Domain`` is the feature data\n  //\n  GF: { [featureName: string]: string }; //#=GF DE CBS domain - featureName=\"DE\", data=[\"CBS domain\"]\n\n  //GS: Data relating to a specific sequence in the multiple sequence alignment. Duplicate\n  //    sequence-feature pairs are allowed\n  //\n  //  e.g., #=GS O83071/259-312 AC O83071\n  //        Where \"O83071/259-312\" is the sequence name, \"AC\" is the feature name, and\n  //        \"083071\" is the feature data.\n  GS: { [sequenceId: string]: { [featureName: string]: string[] } };\n\n  // GR: Data relating to the columns of a specific sequence in a multiple sequence alignment.\n  //     Duplicate sequence-features pairs are not allowed.\n  //     Can also be thought of as positional metadata (i.e., like that sequences secondary\n  //     structure positional annotation)\n  //\n  //  e.g., #=GR O31698/18-71 SS    CCCHHHHHHHHHHHHHHH..EEEEEEEE....EEEEEEEEHHH\n  //        Where \"031698/18-71\" is the sequence name,  \"SS\" is the feature name, and\n  //        \"CCCHHHHHHHHHHHHHHH..EEEEEEEE....EEEEEEEEHHH\" is the feature data.\n  GR: { [sequenceId: string]: { [featureName: string]: string } };\n\n  // GC: Data relating to the multiple sequence alignment as a whole.\n  //     Duplicate sequence-features pairs are not allowed.\n  //\n  //  e.g., #=GC SS_cons            CCCCCHHHHHHHHHHHHH..EEEEEEEE....EEEEEEEEEEH\n  //        Where \"SS_cons\" is the feature name and\n  //        \"CCCCCHHHHHHHHHHHHH..EEEEEEEE....EEEEEEEEEEH\" is the feature data\n  GC: { [key: string]: string }; //column info for entire alignment\n}\n\n/**\n * StockholmAlignment\n * This class represents a Stockholm formatted multiple sequence alignment.\n *\n * Parser inspired by:\n *   https://github.com/biocore/scikit-bio/blob/master/skbio/io/format/stockholm.py\n *\n * The class should be instantiated using the static methods:\n *     fromFileContents: accepts a stockholm file-like string\n */\nexport class StockholmAlignment extends Alignment {\n  private metadata: IStockholmAlignmentMetadata;\n\n  public constructor(\n    name: string,\n    sequencesAsInput: ISequence[],\n    metadata: IStockholmAlignmentMetadata\n  ) {\n    super(name, sequencesAsInput);\n    this.metadata = metadata;\n  }\n\n  /**\n   * Parse a string that contains a stockholm alignment.\n   * @param fileName\n   * @param fileContents\n   * @throws an Error if the fileContents don't contain the expected\n   *         header and footer.\n   */\n  static fromFileContents(\n    fileName: string,\n    fileContents: string\n  ): StockholmAlignment {\n    const trimmedAndSplit = fileContents.trim().split(/\\r?\\n/);\n\n    // Raise an error if the header and footer don't indicate\n    // that the file string is of stockholm format:\n    //   header must start with \"# STOCKHOLM 1.0\"\n    //   footer must be \"//\"\n    if (\n      trimmedAndSplit.length < 3 ||\n      trimmedAndSplit[0].startsWith(\"# STOCKHOLM 1.0\") === false ||\n      trimmedAndSplit[trimmedAndSplit.length - 1] !== \"//\"\n    ) {\n      throw Error(\n        \"'fileContents' do not appear to be stockholm format\" +\n          \" (header !== '# STOCKHOLM 1.0' or footer !== '//')\"\n      );\n    }\n\n    const metadata: IStockholmAlignmentMetadata = {\n      GF: {},\n      GS: {},\n      GR: {},\n      GC: {},\n    };\n    const sequences: ISequence[] = [];\n    trimmedAndSplit\n      .slice(1, trimmedAndSplit.length - 1)\n      .forEach((line, idx) => {\n        line = line.trim();\n        if (!line.startsWith(\"#\")) {\n          //sequence line\n          const split = line.match(/^(\\S+)\\s(.*)/)!.slice(1);\n          sequences.push({ id: split[0].trim(), sequence: split[1].trim() });\n        } else {\n          //metadata line\n          if (\n            line.length < 8 ||\n            [\"GF\", \"GS\", \"GR\", \"GC\"].includes(line.substr(2, 2)) === false\n          ) {\n            console.warn(\n              \"Unexpected metadata line in Stockholm alignment: \" + line\n            );\n          } else {\n            const metadataGroup = line.substr(2, 2);\n\n            //match/slice splits on first whitespace. Taken from:\n            //       https://stackoverflow.com/questions/10272773\n            //Used multiple times and should reassess if it is the fastest. note\n            //that safari had problems with str.split(/(?<=^\\S+)\\s/)\n            const keyVal = line\n              .substr(5)\n              .trim()\n              .match(/^(\\S+)\\s(.*)/)!\n              .slice(1);\n            keyVal[1] = keyVal[1].trim();\n\n            if (metadataGroup === \"GF\") {\n              if (keyVal[0] in metadata.GF === false) {\n                metadata.GF[keyVal[0]] = keyVal[1];\n              } else {\n                metadata.GF[keyVal[0]] += \" \" + keyVal[1];\n              }\n            } else if (metadataGroup === \"GS\") {\n              const seqId = keyVal[0];\n              const featureVal = keyVal[1]\n                .trim()\n                .match(/^(\\S+)\\s(.*)/)!\n                .slice(1);\n              if (seqId in metadata.GS === false) {\n                metadata.GS[seqId] = {};\n              }\n              if (featureVal[0] in metadata.GS[seqId] === false) {\n                metadata.GS[seqId][featureVal[0]] = [];\n              }\n              metadata.GS[seqId][featureVal[0]].push(featureVal[1]);\n            } else if (metadataGroup === \"GR\") {\n              const seqId = keyVal[0];\n              const featureVal = keyVal[1]\n                .trim()\n                .match(/^(\\S+)\\s(.*)/)!\n                .slice(1);\n              if (seqId in metadata.GR === false) {\n                metadata.GR[seqId] = {};\n              }\n              metadata.GR[seqId][featureVal[0]] = featureVal[1];\n            } else if (metadataGroup === \"GC\") {\n              metadata.GC[keyVal[0]] = keyVal[1];\n            }\n          }\n        }\n      });\n    console.log(\"metadata:\", metadata);\n    console.log(\"sequences:\", sequences);\n    return new StockholmAlignment(fileName, sequences, metadata);\n  }\n\n  getMetadata() {\n    return this.metadata;\n  }\n}\n","import * as React from \"react\";\nimport \"./FileInput.scss\";\nimport { Alignment } from \"../common/Alignment\";\nimport { FastaAlignment } from \"../common/FastaAlignment\";\nimport { StockholmAlignment } from \"../common/StockholmAlignment\";\n\nexport interface IExampleFileProps {\n  labelText: string;\n  fileURL: string;\n  fileName: string;\n}\n\nexport interface IAlignmentLoaderProps {\n  fileSelectorLabelText: string;\n\n  onAlignmentLoaded: (alignment: Alignment) => void; //loading ended\n\n  exampleFiles?: IExampleFileProps[];\n  onFileLoadStart?: () => void; //notify on begin loading\n}\n\n// Inspired by https://reactjs.org/docs/uncontrolled-components.html\nexport class AlignmentFileLoaderComponent extends React.Component<\n  IAlignmentLoaderProps\n> {\n  public static defaultProps = {\n    fileSelectorLabelText: \"Upload:\",\n  };\n\n  protected fileInput: React.RefObject<HTMLInputElement>;\n  constructor(props: IAlignmentLoaderProps) {\n    super(props);\n    this.handleFileUploadInputChange = this.handleFileUploadInputChange.bind(\n      this\n    );\n    this.handleClick = this.handleClick.bind(this);\n    this.fileInput = React.createRef();\n  }\n\n  /**\n   * Pass the visible button click through to the file input\n   * @param event\n   */\n  private handleClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    event.preventDefault();\n    this.fileInput.current?.click();\n  }\n\n  /**\n   * Read the file text and report loading to the parent\n   * @param file\n   */\n  private readFileText(file: File) {\n    const { onAlignmentLoaded } = this.props;\n\n    var reader = new FileReader();\n    reader.onload = (e) => {\n      const fileText = reader.result as string;\n      let alignment: Alignment;\n      try {\n        alignment = StockholmAlignment.fromFileContents(file.name, fileText);\n      } catch (e) {\n        alignment = FastaAlignment.fromFileContents(file.name, fileText);\n      }\n\n      onAlignmentLoaded(alignment);\n      if (this.fileInput.current) {\n        this.fileInput.current.value = \"\"; //reset the input box\n      }\n    };\n    reader.readAsText(file);\n  }\n\n  /**\n   *\n   * @param event\n   */\n  private handleFileUploadInputChange(\n    event: React.FormEvent<HTMLInputElement>\n  ) {\n    const { onFileLoadStart } = this.props;\n    event.preventDefault();\n\n    if (this.fileInput.current && this.fileInput.current.files) {\n      if (onFileLoadStart) {\n        onFileLoadStart();\n      }\n      setTimeout(() => {\n        //safari needs this in a timeout, otherwise it runs synchronously?!?\n        const file = this.fileInput.current!.files![0];\n        this.readFileText(file);\n      });\n    }\n  }\n\n  /**\n   * Render the file upload button and hidden input box\n   */\n  private renderFileUpload() {\n    const { fileSelectorLabelText } = this.props;\n    return (\n      <label>\n        <strong>{fileSelectorLabelText}</strong>\n        <input\n          type=\"file\"\n          className=\"hidden-file-input\"\n          ref={this.fileInput}\n          onChange={this.handleFileUploadInputChange}\n        />\n        <button type=\"button\" onClick={this.handleClick}>\n          Choose File\n        </button>\n      </label>\n    );\n  }\n\n  /**\n   * render example fileset\n   */\n  private renderExampleFiles() {\n    const { exampleFiles, onFileLoadStart } = this.props;\n    return !exampleFiles ? null : (\n      <label>\n        <strong>Example Alignments:</strong>\n        {exampleFiles.map((ef) => {\n          return (\n            <button\n              type=\"button\"\n              className=\"button-link\"\n              key={ef.fileURL}\n              onClick={async (e) => {\n                if (onFileLoadStart) {\n                  onFileLoadStart();\n                }\n                const f = new File(\n                  [await (await fetch(`${ef.fileURL}`)).blob()],\n                  ef.fileName\n                );\n                this.readFileText(f);\n              }}\n            >\n              {ef.labelText}\n            </button>\n          );\n        })}\n      </label>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"alignment-file-loader\">\n        <div className=\"file-upload-input\">{this.renderFileUpload()}</div>\n        <div className=\"example-files\">{this.renderExampleFiles()}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.scss\";\nimport { Alignment, SequenceSortOptions } from \"./common/Alignment\";\nimport { AlignmentViewer } from \"./components/AlignmentViewerComponent\";\nimport {\n  AminoAcidAlignmentStyle,\n  NucleotideAlignmentStyle,\n  AlignmentStyle,\n  AlignmentTypes,\n  PositionsToStyle,\n  IColorScheme,\n  ResidueStyle,\n} from \"./common/MolecularStyles\";\nimport { LOGO_TYPES } from \"./components/SequenceLogoComponent\";\nimport { AlignmentFileLoaderComponent } from \"./components/AlignmentFileLoaderComponent\";\n\ninterface AppProps {}\ninterface AppState {\n  alignment?: Alignment;\n  style: AminoAcidAlignmentStyle | NucleotideAlignmentStyle;\n  sortBy: SequenceSortOptions;\n  logoPlotStyle: LOGO_TYPES;\n  zoomLevel: number;\n  showMiniMap: boolean;\n  showAnnotations: boolean;\n  showSettings: boolean;\n  loading?: boolean;\n}\n\nexport default class App extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n    this.state = {\n      style: new AminoAcidAlignmentStyle(),\n      logoPlotStyle: LOGO_TYPES.LETTERS, //TODO - decide NT or AA based on alignment\n      zoomLevel: 14,\n      sortBy: SequenceSortOptions.INPUT,\n      showMiniMap: false,\n      showAnnotations: true,\n      showSettings: true,\n    };\n    this.onAlignmentReceived = this.onAlignmentReceived.bind(this);\n  }\n\n  render() {\n    const {\n      alignment,\n      logoPlotStyle,\n      showAnnotations,\n      showMiniMap,\n      sortBy,\n      style,\n      zoomLevel,\n    } = this.state;\n\n    const alignmentElement = !alignment ? (\n      <></>\n    ) : (\n      <div className=\"av-holder\">\n        <AlignmentViewer\n          alignment={alignment}\n          style={style}\n          logoPlotStyle={logoPlotStyle}\n          zoomLevel={zoomLevel}\n          sortBy={sortBy}\n          showMiniMap={showMiniMap}\n          showAnnotations={showAnnotations}\n        ></AlignmentViewer>\n      </div>\n    );\n\n    return (\n      <div>\n        {this.renderSettingsBox(style)}\n        {alignmentElement}\n      </div>\n    );\n  }\n\n  protected renderSettingsBox = (\n    style: AminoAcidAlignmentStyle | NucleotideAlignmentStyle\n  ) => {\n    const { alignment } = this.state;\n    const alignmentDescription = alignment ? (\n      <div>\n        <h3>{alignment.getName()}</h3>\n        <h4>{`${\n          alignment.getSequences().length\n        } sequences (rows) and ${alignment.getMaxSequenceLength()} positions (columns) `}</h4>\n      </div>\n    ) : (\n      <></>\n    );\n\n    return (\n      <div className=\"app-header\">\n        <div className=\"settings-box\">\n          <form>\n            <div className=\"settings-header\">\n              <button\n                className={`button-link${\n                  this.state.showSettings ? \" hide\" : \"\"\n                }`}\n                type=\"button\"\n                onClick={(e) => {\n                  this.setState({\n                    showSettings: true,\n                  });\n                }}\n              >\n                Expand\n              </button>\n              <button\n                className={`button-link${\n                  this.state.showSettings ? \"\" : \" hide\"\n                }`}\n                type=\"button\"\n                onClick={(e) => {\n                  this.setState({\n                    showSettings: false,\n                  });\n                }}\n              >\n                Hide\n              </button>\n              <div>\n                <h2>{`AlignmentViewer 2.0 Settings Demo`}</h2>\n                {alignmentDescription}\n              </div>\n            </div>\n            <div\n              style={{\n                display: this.state.showSettings ? \"block\" : \"none\",\n                position: \"relative\",\n              }}\n            >\n              {this.renderAlignmentTypeLabel(style)}\n              {this.renderSortControl()}\n              {this.renderColorScheme(style)}\n              {this.renderResidueDetail(style)}\n              {this.renderPositionStyling(style)}\n              {this.renderSequenceLogo()}\n              {this.renderZoomButtons()}\n              {this.renderMiniMapToggle()}\n              {this.renderAnnotationToggle()}\n              <br></br>\n              {this.renderFileUpload()}\n              <div\n                className={`loader${this.state.loading ? \"\" : \" hide\"}`}\n              ></div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  protected renderSortControl = () => {\n    const { sortBy } = this.state;\n    return (\n      <div>\n        <label>\n          <strong>Sort order:</strong>\n          <select\n            value={sortBy.key}\n            onChange={(e) =>\n              this.setState({\n                sortBy: SequenceSortOptions.fromKey(e.target.value)!,\n              })\n            }\n          >\n            {SequenceSortOptions.list.map((sso) => {\n              return (\n                <option value={sso.key} key={sso.key}>\n                  {sso.description}\n                </option>\n              );\n            })}\n          </select>\n        </label>\n      </div>\n    );\n  };\n  protected renderAlignmentTypeLabel = (\n    style: AminoAcidAlignmentStyle | NucleotideAlignmentStyle\n  ) => {\n    return (\n      <div>\n        <label>\n          <strong>Alignment Type:</strong>\n          <select\n            value={style.alignmentType.key}\n            onChange={(e) =>\n              this.setState({\n                style: AlignmentStyle.fromAlignmentType(\n                  AlignmentTypes.fromKey(e.target.value)!\n                ),\n              })\n            }\n          >\n            {AlignmentTypes.list.map((alignmentType) => {\n              return (\n                <option value={alignmentType.key} key={alignmentType.key}>\n                  {alignmentType.description}\n                </option>\n              );\n            })}\n          </select>\n        </label>\n      </div>\n    );\n  };\n  protected renderColorScheme = (\n    style: AminoAcidAlignmentStyle | NucleotideAlignmentStyle\n  ) => {\n    return (\n      <div>\n        <label>\n          <strong>Color Scheme:</strong>\n          <select\n            value={style.alignmentType.allColorSchemes.indexOf(\n              style.colorScheme\n            )}\n            onChange={(e) => {\n              this.setState({\n                style: {\n                  ...style!,\n                  colorScheme:\n                    style.alignmentType.allColorSchemes[\n                      parseInt(e.target.value)\n                    ],\n                },\n              });\n            }}\n          >\n            {style.alignmentType.allColorSchemes.map(\n              (colorScheme: IColorScheme, index: number) => {\n                return (\n                  <option key={index} value={index}>\n                    {colorScheme.description}\n                  </option>\n                );\n              }\n            )}\n          </select>\n        </label>\n      </div>\n    );\n  };\n  protected renderResidueDetail = (\n    style: AminoAcidAlignmentStyle | NucleotideAlignmentStyle\n  ) => {\n    return (\n      <div>\n        <label>\n          <strong>Residue Style:</strong>\n          <select\n            value={style.residueDetail.key}\n            onChange={(e) => {\n              this.setState({\n                style: {\n                  ...style,\n                  residueDetail: ResidueStyle.fromKey(e.target.value)!,\n                },\n              });\n            }}\n          >\n            {ResidueStyle.list.map((rd) => {\n              return (\n                <option key={rd.key} value={rd.key}>\n                  {rd.description}\n                </option>\n              );\n            })}\n          </select>\n        </label>\n      </div>\n    );\n  };\n  protected renderPositionStyling = (\n    style: AminoAcidAlignmentStyle | NucleotideAlignmentStyle\n  ) => {\n    return (\n      <div>\n        <label>\n          <strong>Positions to Style:</strong>\n          <select\n            value={PositionsToStyle.list.indexOf(style.positionsToStyle)}\n            onChange={(e) => {\n              this.setState({\n                style: {\n                  ...style,\n                  positionsToStyle:\n                    PositionsToStyle.list[parseInt(e.target.value)],\n                },\n              });\n            }}\n          >\n            {PositionsToStyle.list.map(\n              (pts: PositionsToStyle, index: number) => {\n                return (\n                  <option key={index} value={index}>\n                    {pts.description}\n                  </option>\n                );\n              }\n            )}\n          </select>\n        </label>\n      </div>\n    );\n  };\n  protected renderSequenceLogo = () => {\n    const { logoPlotStyle } = this.state;\n    return (\n      <div>\n        <label>\n          <strong>Sequence Logo Style:</strong>\n          <select\n            value={logoPlotStyle}\n            onChange={(e) => {\n              this.setState({\n                logoPlotStyle: e.target.value as LOGO_TYPES,\n              });\n            }}\n          >\n            {Object.values(LOGO_TYPES).map((logoType) => {\n              return (\n                <option key={logoType} value={logoType}>\n                  {logoType}\n                </option>\n              );\n            })}\n          </select>\n        </label>\n      </div>\n    );\n  };\n  protected renderZoomButtons = () => {\n    const { zoomLevel } = this.state;\n    return (\n      <div>\n        <label>\n          <strong>Zoom Level:</strong>\n          <div className=\"zoom-level\">\n            <button\n              type=\"button\"\n              disabled={zoomLevel < 3}\n              onClick={(e) => {\n                this.setState({\n                  zoomLevel: zoomLevel - 1,\n                });\n              }}\n            >\n              -\n            </button>\n            {zoomLevel}\n            <button\n              type=\"button\"\n              disabled={zoomLevel > 15}\n              onClick={(e) => {\n                this.setState({\n                  zoomLevel: zoomLevel + 1,\n                });\n              }}\n            >\n              +\n            </button>\n          </div>\n        </label>\n      </div>\n    );\n  };\n\n  protected renderFileUpload = () => {\n    return (\n      <div>\n        <AlignmentFileLoaderComponent\n          fileSelectorLabelText={\"Upload Alignment File:\"}\n          exampleFiles={[\n            {\n              labelText: \"β-lactamase\",\n              fileURL:\n                process.env.PUBLIC_URL +\n                \"/7fa1c5691376beab198788a726917d48_b0.4.a2m\",\n              fileName: \"7fa1c5691376beab198788a726917d48_b0.4.a2m\",\n            },\n          ]}\n          onFileLoadStart={() => {\n            this.setState({\n              loading: true,\n            });\n          }}\n          onAlignmentLoaded={this.onAlignmentReceived}\n        />\n      </div>\n    );\n  };\n\n  protected renderMiniMapToggle = () => {\n    return (\n      <div className=\"minimap-toggle\">\n        <label>\n          <strong>Show MiniMap:</strong>\n\n          <input\n            name=\"showMiniMap\"\n            type=\"checkbox\"\n            checked={this.state.showMiniMap}\n            onChange={(e) => {\n              const target = e.target;\n              this.setState({\n                showMiniMap: target.checked,\n              });\n            }}\n          />\n        </label>\n      </div>\n    );\n  };\n\n  protected renderAnnotationToggle = () => {\n    return (\n      <div className=\"annotation-toggle\">\n        <label>\n          <strong>Show Annotations:</strong>\n\n          <input\n            name=\"showAnnotations\"\n            type=\"checkbox\"\n            checked={this.state.showAnnotations}\n            onChange={(e) => {\n              const target = e.target;\n              this.setState({\n                showAnnotations: target.checked,\n              });\n            }}\n          />\n        </label>\n      </div>\n    );\n  };\n\n  protected onAlignmentReceived(alignment: Alignment) {\n    this.setState({\n      alignment: alignment,\n      showSettings: false,\n      style: alignment.getDefaultStyle(),\n      loading: false,\n    });\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"acePrefix\":\"ace_\",\"preAceQueryClass\":\"q\",\"preAceConsensusClass\":\"c\",\"aceQueryClass\":\"q\",\"aceConsensusClass\":\"c\",\"aceResidueParentClass\":\"ace_line\",\"darkHueClass\":\"dark-residues\",\"lightHueClass\":\"light-residues\",\"lettersOnlyHueClass\":\"letters-only-residues\",\"aaAlignTypeClass\":\"alignment-aa\",\"ntAlignTypeClass\":\"alignment-nt\",\"styPosAllClass\":\"alignment-positions-tostyle-all\",\"styPosQueryClass\":\"alignment-positions-tostyle-query\",\"styPosQueryDiffClass\":\"alignment-positions-tostyle-query-diff\",\"styPosConsensusClass\":\"alignment-positions-tostyle-consensus\",\"styPosConsensusDiffClass\":\"alignment-positions-tostyle-consensus-diff\",\"aaStyClass_Default\":\"aa-alignment-style-default\",\"aaStyDesc_Default\":\"Default\",\"aaStyBGAlpha_Default\":\".25\",\"aaStyColorOrder_Default\":\"A,R,N,D,C,Q,E,G,H,I,L,K,M,F,P,S,T,W,Y,V\",\"aaStyColors_Default\":\"#3c0,#c00,#60c,#03f,#ff0,#60c,#03f,#3c0,#090,#3c0,#3c0,#c00,#3c0,#090,#3c0,#09f,#09f,#090,#090,#3c0\",\"aaStyClass_Buried\":\"aa-alignment-style-buried\",\"aaStyDesc_Buried\":\"Buried Index\",\"aaStyBGAlpha_Buried\":\".25\",\"aaStyColorOrder_Buried\":\"A,R,N,D,C,Q,E,G,H,I,L,K,M,F,P,S,T,W,Y,V,B,X,Z\",\"aaStyColors_Buried\":\"#00a35c,#00fc03,#00eb14,#00eb14,blue,#00f10e,#00f10e,#009d62,#00d52a,#0054ab,#007b84,lime,#009768,#008778,#00e01f,#00d52a,#00db24,#00a857,#00e619,#005fa0,#00eb14,#00b649,#00f10e\",\"aaStyClass_Cinema\":\"aa-alignment-style-cinema\",\"aaStyDesc_Cinema\":\"Cinema\",\"aaStyBGAlpha_Cinema\":\".25\",\"aaStyColorOrder_Cinema\":\"A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z\",\"aaStyColors_Cinema\":\"#bbb,grey,#ff0,red,red,#f0f,brown,cyan,#bbb,#fff,cyan,#bbb,#bbb,green,#fff,brown,green,cyan,green,green,#fff,#bbb,#f0f,grey,#f0f,grey\",\"aaStyClass_Clustal\":\"aa-alignment-style-clustal\",\"aaStyDesc_Clustal\":\"Clustal\",\"aaStyBGAlpha_Clustal\":\".25\",\"aaStyColorOrder_Clustal\":\"A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z\",\"aaStyColors_Clustal\":\"orange,#fff,green,red,red,blue,orange,red,green,#fff,red,green,green,#fff,#fff,orange,#fff,red,orange,orange,#fff,green,blue,#fff,blue,#fff\",\"aaStyClass_Clustal2\":\"aa-alignment-style-clustal2\",\"aaStyDesc_Clustal2\":\"Clustal2\",\"aaStyBGAlpha_Clustal2\":\".25\",\"aaStyColorOrder_Clustal2\":\"A,R,N,D,C,Q,E,G,H,I,L,K,M,F,P,S,T,W,Y,V,B,X,Z\",\"aaStyColors_Clustal2\":\"#80a0f0,#f01505,lime,#c048c0,#f08080,lime,#c048c0,#f09048,#15a4a4,#80a0f0,#80a0f0,#f01505,#80a0f0,#80a0f0,#ff0,lime,lime,#80a0f0,#15a4a4,#80a0f0,#fff,#fff,#fff\",\"aaStyClass_Helix\":\"aa-alignment-style-helix\",\"aaStyDesc_Helix\":\"Helix Propensity\",\"aaStyBGAlpha_Helix\":\".25\",\"aaStyColorOrder_Helix\":\"A,R,N,D,C,Q,E,G,H,I,L,K,M,F,P,S,T,W,Y,V,B,X,Z\",\"aaStyColors_Helix\":\"#e718e7,#6f906f,#1be41b,#787,#23dc23,#926d92,#f0f,lime,#758a75,#8a758a,#ae51ae,#a05fa0,#ef10ef,#986798,lime,#36c936,#47b847,#8a758a,#21de21,#857a85,#49b649,#758a75,#c936c9\",\"aaStyClass_Hydrophobicity\":\"aa-alignment-style-hydrophobicity\",\"aaStyDesc_Hydrophobicity\":\"Hydrophobicity\",\"aaStyBGAlpha_Hydrophobicity\":\".25\",\"aaStyColorOrder_Hydrophobicity\":\"F,I,W,L,V,M,Y,C,A,T,H,G,S,Q,R,K,N,E,P,D\",\"aaStyColors_Hydrophobicity\":\"red,red,#ff0606,#ff0606,#ff4c4c,#ff5252,#f77,#ffa5a5,#ffc0c0,#e1e1ff,#d0d0ff,#b6b6ff,#a5a5ff,#9595ff,#8787ff,#6969ff,#5959ff,#4f4fff,#1d1dff,blue\",\"aaStyClass_Lesk\":\"aa-alignment-style-lesk\",\"aaStyDesc_Lesk\":\"Lesk\",\"aaStyBGAlpha_Lesk\":\".25\",\"aaStyColorOrder_Lesk\":\"A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z\",\"aaStyColors_Lesk\":\"orange,#fff,green,red,red,green,orange,#f0f,green,#fff,red,green,green,#f0f,#fff,green,#f0f,red,orange,orange,#fff,green,green,#fff,green,#fff\",\"aaStyClass_MAE\":\"aa-alignment-style-mae\",\"aaStyDesc_MAE\":\"MAE\",\"aaStyBGAlpha_MAE\":\".25\",\"aaStyColorOrder_MAE\":\"A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z\",\"aaStyColors_MAE\":\"#7d8,#fff,#9e6,#5b3,#5b3,#99f,#7d8,#55f,#6bf,#fff,#fc7,#6bf,#6bf,#5b3,#fff,#eaa,#5b3,#fc7,#f45,#f45,#fff,#6bf,#99f,#fff,#99f,#fff\",\"aaStyClass_Strand\":\"aa-alignment-style-strand\",\"aaStyDesc_Strand\":\"Strand Propensity\",\"aaStyBGAlpha_Strand\":\".25\",\"aaStyColorOrder_Strand\":\"A,R,N,D,C,Q,E,G,H,I,L,K,M,F,P,S,T,W,Y,V,B,X,Z\",\"aaStyColors_Strand\":\"#5858a7,#6b6b94,#64649b,#2121de,#9d9d62,#8c8c73,blue,#4949b6,#60609f,#ecec13,#b2b24d,#4747b8,#82827d,#c2c23d,#2323dc,#4949b6,#9d9d62,#c0c03f,#d3d32c,#ff0,#4343bc,#797986,#4747b8\",\"aaStyClass_Taylor\":\"aa-alignment-style-taylor\",\"aaStyDesc_Taylor\":\"Taylor\",\"aaStyBGAlpha_Taylor\":\".25\",\"aaStyColorOrder_Taylor\":\"A,R,N,D,C,Q,E,G,H,I,L,K,M,F,P,S,T,W,Y,V,B,X,Z\",\"aaStyColors_Taylor\":\"#cf0,blue,#c0f,red,#ff0,#f0c,#f06,#f90,#06f,#6f0,#3f0,#60f,lime,#0f6,#fc0,#f30,#f60,#0cf,#0fc,#9f0,#fff,#fff,#fff\",\"aaStyClass_Turn\":\"aa-alignment-style-turn\",\"aaStyDesc_Turn\":\"Turn Propensity\",\"aaStyBGAlpha_Turn\":\".25\",\"aaStyColorOrder_Turn\":\"A,R,N,D,C,Q,E,G,H,I,L,K,M,F,P,S,T,W,Y,V,B,X,Z\",\"aaStyColors_Turn\":\"#2cd3d3,#708f8f,red,#e81717,#a85757,#3fc0c0,#788,red,#708f8f,cyan,#1ce3e3,#7e8181,#1ee1e1,#1ee1e1,#f60909,#e11e1e,#738c8c,#738c8c,#9d6262,#07f8f8,#f30c0c,#7c8383,#5ba4a4\",\"aaStyClass_Zappo\":\"aa-alignment-style-zappo\",\"aaStyDesc_Zappo\":\"Zappo\",\"aaStyBGAlpha_Zappo\":\".25\",\"aaStyColorOrder_Zappo\":\"A,R,N,D,C,Q,E,G,H,I,L,K,M,F,P,S,T,W,Y,V,B,X,Z\",\"aaStyColors_Zappo\":\"#ffafaf,#6464ff,lime,red,#ff0,lime,red,#f0f,#6464ff,#ffafaf,#ffafaf,#6464ff,#ffafaf,#ffc800,#f0f,lime,lime,#ffc800,#ffc800,#ffafaf,#fff,#fff,#fff\",\"ntStyClass_Default\":\"nt-alignment-style-default\",\"ntStyDesc_Default\":\"Default\",\"ntStyBGAlpha_Default\":\".25\",\"ntStyColorOrder_Default\":\"A,C,G,T,U,R,Y\",\"ntStyColors_Default\":\"#5050ff,#e00000,#00c000,#e6e600,#c90,#2e8b57,#ff8c00\",\"ntStyClass_Nucleotide\":\"nt-alignment-style-nucleotide\",\"ntStyDesc_Nucleotide\":\"Nucleotide\",\"ntStyBGAlpha_Nucleotide\":\".25\",\"ntStyColorOrder_Nucleotide\":\"A,C,G,T,U\",\"ntStyColors_Nucleotide\":\"#64f73f,#ffb340,#eb413c,#3c88ee,#3c88ee\",\"ntStyClass_Purine\":\"nt-alignment-style-purine\",\"ntStyDesc_Purine\":\"Purine/Pyrimidine\",\"ntStyBGAlpha_Purine\":\".25\",\"ntStyColorOrder_Purine\":\"A,C,G,R,T,U,Y\",\"ntStyColors_Purine\":\"#ff83fa,#40e0d0,#ff83fa,#ff83fa,#40e0d0,#40e0d0,#40e0d0\"};"],"sourceRoot":""}