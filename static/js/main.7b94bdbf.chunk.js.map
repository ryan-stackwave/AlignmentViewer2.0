{"version":3,"sources":["Alignment.ts","ScrollSync.ts","MolecularStyles.tsx","AceMSAComponent.tsx","AceAlignmentMode.tsx","SequenceLogoComponent.tsx","SequenceLogoGlyphs.tsx","SequenceConservationComponent.tsx","Utils.tsx","Residues.tsx","AlignmentCanvasComponent.tsx","components/MiniMap.tsx","AlignmentViewer.tsx","components/FileInputComponent.tsx","App.tsx","serviceWorker.js","index.js","MolecularStyles.module.scss"],"names":["DistanceFunctions","SequenceSortOptions","key","description","isTargetSequenceDependent","distanceFn","list","find","at","INPUT","HAMMING_DIST_TARGET","hamming","ScrollType","Alignment","name","sequencesAsInput","sequences","targetSequence","positionalLetterCounts","Map","globalAlphaLetterCounts","allAlphaLettersSorted","consensus","this","set","start","Date","allLetters","sequenceIdx","length","seq","sequence","positionIdx","letter","toUpperCase","letterIsAlpha","match","position","letterCounts","get","Object","keys","sort","reduce","arr","value","push","Array","from","map","topLetter","acc","currentLetter","occurrences","console","log","getTime","fileName","fileContents","fastaSplitCaret","split","i","seqArr","seqObj","id","slice","join","seq1","seq2","distFn","minLength","distance","Error","validLetters","totalCounts","includes","isNaN","normalize","normalizeLetterCounts","getSequences","sortBy","forceReSort","has","sortByDistanceToTargetSequence","newTarget","undefined","forEach","inputSequences","s","getSequenceDistance","ScrollSync","_groupScrollpropsHM","_lastScrollerOffsets","_blockNextHorizontalScrollEvent","_blockNextVerticalScrollEvent","scroller","renderer","$getLongestLine","$padding","$size","scrollerWidth","scrolledScroller","groupName","newScrollValue","scrollDirection","_setScrollerLastOffsets","scrollers","siblingScroller","horizontal","session","getScrollLeft","setScrollLeft","vertical","getScrollTop","setScrollTop","scrollLeft","scrollTop","scrollType","scrolltype","dontErrorOnDuplicate","group","both","on","newScrollLeft","_handleScrollEvent","Math","round","e","onscroll","direction","target","lastLeft","singleton","ALL_AMINOACID_COLORSCHEMES","assembleColorSchemes","ALL_NUCLEOTIDE_COLORSCHEMES","moleculeType","styles","styleName","indexOf","colorSchemeName","colorOrder","hexValues","commonName","className","backgroundAlpha","parseFloat","colors","fromEntries","_","AlignmentTypes","allColorSchemes","AMINOACID","aaAlignTypeClass","NUCLEOTIDE","ntAlignTypeClass","PositionsToStyle","ALL","styPosAllClass","QUERY","styPosQueryClass","QUERY_DIFF","styPosQueryDiffClass","CONSENSUS","styPosConsensusClass","CONSENSUS_DIFF","styPosConsensusDiffClass","ResidueDetailTypes","BOTH","LETTER_ONLY","transparentBackgroundClass","BACKGROUND_ONLY","transparentLetterClass","AceEditorTypes","AlignmentStyle","alignmentType","colorScheme","positionsToStyle","residueDetail","AminoAcidAlignmentStyle","NucleotideAlignmentStyle","acePrefix","defineNewAlignmentMode","mode","alignment","modeSplit","modeName","ace","define","require","exports","module","oop","TextHighlightRules","AlignmentHighlightRules","rules","stateName","nextStateName","getMaxSequenceLength","token","isConsensus","isQuery","preAceConsensusClass","preAceQueryClass","getClassNamesForAce","getConsensus","getTargetSequence","regex","next","$rules","inherits","TextMode","Mode","Tokenizer","$tokenizer","getRules","call","prototype","LOGO_TYPES","AceMSAComponent","editor","prevProps","props","fontSize","getFontSize","setFontSize","characterSizeChanged","characterWidth","type","selectAll","removeLines","insertDataIntoEditor","el","edit","setShowPrintMargin","setReadOnly","setHighlightActiveLine","setHighlightGutterLine","setShowGutter","setPadding","$cursorLayer","element","style","display","pos","getDocumentPosition","screenCoordinates","textToScreenCoordinates","row","column","columnMouseover","document","getElementById","left","pageX","extraPadding","width","setState","mouseRow","mouseColumn","mousePageX","mousePageY","pageY","mouseContainerX","query","getName","setMode","insert","x","alignment_metadata","maxSequenceLength","generateTextualRuler","setupAndInsertAceEditor","editorLoaded","zoomLevel","state","topLevelClassNames","onMouseLeave","mouseExited","ref","divLoaded","xOffsetIndicator","maxLength","Q","sn","np","substr","React","Component","GlyphFactory","letterToGlyphHM","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","R","S","T","U","V","W","X","Y","Z","d","transform","fill","cx","cy","r","stroke","strokeOpacity","fillOpacity","strokeWidth","SequenceLogoComponent","scrollerDiv","loaded","logoLoaded","nextProps","logoType","glyphWidth","getPositionalLetterCounts","lettersSorted","getSortedAlphaLetters","frequencies","totalCountAtPosition","total","frequenciesAtPosition","freq","sortedAlphabet","classNames","logoData","frequency","letterIdx","filter","a","b","totalWidth","preserveAspectRatio","viewBox","height","xmlns","singlePositionData","positionalFrequencies","dy","xscale","idx","BARS","glyphFromChar","generateStack","SequenceConservationComponent","isHovered","handleSvgHover","bind","pk","qk","doLog","toReturn","backgroundLetterCounts","getGlobalAlphaLetterCounts","entropies","computeEntropy","maxEmpiricalEntropy","max","entropy","normalizedEntropy","maxSeqLength","numSequences","gapCounts","getGapsPerColumn","gapPercentage","conservationPlotLoaded","hoveredClass","backgroundColor","border","padding","top","right","color","visibility","zIndex","paddingLeft","onMouseEnter","createGapCountGs","createConservationCountGs","hexToRgb","hex","replace","m","g","result","exec","red","parseInt","green","blue","AminoAcid","singleLetterCode","threeLetterCode","fullName","glyph","cs","colorPair","entries","aa","hexString","rgb","bySingleLetterCode","UNKNOWN","byThreeLetterCode","canonicalAminoAcids","Nucleotide","allNucleotides","AlignmentHighlighter","PixiComponent","create","Graphics","applyProps","instance","y","fillColor","fillAlpha","clear","beginFill","drawRect","endFill","AlignmentCanvasComponent","app","scaleX","scaleY","renderAlignmentHighlighter","body","overflow","onWheel","newValue","xy","stage","children","sprite","scale","highlightRows","stageResolution","viewportProps","PIXI","SCALE_MODE","NEAREST","options","transparent","Consumer","PixiViewport","numColumns","numRows","mouseDown","defaultProps","useDrag","usePinch","useWheel","zoomPercent","viewport","PixiAlignmentTiled","fullWidth","fullHeight","sizes","targetTileWidth","min","targetTileHeight","tiledImages","initializeTiledImages","tileYNumber","numYTiles","tileXNumber","numXTiles","tiledImage","generateCanvasForTile","tiles","tile","source","image","pixelX","pixelY","tileX","tileY","tileImageData","tileCanvasContext","tileCanvas","offsets","imageDataIdx","seqIdx","seqY","letterX","getCurrentMoleculeColors","data","putImageData","createElement","lastTileHeight","lastTileWidth","getContext","fillRect","getImageData","colorCanvasWithSequence","consensusSequence","querySequence","moleculeClass","molecule","fromSingleLetterCode","floor","vp","Viewport","screenWidth","screenHeight","worldWidth","worldHeight","interaction","plugins","decelerate","clamp","bounce","friction","time","underflow","clampZoom","maxHeight","maxWidth","drag","pinch","wheel","world","ins","oldProps","newProps","setZoom","MiniMap","renderCanvasComponent","opacity","onMouseDown","renderZoomControls","textAlign","onClick","onZoomOut","onZoomReset","onZoomIn","alignHorizontal","alignVertical","bottom","AlignmentViewer","_handleCharacterSizeChanged","newCharSize","aceCharacterWidth","_aceEditorLoaded","scrollSyncDirection","scrollSync","getInstance","registerScroller","aceEditors","concat","setTimeout","alignmentEditorFirstRow","getFirstFullyVisibleRow","alignmentEditorLastRow","getLastFullyVisibleRow","renderSequenceLogo","logoPlotStyle","renderConservationBox","renderConsensusQueryBox","renderQuerySeqBox","renderPositionBox","renderAlignmentBox","renderAlignmentAnnotationBox","onMinimapClick","rowCount","scrollToRow","setScrollerGroup","annotation","content","addToScrollSync","_elementLoaded","renderMiniMap","generateWidget","FileInputComponent","fileInput","handleSubmit","event","onFileLoadCb","preventDefault","current","files","labelText","onInput","App","renderSettingsBox","alignmentName","renderSortControl","renderAlignmentTypeLabel","renderColorScheme","renderResidueDetail","renderPositionStyling","renderZoomButtons","renderFileUpload","renderExampleLinks","onChange","fromKey","sso","fromAlignmentType","index","rd","pts","values","disabled","onFileUpload","async","File","fetch","process","blob","f","file","text","fileText","fromFileContents","LETTERS","alignmentElement","Boolean","window","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b94bdbf.chunk.js","sourcesContent":["export interface ISequence {\n  id: string;\n  sequence: string;\n}\n\nenum DistanceFunctions {\n  \"hamming\"\n}\nexport class SequenceSortOptions {\n  static readonly INPUT = new SequenceSortOptions(\n    \"as-input\",\n    \"As input\",\n    false\n  );\n  static readonly HAMMING_DIST_TARGET = new SequenceSortOptions(\n    \"hamming-dist-to-target\",\n    \"Hamming distance to target sequence\",\n    true,\n    DistanceFunctions.hamming\n  );\n\n  static list = [\n    SequenceSortOptions.INPUT,\n    SequenceSortOptions.HAMMING_DIST_TARGET\n  ];\n\n  static fromKey(key: string) {\n    return SequenceSortOptions.list.find(at => {\n      return at.key === key;\n    });\n  }\n\n  private constructor(\n    public readonly key: string,\n    public readonly description: string,\n    public readonly isTargetSequenceDependent: boolean,\n    public readonly distanceFn?: DistanceFunctions\n  ) {}\n}\n\n/**\n * Alignment\n * This class represents a multiple sequence alignment. During initialization,\n * positional statistics are generated about the alignment and a consensus\n * sequence is determined.\n *\n * The class should be instantiated using the static methods:\n *     fromFileContents: accepts a fasta file-like string\n */\nexport default class Alignment {\n  private name: string;\n  private sequences: Map<SequenceSortOptions, ISequence[]>;\n  private targetSequence: ISequence;\n  private positionalLetterCounts = new Map<\n    number,\n    { [letter: string]: number }\n  >();\n  private globalAlphaLetterCounts: { [letter: string]: number } = {};\n  private allAlphaLettersSorted: string[];\n  private consensus: {\n    letter: string;\n    position: number;\n    occurrences: number;\n  }[] = [];\n\n  /**\n   * Create and return a new Alignment object from a fasta-type file\n   * @param fileContents the multiple sequence alignment fasta file as a string\n   */\n  static fromFileContents(fileName: string, fileContents: string): Alignment {\n    const fastaSplitCaret = fileContents.split(\">\");\n    var sequences: ISequence[] = [];\n    for (var i = 0; i < fastaSplitCaret.length; i++) {\n      const seqArr = fastaSplitCaret[i].split(/\\r?\\n/);\n      if (seqArr.length > 1) {\n        var seqObj = {\n          id: seqArr[0],\n          sequence: seqArr.slice(1).join(\"\")\n        };\n        sequences.push(seqObj);\n      }\n    }\n    return new Alignment(fileName, sequences);\n  }\n\n  /**\n   * Determine the distance between two sequences\n   * @param seq1\n   * @param seq2\n   * @param distFn what method should be used to calculate distance\n   * @returns the distance between the sequence pair\n   * @throws an Error if an invalid distance function is provided.\n   */\n  private static getSequenceDistance(\n    seq1: ISequence,\n    seq2: ISequence,\n    distFn: DistanceFunctions\n  ) {\n    const minLength =\n      seq1.sequence.length < seq2.sequence.length\n        ? seq1.sequence.length\n        : seq2.sequence.length;\n    let distance = 0;\n\n    if (distFn === DistanceFunctions.hamming) {\n      for (var i = 0; i < minLength; i++) {\n        if (seq1.sequence[i] !== seq2.sequence[i]) {\n          distance += 1;\n        }\n      }\n      return distance;\n    }\n    throw Error(\n      \"Unable to determine sequence distance with distance function \" + distFn\n    );\n  }\n\n  /**\n   * Normalize all values in an object that contains all counts such that\n   * the sum of those counts equals 1.\n   * @param letterCounts an object that contains the same keys, but whose\n   *                     values now sum to 1.\n   * @param validLetters if provided, returned object will only contain letters\n   *                     that are in this array.\n   */\n  private static normalizeLetterCounts(\n    letterCounts: { [letter: string]: number },\n    validLetters?: string[]\n  ) {\n    const totalCounts = Object.keys(letterCounts).reduce((acc, letter) => {\n      if (!validLetters || validLetters.includes(letter)) {\n        acc += letterCounts[letter];\n      }\n      return acc;\n    }, 0);\n\n    return Object.keys(letterCounts).reduce((acc, letter) => {\n      if (!validLetters || validLetters.includes(letter)) {\n        acc[letter] = letterCounts[letter] / totalCounts;\n      }\n      return acc;\n    }, {} as { [letter: string]: number });\n  }\n\n  /**\n   * Create a new Alignment object. The default target sequence will\n   * be set to the first sequence in sequences. This can be changed\n   * by calling setTargetSequence() after creation\n   * @param sequences\n   */\n  public constructor(name: string, sequencesAsInput: ISequence[]) {\n    this.name = name;\n    this.sequences = new Map<SequenceSortOptions, ISequence[]>();\n    this.sequences.set(SequenceSortOptions.INPUT, sequencesAsInput);\n    this.targetSequence = sequencesAsInput[0];\n\n    //\n    //generate statistics\n    //\n    const start = new Date();\n    const allLetters: { [key: string]: number } = {}; //all letters in the alignment\n\n    //this for loop takes the bulk of the time\n    for (\n      let sequenceIdx = 0;\n      sequenceIdx < sequencesAsInput.length;\n      sequenceIdx++\n    ) {\n      const seq = sequencesAsInput[sequenceIdx].sequence;\n      for (let positionIdx = 0; positionIdx < seq.length; positionIdx++) {\n        const letter = seq[positionIdx].toUpperCase();\n        const letterIsAlpha = letter.match(/[a-z]/i) ? true : false;\n\n        const position = positionIdx; // zero based\n        allLetters[letter] = 1;\n\n        let letterCounts = this.positionalLetterCounts.get(position);\n        if (!letterCounts) {\n          letterCounts = {};\n          this.positionalLetterCounts.set(position, letterCounts);\n        }\n        if (letter in letterCounts === false) {\n          letterCounts[letter] = 0;\n        }\n        letterCounts[letter] += 1;\n\n        if (letterIsAlpha) {\n          if (letter in this.globalAlphaLetterCounts === false) {\n            this.globalAlphaLetterCounts[letter] = 0;\n          }\n          this.globalAlphaLetterCounts[letter] += 1;\n        }\n      }\n    }\n\n    this.allAlphaLettersSorted = Object.keys(allLetters)\n      .sort()\n      .reduce((arr: string[], value: string) => {\n        if (value.match(/[a-z]/i)) {\n          // only keep letters\n          arr.push(value);\n        }\n        return arr;\n      }, []);\n\n    this.consensus = Array.from(this.positionalLetterCounts).map(\n      ([position, letterCounts]) => {\n        const topLetter = this.allAlphaLettersSorted.reduce(\n          (acc, currentLetter) => {\n            if (\n              acc in letterCounts === false ||\n              letterCounts[acc] < letterCounts[currentLetter]\n            ) {\n              return currentLetter;\n            }\n            return acc;\n          }\n        );\n\n        return {\n          position: position,\n          letter: topLetter,\n          occurrences: letterCounts[topLetter]\n        };\n      }\n    );\n    console.log(\n      \"done parsing alignment. took \" +\n        (new Date().getTime() - start.getTime()) +\n        \"ms\"\n    );\n  }\n\n  /**\n   * Get the name of this alignment\n   * @returns a name for the alignment - usually the filename\n   */\n  getName() {\n    return this.name;\n  }\n\n  /**\n   * Get the consensus sequence\n   * @returns a position ordered array of objects that contain each letter, its number of\n   *          occurrences, and the actual position number\n   */\n  getConsensus() {\n    return this.consensus;\n  }\n\n  /**\n   * Get the number of gaps at each position\n   * @returns an array of gap counts, ordered by position\n   */\n  getGapsPerColumn(): number[] {\n    return Array.from(this.positionalLetterCounts).map(\n      ([position, letterCounts]) => {\n        return !isNaN(letterCounts[\"-\"]) ? letterCounts[\"-\"] : 0;\n      }\n    );\n  }\n\n  /**\n   * Get the total number of times each letter appears in the alignment.\n   * @param normalize if true, will normalize the returned array such that\n   *                  it sums to 1.\n   * @param validLetters if provided, only those letters will be included\n   *                     in the resulting counts\n   */\n  getGlobalAlphaLetterCounts(normalize?: boolean, validLetters?: string[]) {\n    if (normalize) {\n      return Alignment.normalizeLetterCounts(\n        this.globalAlphaLetterCounts,\n        validLetters\n      );\n    }\n    return this.globalAlphaLetterCounts;\n  }\n\n  /**\n   * Get the length of the longest sequence\n   * @returns the length of the largest sequence in this alignment\n   */\n  getMaxSequenceLength(): number {\n    return this.getSequences().reduce((acc, seq) => {\n      if (seq.sequence.length > acc) {\n        acc = seq.sequence.length;\n      }\n      return acc;\n    }, -1);\n  }\n\n  /**\n   * Get the frequencies of all letters in this alignment for each position.\n   * @param normalize if true, will normalize the returned letter counts for each\n   *                  position such that each sums to 1.\n   * @param validLetters if provided, only those letters will be included\n   *                     in the resulting counts\n   * @returns a Map whose keys are position (ordered) and values are a dictionary\n   *          with [key = letter (e.g., amino acid code)] and [value = # occurrences].\n   */\n  getPositionalLetterCounts(normalize?: boolean, validLetters?: string[]) {\n    if (normalize) {\n      return Array.from(this.positionalLetterCounts).reduce(\n        (acc, [position, letterCounts]) => {\n          acc.set(\n            position,\n            Alignment.normalizeLetterCounts(letterCounts, validLetters)\n          );\n          return acc;\n        },\n        new Map<Number, { [letter: string]: number }>()\n      );\n    }\n\n    return this.positionalLetterCounts;\n  }\n\n  /**\n   * Get all the sequences in this alignment - ordered as they were input\n   * @param sortBy specifies the order of the returned sequences. If it isn't\n   *               provided, returns the sequences as they were input to create\n   *               the Alignment object, e.g., usually fasta order.\n   * @param forceReSort if provided, sequences are forced to be re-sorted (rather\n   *                    than possibly cached)\n   * @returns all sequences in this alignment\n   */\n  getSequences(\n    sortBy?: SequenceSortOptions,\n    forceReSort?: boolean\n  ): ISequence[] {\n    sortBy = sortBy ? sortBy : SequenceSortOptions.INPUT;\n    forceReSort = forceReSort ? forceReSort : false;\n    if (!this.sequences.has(sortBy) || forceReSort) {\n      //cache not yet populated for this sort option\n      switch (sortBy) {\n        case SequenceSortOptions.INPUT:\n          break;\n        case SequenceSortOptions.HAMMING_DIST_TARGET:\n          this.sequences.set(\n            sortBy,\n            this.sortByDistanceToTargetSequence(\n              SequenceSortOptions.HAMMING_DIST_TARGET.distanceFn!\n            )\n          );\n          break;\n        default:\n          throw Error(\n            `The sortBy option provided \"${sortBy}\" is not implemented`\n          );\n      }\n    }\n    return this.sequences.get(sortBy)!;\n  }\n\n  /**\n   * Get a sorted list of all of the letters in the alignment.\n   * @returns a list of all letters in the alignment sorted alphabetically.\n   */\n  getSortedAlphaLetters(): string[] {\n    return this.allAlphaLettersSorted;\n  }\n\n  /**\n   * Get all the first sequence in the alignment, aka, target / query / first\n   * @returns all sequences in this alignment\n   */\n  getTargetSequence(): ISequence {\n    return this.targetSequence;\n  }\n\n  /**\n   * Set the target sequence\n   * @param newTarget The new target sequence. Must already exist in the alignment.\n   * @throws an error if the target sequence does not yet exist in the alignment\n   *\n   * IMPORTANT: Requires re-sorting\n   */\n  setTargetSequence(newTarget: ISequence) {\n    const targetInAlignment = this.getSequences().find(seq => {\n      if (seq === newTarget) {\n        return true;\n      }\n      return false;\n    });\n    if (targetInAlignment !== undefined) {\n      this.targetSequence = newTarget;\n\n      this.sequences.forEach(\n        (sequences: ISequence[], sortBy: SequenceSortOptions) => {\n          this.getSequences(sortBy, true); // force re-sorting, which updates cache\n        }\n      );\n    } else {\n      throw Error(\"target sequence does not exist in alignment\");\n    }\n  }\n\n  /**\n   * This method sorts sequences or\n   * Sort the current alignment similarity to the target sequence\n   * @returns a new alignment whose sequences are sorted in descending\n   *          order by similarity to the target sequence.\n   */\n  private sortByDistanceToTargetSequence(distFn: DistanceFunctions) {\n    const inputSequences = this.getSequences();\n    switch (distFn) {\n      case DistanceFunctions.hamming:\n        return inputSequences\n          .map(s => s)\n          .sort((seq1, seq2) => {\n            const dist1 = Alignment.getSequenceDistance(\n              this.targetSequence,\n              seq1,\n              DistanceFunctions.hamming\n            );\n            const dist2 = Alignment.getSequenceDistance(\n              this.targetSequence,\n              seq2,\n              DistanceFunctions.hamming\n            );\n            return dist1 - dist2;\n          });\n      default:\n        throw Error(\n          `The distFn option provided \"${distFn}\" is not implemented`\n        );\n    }\n  }\n}\n","import { Ace } from \"ace-builds\";\n\n/**\n * ScrollSync.ts\n * This helper is used to synchronize the different ace and div\n * scrolling.\n *\n * Should be used as a singleton:\n *     import ScrollSync from './ScrollSync';\n *     let scrollSync = ScrollSync.singleton();\n *     scrollSync.setScrollerGroup('verticalScrollersA', 'vertical')\n *     scrollSync.registerScrollElement(element, group) //AND/OR\n *     scrollSync.registerScrollAceEditor(aceEditor, group) //OR\n *\n * Ideas taken from 2 projects:\n *   https://github.com/okonet/react-scroll-sync\n *   https://github.com/AhmadMHawwash/scroll-sync-react\n */\nexport enum ScrollType {\n  vertical,\n  horizontal,\n  both\n}\n\ninterface ScrollProps {\n  scrolltype: ScrollType;\n  scrollers: (HTMLElement | Ace.Editor)[];\n}\n\nexport default class ScrollSync {\n  static singleton: undefined | ScrollSync = undefined;\n\n  private _groupScrollpropsHM: { [key: string]: ScrollProps } = {};\n  private _lastScrollerOffsets: Map<\n    Ace.Editor | HTMLElement,\n    { lastTop: number; lastLeft: number }\n  > = new Map();\n  private _blockNextHorizontalScrollEvent: Map<\n    Ace.Editor | HTMLElement,\n    boolean\n  > = new Map();\n  private _blockNextVerticalScrollEvent: Map<\n    Ace.Editor | HTMLElement,\n    boolean\n  > = new Map();\n\n  /**\n   * @returns {ScrollSync}\n   */\n  static getInstance(): ScrollSync {\n    if (!this.singleton) {\n      this.singleton = new ScrollSync();\n    }\n    return this.singleton;\n  }\n\n  _setScrollerLastOffsets(scroller: HTMLElement | Ace.Editor) {}\n\n  /**\n   * Returns the width of the hidden area (scroll width) in px of the element or ace editor.\n   * @param scroller\n   */\n  _getAceMaxScrollWidth(scroller: Ace.Editor): number {\n    //scroller is an ace editor\n    return (\n      scroller.renderer.$getLongestLine() +\n      2 * scroller.renderer.$padding -\n      scroller.renderer.$size.scrollerWidth\n    );\n  }\n\n  /**\n   *\n   */\n  _handleScrollEvent(\n    scrolledScroller: HTMLElement | Ace.Editor,\n    groupName: string,\n    newScrollValue: number,\n    scrollDirection: ScrollType.horizontal | ScrollType.vertical\n  ) {\n    if (!this._blockNextHorizontalScrollEvent.get(scrolledScroller)) {\n      this._setScrollerLastOffsets(scrolledScroller);\n      //update other nodes in the group\n      const group = this._groupScrollpropsHM[groupName];\n      group.scrollers.forEach(siblingScroller => {\n        if (siblingScroller !== scrolledScroller) {\n          if (\"renderer\" in siblingScroller) {\n            //the siblingScroller is an ace editor\n            if (\n              scrollDirection === ScrollType.horizontal &&\n              siblingScroller.session.getScrollLeft() !== newScrollValue\n            ) {\n              this._blockNextHorizontalScrollEvent.set(siblingScroller, true);\n              siblingScroller.session.setScrollLeft(newScrollValue); //not proportional\n            } else if (\n              scrollDirection === ScrollType.vertical &&\n              siblingScroller.session.getScrollTop() !== newScrollValue\n            ) {\n              this._blockNextVerticalScrollEvent.set(siblingScroller, true);\n              siblingScroller.session.setScrollTop(newScrollValue); //not proportional\n            }\n          } else {\n            //the siblingScroller is an html element\n            if (\n              scrollDirection === ScrollType.horizontal &&\n              siblingScroller.scrollLeft !== newScrollValue\n            ) {\n              this._blockNextHorizontalScrollEvent.set(siblingScroller, true);\n              siblingScroller.scrollLeft = newScrollValue;\n            } else if (\n              scrollDirection === ScrollType.vertical &&\n              siblingScroller.scrollTop !== newScrollValue\n            ) {\n              this._blockNextVerticalScrollEvent.set(siblingScroller, true);\n              siblingScroller.scrollTop = newScrollValue;\n            }\n          }\n        }\n      });\n    }\n    this._blockNextHorizontalScrollEvent.set(scrolledScroller, false);\n  }\n\n  /**\n   * DEPRICATING _handleHorizontalScrollEvent\n   * @param scroller\n   * @param groupName\n   * @param newScrollLeft\n   \n  _handleHorizontalScrollEvent(\n    scroller: HTMLElement | Ace.Editor,\n    groupName: string,\n    newScrollLeft: number\n  ) {\n    this._setScrollerLastOffsets(scroller);\n\n    //determine properties of the node being scrolled and set \"last\" scrolled numbers\n    var scrollerFractionScrolled;\n    if (\"renderer\" in scroller) {\n      //the node being scrolled is an ace editor\n      scrollerFractionScrolled =\n        newScrollLeft / this._getAceMaxScrollWidth(scroller);\n    } else {\n      //the node being scrolled is an HTMLElement\n      scrollerFractionScrolled =\n        newScrollLeft / (scroller.scrollWidth - scroller.offsetWidth);\n    }\n\n    //update other nodes in the group\n    const group = this._groupScrollpropsHM[groupName];\n    for (var i = 0; i < group.scrollers.length; i++) {\n      const targetScroller = group.scrollers[i];\n      if (targetScroller !== scroller) {\n        if (\"renderer\" in targetScroller) {\n          //its another ace editor\n          const targetMaxWidth = this._getAceMaxScrollWidth(targetScroller);\n          const proportionalScrollLeft = Math.round(\n            scrollerFractionScrolled * targetMaxWidth\n          );\n          if (\n            proportionalScrollLeft !== targetScroller.session.getScrollLeft()\n          ) {\n          //targetScroller.session.setScrollLeft(proportionalScrollLeft);\n          }\n          if (targetScroller.session.getScrollLeft() !== newScrollLeft) {\n            this._blockNextHorizontalScrollEvent.set(targetScroller, true);\n            targetScroller.session.setScrollLeft(newScrollLeft); //TODO: KEEP / REMOVE? CURRENTLY TESTING (not proportional)\n          }\n        } else {\n          //its an html element\n          const targetMaxWidth =\n            targetScroller.scrollWidth - targetScroller.offsetWidth;\n          const proportionalScrollLeft = Math.round(\n            scrollerFractionScrolled * targetMaxWidth\n          );\n          if (targetScroller.scrollLeft !== proportionalScrollLeft) {\n          //targetScroller.scrollLeft = proportionalScrollLeft;\n          }\n          if (targetScroller.scrollLeft !== newScrollLeft) {\n            this._blockNextHorizontalScrollEvent.set(targetScroller, true);\n            targetScroller.scrollLeft = newScrollLeft; //TODO: KEEP / REMOVE? CURRENTLY TESTING (not proportional)\n          }\n        }\n      }\n    }\n  }*/\n\n  /**\n   * Add or modify a group of synchronized scrollers.\n   *\n   * @param {string} groupName The name of the group to add .\n   * @param {string} scrollType The type of scolling: \"vertical\", \"horizontal\", \"both\".\n   *                            default=\"both\"\n   */\n  setScrollerGroup(groupName: string, scrollType: ScrollType) {\n    this._groupScrollpropsHM[groupName] = {\n      scrolltype: scrollType,\n      scrollers: this._groupScrollpropsHM[groupName]\n        ? this._groupScrollpropsHM[groupName].scrollers\n        : []\n    };\n  }\n\n  /**\n   * Register an element or ace editor for scroll synchronization.\n   * @param scroller\n   * @param groupName\n   * @param dontErrorOnDuplicate if true, silently returns if the scroller is already registered\n   *                             with this group, otherwise throws an error.\n   */\n  registerScroller(\n    scroller: HTMLElement | Ace.Editor,\n    groupName: string,\n    dontErrorOnDuplicate?: boolean\n  ) {\n    const group = this._groupScrollpropsHM[groupName];\n    if (!group) {\n      throw new Error(`Error: attempt to register scroll sync on unknown group \"${groupName}\"\n                    please register group first with setScrollerGroup`);\n    }\n    if (group.scrollers.includes(scroller)) {\n      if (dontErrorOnDuplicate) {\n        return;\n      }\n      throw new Error(\n        `Error: attempt to re-add scroller to group \"${groupName}\"`\n      );\n    }\n\n    group.scrollers.push(scroller);\n    this._setScrollerLastOffsets(scroller); // initialize \"last\" offsets\n\n    if (\"renderer\" in scroller) {\n      //the scroller is an ace editor\n      if (\n        group.scrolltype === ScrollType.both ||\n        group.scrolltype === ScrollType.horizontal\n      ) {\n        scroller.session.on(\"changeScrollLeft\", newScrollLeft => {\n          this._handleScrollEvent(\n            scroller,\n            groupName,\n            Math.round(scroller.session.getScrollLeft()),\n            ScrollType.horizontal\n          );\n        });\n      }\n\n      if (\n        group.scrolltype === ScrollType.both ||\n        group.scrolltype === ScrollType.vertical\n      ) {\n        scroller.session.on(\"changeScrollTop\", e => {\n          this._handleScrollEvent(\n            scroller,\n            groupName,\n            Math.round(scroller.session.getScrollTop()),\n            ScrollType.vertical\n          );\n        });\n      }\n    } else {\n      //the scroller is an html element\n      scroller.onscroll = e => {\n        //determine direction - if the last scroll left !== to the new left\n        //then it is horizontal otherwise it is vertical\n        const direction =\n          (e.target as HTMLElement).scrollLeft !==\n          this._lastScrollerOffsets.get(scroller)?.lastLeft\n            ? ScrollType.horizontal\n            : ScrollType.vertical;\n\n        if (\n          group.scrolltype === ScrollType.both ||\n          group.scrolltype === direction\n        ) {\n          this._handleScrollEvent(\n            scroller,\n            groupName,\n            (e.target as HTMLElement).scrollLeft,\n            direction\n          );\n        }\n      };\n    }\n  }\n}\n","/**\n * This file centralizes the location of javascript style definitions\n * for nucleotide and amino acid styles.\n */\nimport styles from \"./MolecularStyles.module.scss\";\n\n/**\n * Defines a single color scheme interface which consists of\n * a name, className, background alpha, and set of colors for\n * all residues (hex string format).\n *\n * @export\n * @interface IColorScheme\n */\nexport interface IColorScheme {\n  commonName: string;\n  description: string;\n  backgroundAlpha: number;\n  className: string;\n  colors: {\n    [residueCode: string]: string;\n  };\n}\n\nexport const ALL_AMINOACID_COLORSCHEMES = assembleColorSchemes(\"aa\");\nexport const ALL_NUCLEOTIDE_COLORSCHEMES = assembleColorSchemes(\"nt\");\n\n/**\n * Read in class names and colors for amino acid or nucleotide\n * color schemes from the scss file.\n *\n * @param {(\"aa\" | \"nt\")} moleculeType\n * @returns\n */\nfunction assembleColorSchemes(moleculeType: \"aa\" | \"nt\") {\n  return Object.keys(styles).reduce((acc, styleName) => {\n    if (styleName.indexOf(moleculeType + \"StyClass_\") !== -1) {\n      const colorSchemeName = styleName.split(moleculeType + \"StyClass_\")[1];\n      const colorOrder = styles[\n        moleculeType + \"StyColorOrder_\" + colorSchemeName\n      ].split(\", \");\n      const hexValues = styles[\n        moleculeType + \"StyColors_\" + colorSchemeName\n      ].split(\", \");\n      const description = styles[moleculeType + \"StyDesc_\" + colorSchemeName];\n      acc.push({\n        commonName: colorSchemeName,\n        description: description,\n        className: styles[styleName],\n        backgroundAlpha: parseFloat(\n          styles[moleculeType + \"StyBGAlpha_\" + colorSchemeName]\n        ),\n        colors: Object.fromEntries(\n          colorOrder.map((_, i) => [colorOrder[i], hexValues[i]])\n        )\n      });\n    }\n    return acc;\n  }, [] as IColorScheme[]);\n}\n\n/**\n * Top level alignment type descriptions. There are two supported\n * alignment types: AMINOACID and NUCLEOTIDE.\n *\n * @export\n * @class AlignmentTypes\n */\nexport class AlignmentTypes {\n  static readonly AMINOACID = new AlignmentTypes(\n    \"aminoacid-alignment\",\n    \"Amino Acid Sequences\",\n    styles.aaAlignTypeClass,\n    ALL_AMINOACID_COLORSCHEMES\n  );\n  static readonly NUCLEOTIDE = new AlignmentTypes(\n    \"nucleotide-alignment\",\n    \"Nucleotide Sequences\",\n    styles.ntAlignTypeClass,\n    ALL_NUCLEOTIDE_COLORSCHEMES\n  );\n\n  static list = [AlignmentTypes.AMINOACID, AlignmentTypes.NUCLEOTIDE];\n\n  static fromKey(key: string) {\n    return AlignmentTypes.list.find(at => {\n      return at.key === key;\n    });\n  }\n\n  private constructor(\n    public readonly key: string,\n    public readonly description: string,\n    public readonly className: string,\n    public readonly allColorSchemes: IColorScheme[]\n  ) {}\n}\n\n/**\n * This class represents different position styling modes.\n *\n * @export\n * @class PositionsToStyle\n */\nexport class PositionsToStyle {\n  static readonly ALL = new PositionsToStyle(\n    \"all\",\n    \"All\",\n    styles.styPosAllClass\n  );\n  static readonly QUERY = new PositionsToStyle(\n    \"query\",\n    \"Same as Query\",\n    styles.styPosQueryClass\n  );\n  static readonly QUERY_DIFF = new PositionsToStyle(\n    \"query-diff\",\n    \"Different from Query\",\n    styles.styPosQueryDiffClass\n  );\n  static readonly CONSENSUS = new PositionsToStyle(\n    \"consensus\",\n    \"Same as Consensus\",\n    styles.styPosConsensusClass\n  );\n  static readonly CONSENSUS_DIFF = new PositionsToStyle(\n    \"consensus-diff\",\n    \"Different from Consensus\",\n    styles.styPosConsensusDiffClass\n  );\n\n  static list = [\n    PositionsToStyle.ALL,\n    PositionsToStyle.QUERY,\n    PositionsToStyle.QUERY_DIFF,\n    PositionsToStyle.CONSENSUS,\n    PositionsToStyle.CONSENSUS_DIFF\n  ];\n\n  static fromKey(key: string) {\n    return PositionsToStyle.list.find(at => {\n      return at.key === key;\n    });\n  }\n\n  // private to disallow creating other instances of this type\n  private constructor(\n    public readonly key: string,\n    public readonly description: string,\n    public readonly className: string\n  ) {}\n}\n\nexport class ResidueDetailTypes {\n  static readonly BOTH = new ResidueDetailTypes(\n    \"both\",\n    \"Style Background and Letters\",\n    \"\"\n  );\n  static readonly LETTER_ONLY = new ResidueDetailTypes(\n    \"letter-only\",\n    \"Only Style Letters\",\n    styles.transparentBackgroundClass\n  );\n  static readonly BACKGROUND_ONLY = new ResidueDetailTypes(\n    \"background-only\",\n    \"Only Style Background\",\n    styles.transparentLetterClass\n  );\n\n  static list = [\n    ResidueDetailTypes.BOTH,\n    ResidueDetailTypes.LETTER_ONLY,\n    ResidueDetailTypes.BACKGROUND_ONLY\n  ];\n\n  static fromKey(key: string) {\n    return ResidueDetailTypes.list.find(at => {\n      return at.key === key;\n    });\n  }\n\n  private constructor(\n    public readonly key: string,\n    public readonly description: string,\n    public readonly className: string\n  ) {}\n}\n\n/**\n * Object to describe the style of a set of sequences (MSA, logo, etc).\n * Contains 2 key parameters:\n *     \"alignmentType\": should be set by implementing classes\n *     \"colorScheme\": describes the color scheme to apply to the alignment.\n *                    defaults to the first available from the scss file\n *     \"positionsToStyle\": description of which positions should be styled.\n *                         defaults to all positions.\n *\n * @interface AlignmentStyle\n */\nexport abstract class AlignmentStyle {\n  abstract readonly alignmentType: AlignmentTypes;\n  abstract colorScheme: IColorScheme;\n  abstract positionsToStyle: PositionsToStyle;\n  abstract residueDetail: ResidueDetailTypes;\n\n  static fromAlignmentType(alignmentType: AlignmentTypes) {\n    if (alignmentType === AlignmentTypes.AMINOACID)\n      return new AminoAcidAlignmentStyle();\n    return new NucleotideAlignmentStyle();\n  }\n}\n\n/**\n * Object to describe an amino acid alignment style\n * @class AminoAcidAlignmentStyle\n * @implements {AlignmentStyle}\n */\nexport class AminoAcidAlignmentStyle implements AlignmentStyle {\n  readonly allColorSchemes = ALL_AMINOACID_COLORSCHEMES;\n  readonly alignmentType = AlignmentTypes.AMINOACID;\n\n  constructor(\n    public colorScheme: IColorScheme = ALL_AMINOACID_COLORSCHEMES[0],\n    public positionsToStyle: PositionsToStyle = PositionsToStyle.ALL,\n    public residueDetail: ResidueDetailTypes = ResidueDetailTypes.BOTH\n  ) {}\n}\n\n/**\n * Object to describe an nucleotide alignment style\n *\n * @export\n * @class NucleotideAlignmentStyle\n * @implements {AlignmentStyle}\n */\nexport class NucleotideAlignmentStyle implements AlignmentStyle {\n  readonly allColorSchemes = ALL_NUCLEOTIDE_COLORSCHEMES;\n  readonly alignmentType = AlignmentTypes.NUCLEOTIDE;\n\n  constructor(\n    public colorScheme: IColorScheme = ALL_NUCLEOTIDE_COLORSCHEMES[0],\n    public positionsToStyle: PositionsToStyle = PositionsToStyle.ALL,\n    public residueDetail: ResidueDetailTypes = ResidueDetailTypes.BOTH\n  ) {}\n}\n\n/**\n * Export globals\n */\nconst transparentLetterClass = styles.transparentLetterClass;\nconst transparentBackgroundClass = styles.transparentBackgroundClass;\nexport { transparentBackgroundClass, transparentLetterClass };\n\n/**\n * Export ace helper parameters and functions.\n */\nconst acePrefix = styles.acePrefix;\nexport { acePrefix };\n\nexport function getClassNamesForAce(\n  letter: string,\n  isConsensus: boolean,\n  isQuery: boolean\n) {\n  const consensus = isConsensus ? \".\" + styles.preAceConsensusClass : \"\";\n  const query = isQuery ? \".\" + styles.preAceQueryClass : \"\";\n\n  return letter + consensus + query;\n}\n","import React from \"react\";\nimport ace from \"ace-builds\";\nimport Alignment, { SequenceSortOptions } from \"./Alignment\";\nimport { Ace } from \"ace-builds\";\nimport { defineNewAlignmentMode } from \"./AceAlignmentMode\";\n\nexport enum AceEditorTypes {\n  query,\n  consensus,\n  alignment,\n  alignment_metadata,\n  position\n}\n\nexport interface IAceMSAComponentProps {\n  editorLoaded(editor: Ace.Editor): void;\n  characterSizeChanged?(newCharacterWidth: number): void;\n\n  alignment: Alignment;\n  sortBy: SequenceSortOptions;\n  fontSize: number;\n\n  topLevelClassNames?: string;\n\n  readonly id: string;\n  readonly type: AceEditorTypes;\n}\nexport interface IAceMSAComponentState {\n  mouseRow?: number;\n  mouseColumn?: number;\n  mousePageX?: number;\n  mousePageY?: number;\n  mouseContainerX?: number;\n  mouseContainerY?: number;\n  characterWidth?: number;\n  zoomLevel: number;\n}\n\nexport class AceMSAComponent extends React.Component<\n  IAceMSAComponentProps,\n  IAceMSAComponentState\n> {\n  private editor?: Ace.Editor;\n\n  componentDidUpdate(prevProps: IAceMSAComponentProps) {\n    if (this.props.fontSize + \"px\" !== this.editor?.getFontSize()) {\n      this.editor?.setFontSize(this.props.fontSize + \"px\");\n      if (\n        this.props.characterSizeChanged &&\n        this.editor?.renderer.characterWidth\n      ) {\n        this.props.characterSizeChanged(this.editor?.renderer.characterWidth);\n      }\n    }\n\n    if (\n      this.props.alignment !== prevProps.alignment ||\n      (this.props.sortBy !== prevProps.sortBy &&\n        this.props.type === AceEditorTypes.alignment)\n    ) {\n      this.editor!.selectAll();\n      this.editor!.removeLines();\n      this.insertDataIntoEditor();\n    }\n  }\n\n  /**\n   * Generate a string axis (positional information) with one character per position\n   * through the maxLength. Taken from alignmentviewer 1.0:\n   *     https://github.com/sanderlab/alignmentviewer\n   * May want to implement this better in the future (SVG + sliding tooltip for cursor?)\n   * @param maxLength\n   */\n  static generateTextualRuler(maxLength: number): string {\n    let s = \"\"; // should be a better way to do this to be honest\n    for (let i = 1; i <= maxLength + 1; i++) {\n      const Q = i % 10 === 0;\n      const Q5 = !Q && i % 5 === 0;\n      s += Q ? \"|\" : Q5 ? \":\" : \".\";\n      if (!Q) {\n        continue;\n      }\n      const sn = \"\" + i;\n      const np = s.length - sn.length - 1; // where num starts\n      if (np < 0) {\n        continue;\n      }\n      s = s.substr(0, np) + sn + \"|\";\n    }\n    return s; // this.hruler = s.replace(/ /g, '.');\n  }\n\n  //\n  //setup ace editors\n  //\n  setupAndInsertAceEditor(el: HTMLElement) {\n    this.editor = ace.edit(el);\n    this.editor.setShowPrintMargin(false);\n    this.editor.setReadOnly(true);\n    this.editor.setHighlightActiveLine(false);\n    this.editor.setHighlightGutterLine(false);\n    this.editor.setFontSize(this.props.fontSize + \"px\");\n    this.editor.renderer.setShowGutter(false);\n    this.editor.renderer.setPadding(0);\n    this.editor.renderer.$cursorLayer.element.style.display = \"none\";\n\n    //\n    // column highlighter\n    //\n    this.editor.on(\"mousemove\", e => {\n      if (!this.editor) {\n        return;\n      }\n      var pos = e.getDocumentPosition();\n      var extraPadding = 6;\n      var screenCoordinates = this.editor.renderer.textToScreenCoordinates(\n        pos.row,\n        pos.column\n      );\n      var characterWidth = this.editor.renderer.characterWidth;\n      const columnMouseover = document.getElementById(\"column_mouseover\");\n      if (columnMouseover) {\n        columnMouseover.style.left =\n          screenCoordinates.pageX - extraPadding / 2 - 2 + \"px\";\n        columnMouseover.style.width = characterWidth + extraPadding + \"px\";\n        columnMouseover.style.display = \"block\";\n      }\n\n      this.setState({\n        mouseRow: pos.row,\n        mouseColumn: pos.column,\n        mousePageX: screenCoordinates.pageX,\n        mousePageY: screenCoordinates.pageY,\n        mouseContainerX:\n          characterWidth * pos.column - this.editor.session.getScrollLeft(),\n        characterWidth: characterWidth\n        //mouseContainerY: characterWidth * pos.row ???\n      });\n    });\n\n    return this.editor;\n  }\n\n  insertDataIntoEditor() {\n    if (this.editor) {\n      if (\n        [\n          AceEditorTypes.query,\n          AceEditorTypes.alignment,\n          AceEditorTypes.consensus\n        ].includes(this.props.type)\n      ) {\n        const modeName = \"ace/mode/\" + this.props.alignment.getName();\n        defineNewAlignmentMode(modeName, this.props.alignment);\n        this.editor.session.setMode(modeName);\n      }\n\n      if (this.props.type === AceEditorTypes.query) {\n        this.editor.insert(this.props.alignment.getTargetSequence().sequence);\n      } else if (this.props.type === AceEditorTypes.consensus) {\n        this.editor.insert(\n          this.props.alignment\n            .getConsensus()\n            .map(letter => {\n              return letter.letter;\n            })\n            .join(\"\")\n        );\n      } else if (this.props.type === AceEditorTypes.alignment) {\n        this.editor.insert(\n          this.props.alignment\n            .getSequences(this.props.sortBy)\n            .map(x => x.sequence)\n            .join(\"\\n\")\n        );\n      } else if (this.props.type === AceEditorTypes.alignment_metadata) {\n        this.editor.insert(\n          this.props.alignment\n            .getSequences(this.props.sortBy)\n            .map(x => x.id)\n            .join(\"\\n\")\n        );\n      } else if (this.props.type === AceEditorTypes.position) {\n        const maxSequenceLength = this.props.alignment.getMaxSequenceLength();\n        this.editor.insert(\n          AceMSAComponent.generateTextualRuler(maxSequenceLength)\n        );\n      } else {\n        this.editor.insert(\"invalid type passed to AceEditorComponent\");\n      }\n    }\n  }\n\n  divLoaded(e: HTMLDivElement | null) {\n    if (e && !this.editor) {\n      //only run if editor not loaded\n      this.setupAndInsertAceEditor(e);\n      this.insertDataIntoEditor();\n\n      //e.classList.add(\"loaded\");\n      this.props.editorLoaded(this.editor!); //inform parent of loading.\n    }\n  }\n\n  mouseExited() {\n    const columnMouseover = document.getElementById(\"column_mouseover\");\n    if (columnMouseover) {\n      columnMouseover.style.display = \"none\";\n    }\n    this.setState({\n      mouseContainerX: undefined\n    });\n  }\n\n  changeZoom(zoomLevel: number) {}\n\n  render() {\n    let xOffsetIndicator;\n    if (this.state && typeof this.state.mouseContainerX === \"number\") {\n      /*xOffsetIndicator = (\n        <div\n          style={{\n            position: \"absolute\",\n            left:\n              this.state.mouseContainerX +\n              (this.state.characterWidth as number) / 2 -\n              20,\n            width: 40,\n            bottom: -30,\n            zIndex: 1100\n          }}\n        >\n          <div\n            style={{\n              textAlign: \"center\",\n              padding: 2,\n              fontWeight: \"bold\",\n              background: \"white\",\n              border: \"solid 1px black\"\n            }}\n          >\n            {(this.state.mouseColumn as number) + 1}\n          </div>\n        </div>\n      );*/\n    }\n\n    return (\n      <div\n        className={this.props.topLevelClassNames}\n        onMouseLeave={() => this.mouseExited()}\n      >\n        <div id={this.props.id} ref={e => this.divLoaded(e)}></div>\n        {xOffsetIndicator}\n      </div>\n    );\n  }\n}\n","/**\n * AceAlignmentMode.js\n * This file defines an alignment highlight mode form ace editor documents.\n */\n\nimport { default as ace } from \"ace-builds\";\nimport Alignment from \"./Alignment\";\nimport { getClassNamesForAce } from \"./MolecularStyles\";\n\ninterface IAceType {\n  [key: string]: any;\n}\n\nexport function defineNewAlignmentMode(mode: string, alignment: Alignment) {\n  const modeSplit = mode.split(\"/\");\n  if (\n    modeSplit.length !== 3 ||\n    modeSplit[0] !== \"ace\" ||\n    modeSplit[1] !== \"mode\"\n  ) {\n    throw Error(\"ace mode name must be of the form '/ace/mode/MODENAME'\");\n  }\n  const modeName = mode.split(\"/\")[2];\n\n  (ace as IAceType).define(\n    \"ace/mode/\" + modeName + \"_highlight_rules\",\n    function(require: Function, exports: any, module: any) {\n      var oop = require(\"../lib/oop\");\n      var TextHighlightRules = require(\"./text_highlight_rules\")\n        .TextHighlightRules;\n\n      /**\n       * Rules parse individual characters in the editor and assign classes\n       * to each character. Note that characters may be grouped together\n       * if they match the same rule and are side by side.\n       */\n      var AlignmentHighlightRules = function(this: any) {\n        //We define an alignment-specific set of rules that will\n        //add other tags such as whether a character matches the\n        //consensus sequence.\n        let rules: {\n          [key: string]: {\n            token: (letter: string) => void;\n            regex: string;\n            next: string;\n          }[];\n        } = {};\n\n        for (let i = 0; i < alignment.getMaxSequenceLength(); i++) {\n          const stateName = i === 0 ? \"start\" : \"pos\" + i;\n          const nextStateName =\n            i === alignment.getMaxSequenceLength() - 1\n              ? \"start\"\n              : \"pos\" + (i + 1);\n\n          rules[stateName] = [\n            {\n              token: function(letter: string) {\n                return getClassNamesForAce(\n                  letter,\n                  letter === alignment.getConsensus()[i].letter,\n                  letter === alignment.getTargetSequence().sequence[i]\n                );\n              },\n              regex: \".\",\n              next: nextStateName\n            }\n          ];\n        }\n        this.$rules = rules;\n      };\n\n      oop.inherits(AlignmentHighlightRules, TextHighlightRules);\n\n      exports.AlignmentHighlightRules = AlignmentHighlightRules;\n    }\n  );\n\n  (ace as IAceType).define(\"ace/mode/\" + modeName, function(\n    require: Function,\n    exports: any,\n    module: any\n  ) {\n    var oop = require(\"../lib/oop\");\n    var TextMode = require(\"../mode/text\").Mode;\n    var Tokenizer = require(\"../tokenizer\").Tokenizer;\n    var AlignmentHighlightRules = require(\"ace/mode/\" +\n      modeName +\n      \"_highlight_rules\").AlignmentHighlightRules;\n\n    const Mode = function(this: any) {\n      this.$tokenizer = new Tokenizer(new AlignmentHighlightRules().getRules());\n    };\n\n    oop.inherits(Mode, TextMode);\n\n    (function() {\n      // Extra logic goes here. (see below)\n    }.call(Mode.prototype));\n\n    exports.Mode = Mode;\n  });\n}\n","/**\n *\n * Sequence logo component.\n * Inspired / derived from https://github.com/weng-lab/logojs-package\n *  (but much simpler)\n */\n\nimport React from \"react\";\nimport Alignment from \"./Alignment\";\nimport { GlyphFactory } from \"./SequenceLogoGlyphs\";\nimport { acePrefix } from \"./MolecularStyles\";\n\nexport enum LOGO_TYPES {\n  LETTERS = \"letter stack\",\n  BARS = \"bar plot\"\n}\n\ninterface IGlyphFrequency {\n  frequency: number;\n  letter: {\n    letter: string;\n    classNames: string;\n  };\n}\ninterface IGlyphStack extends Array<IGlyphFrequency> {}\n\nexport interface ISequenceLogoComponentProps {\n  alignment: Alignment;\n  glyphWidth: number;\n  logoType: LOGO_TYPES;\n\n  logoLoaded?(node: HTMLDivElement): void;\n\n  readonly id: string;\n}\n\nexport class SequenceLogoComponent extends React.Component<\n  ISequenceLogoComponentProps\n> {\n  private scrollerDiv?: HTMLDivElement | null;\n  private loaded: boolean = false;\n\n  divLoaded(e: HTMLDivElement | null) {\n    if (e && !this.scrollerDiv) {\n      //only run if first time element available\n      this.scrollerDiv = e;\n      if (this.props.logoLoaded) {\n        this.props.logoLoaded(this.scrollerDiv);\n      }\n    }\n  }\n\n  shouldComponentUpdate(nextProps: ISequenceLogoComponentProps) {\n    if (\n      this.loaded === false ||\n      this.props.logoType !== nextProps.logoType ||\n      this.props.glyphWidth !== nextProps.glyphWidth ||\n      this.props.alignment !== nextProps.alignment\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    if (!this.props.alignment || !this.props.glyphWidth) {\n      return null;\n    }\n\n    const positionalLetterCounts = this.props.alignment.getPositionalLetterCounts();\n    const lettersSorted = this.props.alignment.getSortedAlphaLetters();\n\n    //calculate the frequencies of all letters in each column\n    const frequencies: number[][] = [];\n    positionalLetterCounts.forEach((letterCounts, position) => {\n      const totalCountAtPosition = Object.keys(letterCounts).reduce(\n        (total, letter) => {\n          total += letterCounts[letter];\n          return total;\n        },\n        0\n      );\n\n      const frequenciesAtPosition: number[] = lettersSorted.map(letter => {\n        let freq = 0;\n        if (letter in letterCounts) {\n          freq = letterCounts[letter] / totalCountAtPosition;\n        }\n        return freq;\n      });\n\n      frequencies.push(frequenciesAtPosition);\n    });\n\n    //load alphabet information\n    const sortedAlphabet = lettersSorted.map(letter => {\n      return {\n        letter: letter,\n        classNames: acePrefix + letter\n      };\n    });\n\n    //munge in alphabet and sort by frequency\n    const logoData = frequencies.map((frequenciesAtPosition, positionIdx) => {\n      return frequenciesAtPosition\n        .map((frequency, letterIdx) => {\n          return {\n            frequency: frequency,\n            letter: sortedAlphabet[letterIdx]\n          };\n        })\n        .filter(freq => {\n          return freq.frequency !== 0;\n        })\n        .sort((a, b) => (a.frequency > b.frequency ? 1 : -1));\n    });\n\n    const totalWidth = frequencies.length * this.props.glyphWidth;\n    const totalHeight = 100;\n    this.loaded = true;\n\n    /**\n     * Generate the svg elements for a single position, i.e., column\n     *\n     */\n    const generateStack = (positionalFrequencies: IGlyphStack) => {\n      let dy = 100;\n\n      const xscale = 2 / logoData.length; // not exact, but works.\n      return positionalFrequencies.map((freq, idx) => {\n        dy = dy - freq.frequency * 100;\n\n        if (this.props.logoType === LOGO_TYPES.BARS) {\n          return (\n            <rect\n              width=\"100\"\n              height=\"100\"\n              transform={`translate(0, ${dy}) scale(${xscale},${freq.frequency})`}\n              className={freq.letter.classNames}\n              key={`idxrect_${idx}`}\n            ></rect>\n          );\n        }\n\n        const selectedGlyph = GlyphFactory.glyphFromChar(freq.letter.letter)({\n          className: freq.letter.classNames,\n          transform: `translate(0, ${dy}) scale(${xscale},${freq.frequency})`,\n          key: `idxglyph_${idx}`\n        });\n        return selectedGlyph;\n      });\n    };\n\n    return (\n      <div id={this.props.id} ref={e => this.divLoaded(e)}>\n        <svg\n          preserveAspectRatio=\"none\"\n          viewBox={`0 0 ${logoData.length} 100`}\n          style={{ width: totalWidth, height: totalHeight }}\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {logoData.map((singlePositionData, positionIdx) => {\n            return (\n              <g\n                transform={`translate(${positionIdx},0)`}\n                key={\"p_\" + positionIdx}\n              >\n                {generateStack(singlePositionData)}\n              </g>\n            );\n          })}\n        </svg>\n      </div>\n    );\n  }\n}\n","/**\n *\n * Glyph definitions for the logo component.\n * Inspired / derived from https://github.com/weng-lab/logojs-package\n *\n */\n\nimport React from \"react\";\n\nexport class GlyphFactory {\n  private static singleton: undefined | GlyphFactory;\n\n  private letterToGlyphHM: {\n    [key: string]: (props: { [key: string]: string }) => JSX.Element;\n  } = {\n    A: GlyphFactory.A,\n    B: GlyphFactory.B,\n    C: GlyphFactory.C,\n    D: GlyphFactory.D,\n    E: GlyphFactory.E,\n    F: GlyphFactory.F,\n    G: GlyphFactory.G,\n    H: GlyphFactory.H,\n    I: GlyphFactory.I,\n    J: GlyphFactory.J,\n    K: GlyphFactory.K,\n    L: GlyphFactory.L,\n    M: GlyphFactory.M,\n    N: GlyphFactory.N,\n    O: GlyphFactory.O,\n    P: GlyphFactory.P,\n    Q: GlyphFactory.Q,\n    R: GlyphFactory.R,\n    S: GlyphFactory.S,\n    T: GlyphFactory.T,\n    U: GlyphFactory.U,\n    V: GlyphFactory.V,\n    W: GlyphFactory.W,\n    X: GlyphFactory.X,\n    Y: GlyphFactory.Y,\n    Z: GlyphFactory.Z\n  };\n\n  static glyphFromChar(letter: string) {\n    if (!GlyphFactory.singleton) {\n      GlyphFactory.singleton = new GlyphFactory();\n    }\n    return GlyphFactory.singleton.letterToGlyphHM[letter];\n  }\n\n  private static A = (props: { [key: string]: string }) => (\n    <g key={props.key + \"_g\"}>\n      <path\n        {...props}\n        d=\"M 0 100 L 33 0 L 66 0 L 100 100 L 75 100 L 66 75 L 33 75 L 25 100 L 0 100\"\n      />\n      <path\n        key={props.key + \"_p2\"}\n        transform={props.transform}\n        fill=\"#ffffff\"\n        d=\"M 41 55 L 50 25 L 58 55 L 41 55\"\n      />\n    </g>\n  );\n\n  private static B = (props: { [key: string]: string }) => (\n    <g key={props.key + \"_g\"}>\n      <path\n        {...props}\n        d=\"M 0 0 L 80 0 C 105 0 105 50 80 50 C 105 50 105 100 80 100 L 00 100 L 0 0\"\n      />\n      <path\n        key={props.key + \"_p2\"}\n        transform={props.transform}\n        d=\"M 20 15 L 70 15 C 80 15 80 35 70 35 L 20 35 L 20 15\"\n        fill=\"#ffffff\"\n      />\n      <path\n        key={props.key + \"_p3\"}\n        transform={props.transform}\n        d=\"M 20 65 L 70 65 C 80 65 80 85 70 85 L 20 85 L 20 65\"\n        fill=\"#ffffff\"\n      />\n    </g>\n  );\n\n  private static C = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 100 28 C 100 -13 0 -13 0 50\n      C 0 113 100 113 100 72 L 75 72\n      C 75 90 30 90 30 50 C 30 10 75 10 75 28\n      L 100 28\"\n    />\n  );\n\n  private static D = (props: { [key: string]: string }) => (\n    <g key={props.key + \"_g\"}>\n      <path {...props} d=\"M 0 0 L 60 0 C 110 0 110 100 60 100 L 0 100 L 0 0\" />\n      <path\n        key={props.key + \"_p2\"}\n        transform={props.transform}\n        fill=\"#ffffff\"\n        d=\"M 20 15 L 40 15 C 85 15 85 85 40 85 L 20 85 L 20 15\"\n      />\n    </g>\n  );\n\n  private static E = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 100 0 L 100 20 L 20 20 L 20 40 L 90 40 L 90 60 L 20 60 L 20 80 L 100 80 L 100 100 L 0 100 L 0 0\"\n    />\n  );\n\n  private static F = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 100 0 L 100 20 L 20 20 L 20 40 L 80 40 L 80 60 L 20 60 L 20 100 L 0 100 L 0 0\"\n    />\n  );\n\n  private static G = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 100 28 C 100 -13 0 -13 0 50 C 0 113 100 113 100 72 L 100 48 L 55 48 L 55 72 L 75 72 C 75 90 30 90 30 50 C 30 10 75 5 75 28 L 100 28\"\n    />\n  );\n\n  private static H = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 20 0 L 20 40 L 80 40 L 80 0 L 100 0 L 100 100 L 80 100 L 80 60 L 20 60 L 20 100 L 0 100 L 0 0\"\n    />\n  );\n\n  private static I = (props: { [key: string]: string }) => (\n    <path {...props} d=\"M 40 0 L 60 0 L 60 100 L 40 100 L 40 0\" />\n  );\n\n  private static J = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 60 C 0 111 100 111 100 60 L 100 0 L 75 0 L 75 60 C 80 90 20 90 25 60\"\n    />\n  );\n\n  private static K = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 20 0 L 20 40 L 75 0 L 100 0 L 50 50 L 100 100 L 75 100 L 30 65 L 20 75 L 20 100 L 0 100 L 0 0\"\n    />\n  );\n\n  private static L = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 0 100 L 100 100 L 100 80 L 20 80 L 20 0 L 0 0\"\n    />\n  );\n\n  private static M = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 20 0 L 50 35 L 80 0 L 100 0 L 100 100 L 80 100 L 80 30 L 50 65 L 20 30 L 20 100 L 0 100 L 0 0\"\n    />\n  );\n\n  private static N = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 100 L 0 0 L 20 0 L 80 75 L 80 0 L 100 0 L 100 100 L 80 100 L 20 25 L 20 100 L 0 100\"\n    />\n  );\n\n  private static O = (props: { [key: string]: string }) => (\n    <g key={props.key + \"_g\"}>\n      <circle cx=\"50\" cy=\"50\" r=\"50\" {...props} />\n      <circle\n        key={props.key + \"_c2\"}\n        transform={props.transform}\n        cx=\"50\"\n        cy=\"50\"\n        r=\"32\"\n        fill=\"#ffffff\"\n      />\n    </g>\n  );\n\n  private static P = (props: { [key: string]: string }) => (\n    <g key={props.key + \"_g\"}>\n      <path\n        {...props}\n        d=\"M 0 0 L 80 0 C 105 0 105 50 80 50 L 20 50 L 20 100 L 0 100 L 0 0\"\n      />\n      <path\n        key={props.key + \"_p2\"}\n        transform={props.transform}\n        fill=\"#ffffff\"\n        d=\"M 20 15 L 70 15 C 80 15 80 35 70 35 L 20 35 L 20 15\"\n      />\n    </g>\n  );\n\n  private static Q = (props: { [key: string]: string }) => (\n    <g key={props.key + \"_g\"}>\n      <circle\n        cx=\"50\"\n        cy=\"50\"\n        r=\"50\"\n        {...{ ...props, key: props.key + \"_c1\" }}\n      />\n      <circle\n        key={props.key + \"_c2\"}\n        transform={props.transform}\n        cx=\"50\"\n        cy=\"50\"\n        r=\"32\"\n        fill=\"#ffffff\"\n      />\n      <path d=\"M 85 100 L 55 70 L 70 55 L 100 85 L 85 100\" {...props} />\n    </g>\n  );\n\n  private static R = (props: { [key: string]: string }) => (\n    <g key={props.key + \"_g\"}>\n      <path\n        {...props}\n        d=\"M 0 0 L 80 0 C 105 0 105 50 80 50 C 100 50 100 70 100 70 L 100 100 L 80 100 L 80 80 C 80 80 80 60 50 60 L 20 60 L 20 100 L 0 100 L 0 0\"\n      />\n      <path\n        key={props.key + \"_p2\"}\n        transform={props.transform}\n        fill=\"#ffffff\"\n        d=\"M 20 15 L 70 15 C 80 15 80 35 70 35 L 20 35 L 20 15\"\n      />\n    </g>\n  );\n\n  /**\n   *NOTE: Requires \"stroke\" and \"strokeOpacity\" instead of just the fill prop.\n   */\n  private static S = (props: { [key: string]: string }) => {\n    if (!props.stroke) {\n      props.stroke = props.fill;\n    }\n    if (!props.strokeOpacity) {\n      props.strokeOpacity = props.fillOpacity;\n    }\n\n    return (\n      <path\n        fill=\"#ffffff\"\n        {...props}\n        strokeWidth=\"18\"\n        d=\"M92 26 A43 20 0 1 0 43 46 A42 23 0 1 1 9 68\"\n      />\n    );\n  };\n\n  private static T = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 0 20 L 35 20 L 35 100 L 65 100 L 65 20 L 100 20 L 100 0 L 0 0\"\n    />\n  );\n\n  private static U = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 0 60 C 0 111 100 111 100 60 L 100 0 L 75 0 L 75 60 C 80 90 20 90 25 60 L 25 0 L 0 0\"\n    />\n  );\n\n  private static V = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 20 0 L 50 80 L 80 0 L 100 0 L 60 100 L 40 100 L 0 0\"\n    />\n  );\n\n  private static W = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 20 0 L 30 70 L 50 30 L 70 70 L 80 0 L 100 0 L 90 100 L 70 100 L 50 65 L 30 100 L 10 100 L 0 0\"\n    />\n  );\n\n  private static X = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 20 0 L 50 40 L 80 0 L 100 0 L 70 50 L 100 100 L 80 100 L 50 60 L 20 100 L 0 100 L 30 50 L 0 0\"\n    />\n  );\n\n  private static Y = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 20 0 L 50 45 L 80 0 L 100 0 L 60 60 L 60 100 L 40 100 L 40 60 L 0 0\"\n    />\n  );\n\n  private static Z = (props: { [key: string]: string }) => (\n    <path\n      {...props}\n      d=\"M 0 0 L 100 0 L 100 20 L 35 80 L 100 80 L 100 100 L 0 100 L 0 80 L 65 20 L 0 20 L 0 0\"\n    />\n  );\n}\n","import React from \"react\";\nimport Alignment from \"./Alignment\";\n\nexport interface ISequenceConservationComponentProps {\n  alignment: Alignment;\n  characterWidth: number;\n\n  conservationPlotLoaded?(node: HTMLDivElement): void;\n\n  readonly id: string;\n}\n\ninterface ISequenceConservationComponentState {\n  isHovered: boolean;\n}\n\nexport class SequenceConservationComponent extends React.Component<\n  ISequenceConservationComponentProps,\n  ISequenceConservationComponentState\n> {\n  private scrollerDiv?: HTMLDivElement | null;\n\n  constructor(props: ISequenceConservationComponentProps) {\n    super(props);\n    this.state = {\n      isHovered: false\n    };\n    this.handleSvgHover = this.handleSvgHover.bind(this);\n  }\n\n  handleSvgHover(isHovered: boolean) {\n    this.setState({\n      isHovered: isHovered\n    });\n  }\n\n  /**\n   * Compute the Kullback-Leibler (KL) entropy for individual columns in the alignment\n   *        S = sum(pk * log(pk / qk)\n   * also see scipy docs:\n   *     https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.entropy.html\n   *\n   * @param pk Column data: an object whose keys are all letters in the column and\n   *           values are normalized (sum to 1) frequency of occurrence.\n   *           From scipy docs: \"the (discrete) distribution. pk[i] is the\n   *                              ... probability of event i\"\n   * @param qk an object whose keys are all letters in the alignment and values are\n   *           normalized (sum to 1) frequency of occurrence.\n   *           From scipy docs: \"Sequence against which the relative entropy is\n   *                              computed. Should be in the same format as pk.\"\n   */\n  computeEntropy(\n    allLetters: string[],\n    pk: { [letter: string]: number },\n    qk: { [letter: string]: number },\n    doLog?: boolean\n  ) {\n    return allLetters.reduce((acc, letter) => {\n      if (letter in pk) {\n        acc += pk[letter] * Math.log(pk[letter] / qk[letter]);\n      }\n      return acc;\n    }, 0);\n  }\n\n  /**\n   *\n   * @param maxSeqLength\n   */\n  createConservationCountGs() {\n    const toReturn: JSX.Element[] = [];\n    const allLetters = this.props.alignment.getSortedAlphaLetters();\n    const positionalLetterCounts = this.props.alignment.getPositionalLetterCounts(\n      true,\n      allLetters\n    );\n    const backgroundLetterCounts = this.props.alignment.getGlobalAlphaLetterCounts(\n      true,\n      allLetters\n    );\n\n    //const maximumEntropy = this.computeEntropy(allLetters, backgroundLetterCounts, backgroundLetterCounts);\n    const entropies = Array.from(positionalLetterCounts).map(\n      ([position, letterCounts]) => {\n        return this.computeEntropy(\n          allLetters,\n          letterCounts,\n          backgroundLetterCounts\n        );\n      }\n    );\n\n    //normalize between 0 and 1\n    const maxEmpiricalEntropy = Math.max(...entropies);\n    const normalizedEntropies = entropies.map(entropy => {\n      return (entropy / maxEmpiricalEntropy) * 100;\n    });\n    //console.log('entropies', entropies);\n    //console.log('normalizedEntropies', normalizedEntropies);\n\n    normalizedEntropies.forEach((normalizedEntropy, idx) => {\n      toReturn.push(\n        <g transform={`translate(${idx},${100 - normalizedEntropy})`} key={idx}>\n          <rect width={0.5} height={`${normalizedEntropy}`}></rect>\n        </g>\n      );\n    });\n    return toReturn;\n  }\n\n  /**\n   * Generate a chart to depict the number of gaps in each column. The bar\n   * chart is normalized to a maximum height of 100 (if the number of gaps in\n   * a particular column was equal to the number of sequences in that column)\n   * @param maxSeqLength The total number of possible sequences in the column.\n   *                     Used to normalize the output to a maximum height of 100.\n   */\n  createGapCountGs(maxSeqLength: number) {\n    const toReturn: JSX.Element[] = [];\n    const numSequences = this.props.alignment.getSequences().length;\n    const gapCounts = this.props.alignment.getGapsPerColumn();\n\n    for (let i = 0; i < maxSeqLength; i++) {\n      const gapPercentage = (gapCounts[i] / numSequences) * 100;\n      toReturn.push(\n        <g transform={`translate(${i + 0.5},${100 - gapPercentage})`} key={i}>\n          <rect width={0.5} height={gapPercentage}></rect>\n        </g>\n      );\n    }\n    return toReturn;\n  }\n\n  divLoaded(e: HTMLDivElement | null) {\n    if (e && !this.scrollerDiv) {\n      //only run if first time element available\n      this.scrollerDiv = e;\n      if (this.props.conservationPlotLoaded) {\n        this.props.conservationPlotLoaded(this.scrollerDiv);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    //TODO: notify parent of unloading and release dom\n  }\n\n  render() {\n    if (!this.props.alignment || !this.props.characterWidth) {\n      return null;\n    }\n\n    const maxSeqLength = this.props.alignment.getMaxSequenceLength();\n    const totalWidth = this.props.characterWidth * maxSeqLength;\n    const hoveredClass = this.state.isHovered\n      ? \"conservation hovered\"\n      : \"conservation\";\n\n    return (\n      <div>\n        <div\n          style={{\n            backgroundColor: \"rgba(255,255,255,0.9)\",\n            border: \"solid 1px black\",\n            position: \"absolute\",\n            padding: \"3px\",\n            top: 0,\n            right: 0,\n            color: \"red\",\n            visibility: this.state.isHovered ? \"visible\" : \"hidden\",\n            zIndex: 1000\n          }}\n        >\n          <span style={{ color: \"#000000\" }}>Entropy</span>\n          <span style={{ color: \"#b7b7b7\", paddingLeft: 10 }}>&#35; Gaps</span>\n        </div>\n\n        <div id={this.props.id} ref={e => this.divLoaded(e)}>\n          <div className=\"svg_container\">\n            <svg\n              preserveAspectRatio=\"none\"\n              viewBox={`0 0 ${maxSeqLength} 100`}\n              style={{ width: totalWidth, height: 100 }}\n              className={hoveredClass}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              onMouseEnter={() => this.handleSvgHover(true)}\n              onMouseLeave={() => this.handleSvgHover(false)}\n            >\n              <g className=\"gapCount\">{this.createGapCountGs(maxSeqLength)}</g>\n              <g className=\"entropy\">{this.createConservationCountGs()}</g>\n            </svg>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/**\n * Convert a hex string into RGB\n * taken from https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n * @param hex\n * @returns an RGB object that contains the keys red, green, and blue and values\n *          corresponding to the hex parameter.\n */\nexport function hexToRgb(\n  hex: string\n): { red: number; green: number; blue: number } {\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function(m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  if (result) {\n    return {\n      red: parseInt(result[1], 16),\n      green: parseInt(result[2], 16),\n      blue: parseInt(result[3], 16)\n    };\n  }\n  throw new Error(\"Bad Hex\");\n}\n","import { GlyphFactory } from \"./SequenceLogoGlyphs\";\nimport { hexToRgb } from \"./Utils\";\nimport {\n  ALL_AMINOACID_COLORSCHEMES,\n  ALL_NUCLEOTIDE_COLORSCHEMES\n} from \"./MolecularStyles\";\n\ninterface IResidueColor {\n  [colorScheme: string]: {\n    hexString: string;\n    rgb: {\n      red: number;\n      green: number;\n      blue: number;\n    };\n    backgroundAlpha: number;\n  };\n}\n\ninterface IAminoAcid {\n  singleLetterCode: string;\n  threeLetterCode: string;\n  fullName: string;\n  glyph: (props: { [key: string]: string }) => JSX.Element;\n  colors: IResidueColor;\n}\n\ninterface INucleotide {\n  singleLetterCode: string;\n  fullName: string;\n  glyph: (props: { [key: string]: string }) => JSX.Element;\n  colors: IResidueColor;\n}\n\nexport class AminoAcid implements IAminoAcid {\n  glyph: (props: { [key: string]: string }) => JSX.Element;\n  colors: IResidueColor;\n\n  public static readonly canonicalAminoAcids: AminoAcid[] = [\n    new AminoAcid(\"A\", \"ALA\", \"Alanine\"),\n    new AminoAcid(\"R\", \"ARG\", \"Arginine\"),\n    new AminoAcid(\"N\", \"ASN\", \"Asparagine\"),\n    new AminoAcid(\"D\", \"ASP\", \"Aspartic Acid\"),\n    new AminoAcid(\"C\", \"CYS\", \"Cysteine\"),\n    new AminoAcid(\"Q\", \"GLU\", \"Glutamine\"),\n    new AminoAcid(\"E\", \"GLN\", \"Glutamic Acid\"),\n    new AminoAcid(\"G\", \"GLY\", \"Glycine\"),\n    new AminoAcid(\"H\", \"HIS\", \"Histidine\"),\n    new AminoAcid(\"I\", \"ILE\", \"Isoleucine\"),\n    new AminoAcid(\"L\", \"LEU\", \"Leucine\"),\n    new AminoAcid(\"K\", \"LYS\", \"Lysine\"),\n    new AminoAcid(\"M\", \"MET\", \"Methionine\"),\n    new AminoAcid(\"F\", \"PHE\", \"Phenylalanine\"),\n    new AminoAcid(\"P\", \"PRO\", \"Proline\"),\n    new AminoAcid(\"S\", \"SER\", \"Serine\"),\n    new AminoAcid(\"T\", \"THR\", \"Threonine\"),\n    new AminoAcid(\"W\", \"TRP\", \"Tryptophan\"),\n    new AminoAcid(\"Y\", \"TYR\", \"Tyrosine\"),\n    new AminoAcid(\"V\", \"VAL\", \"Valine\"),\n\n    new AminoAcid(\"X\", \"UKN\", \"Unknown Amino Acid\")\n  ];\n\n  private static bySingleLetterCode = AminoAcid.canonicalAminoAcids.reduce(\n    (acc, aa) => {\n      acc[aa.singleLetterCode] = aa;\n      return acc;\n    },\n    {} as { [key: string]: AminoAcid }\n  );\n\n  private static byThreeLetterCode = AminoAcid.canonicalAminoAcids.reduce(\n    (acc, aa) => {\n      acc[aa.threeLetterCode] = aa;\n      return acc;\n    },\n    {} as { [key: string]: AminoAcid }\n  );\n\n  public static readonly UNKNOWN = AminoAcid.bySingleLetterCode[\"X\"];\n\n  static fromSingleLetterCode(singleLetterCode: string): IAminoAcid {\n    if (singleLetterCode in this.bySingleLetterCode) {\n      return AminoAcid.bySingleLetterCode[singleLetterCode];\n    }\n    return AminoAcid.UNKNOWN;\n  }\n\n  static fromThreeLetterCode(threeLetterCode: string): IAminoAcid {\n    if (threeLetterCode in this.byThreeLetterCode) {\n      return AminoAcid.byThreeLetterCode[threeLetterCode];\n    }\n    return AminoAcid.UNKNOWN;\n  }\n\n  constructor(\n    public singleLetterCode: string,\n    public threeLetterCode: string,\n    public fullName: string\n  ) {\n    this.singleLetterCode = singleLetterCode;\n    this.threeLetterCode = threeLetterCode;\n    this.fullName = fullName;\n    this.glyph = GlyphFactory.glyphFromChar(singleLetterCode);\n    this.colors = ALL_AMINOACID_COLORSCHEMES.reduce((acc, cs) => {\n      const colorPair = Object.entries(cs.colors).find(([aa, color]) => {\n        if (aa === singleLetterCode) {\n          return true;\n        }\n        return false;\n      });\n\n      let hexString = \"#ffffff\";\n      if (colorPair) {\n        hexString = colorPair[1];\n      }\n      acc[cs.commonName] = {\n        hexString: hexString,\n        rgb: hexToRgb(hexString),\n        backgroundAlpha: cs.backgroundAlpha\n      };\n      return acc;\n    }, {} as IResidueColor);\n  }\n}\n\nexport class Nucleotide implements INucleotide {\n  glyph: (props: { [key: string]: string }) => JSX.Element;\n  colors: IResidueColor;\n\n  static allNucleotides: Nucleotide[] = [\n    new Nucleotide(\"A\", \"Adenine\"),\n    new Nucleotide(\"C\", \"Cytosine\"),\n    new Nucleotide(\"G\", \"Guanine\"),\n    new Nucleotide(\"T\", \"Thymidine\"),\n    new Nucleotide(\"U\", \"Uracil\"),\n\n    new Nucleotide(\"R\", \"Purine\"),\n    new Nucleotide(\"Y\", \"Pyrimidine\"),\n\n    new Nucleotide(\"X\", \"Unknown Nucleotide\")\n  ];\n\n  private static bySingleLetterCode = Nucleotide.allNucleotides.reduce(\n    (acc, aa) => {\n      acc[aa.singleLetterCode] = aa;\n      return acc;\n    },\n    {} as { [key: string]: Nucleotide }\n  );\n\n  public static UNKNOWN = Nucleotide.bySingleLetterCode[\"X\"];\n\n  static fromSingleLetterCode(singleLetterCode: string): Nucleotide {\n    if (singleLetterCode in this.bySingleLetterCode) {\n      return Nucleotide.bySingleLetterCode[singleLetterCode];\n    }\n    return Nucleotide.UNKNOWN;\n  }\n\n  constructor(public singleLetterCode: string, public fullName: string) {\n    this.singleLetterCode = singleLetterCode;\n    this.fullName = fullName;\n    this.glyph = GlyphFactory.glyphFromChar(singleLetterCode);\n    this.colors = ALL_NUCLEOTIDE_COLORSCHEMES.reduce((acc, cs) => {\n      const colorPair = Object.entries(cs.colors).find(([aa, color]) => {\n        if (aa === singleLetterCode) {\n          return true;\n        }\n        return false;\n      });\n\n      let hexString = \"#ffffff\";\n      if (colorPair) {\n        hexString = colorPair[1];\n      }\n      acc[cs.commonName] = {\n        hexString: hexString,\n        rgb: hexToRgb(hexString),\n        backgroundAlpha: cs.backgroundAlpha\n      };\n      return acc;\n    }, {} as IResidueColor);\n  }\n}\n","import React from \"react\";\nimport Alignment, { SequenceSortOptions, ISequence } from \"./Alignment\";\nimport { Nucleotide, AminoAcid } from \"./Residues\";\nimport * as PIXI from \"pixi.js\";\nimport { PixiComponent, Stage, Sprite, AppContext } from \"@inlet/react-pixi\";\nimport { Viewport } from \"pixi-viewport\";\nimport { Graphics } from \"pixi.js\";\n\nimport {\n  IColorScheme,\n  PositionsToStyle,\n  AlignmentTypes\n} from \"./MolecularStyles\";\n\nexport interface IAlignmentCanvasComponentProps {\n  alignment: Alignment;\n  alignmentType: AlignmentTypes;\n  sortBy: SequenceSortOptions;\n  positionsToStyle: PositionsToStyle;\n  colorScheme: IColorScheme;\n  highlightRows?: [number, number]; //[startRowNum, endRowNum]\n  stageResolution?: {\n    width: number;\n    height: number;\n  };\n  viewportProps?: Partial<IViewportProps>;\n\n  mouseDown?(x: number, y: number): void;\n\n  readonly id: string;\n}\n\ninterface ITiledImages {\n  targetTileWidth: number;\n  targetTileHeight: number;\n  lastTileWidth: number;\n  lastTileHeight: number;\n  numXTiles: number;\n  numYTiles: number;\n  tiles: {\n    tileX: number;\n    tileY: number;\n    pixelX: number;\n    pixelY: number;\n    width: number;\n    height: number;\n    image: HTMLCanvasElement;\n  }[];\n}\n\nconst AlignmentHighlighter = PixiComponent(\"AlignmentHighlighter\", {\n  create: (props: any) => new Graphics(),\n  applyProps: (instance, _, props) => {\n    const { x, y, width, height, fillColor, fillAlpha } = props;\n    instance.clear();\n    instance.beginFill(fillColor, fillAlpha);\n    instance.drawRect(x, y, width, height);\n    instance.endFill();\n  }\n});\n\nexport class AlignmentCanvasComponent extends React.Component<\n  IAlignmentCanvasComponentProps\n> {\n  app?: PIXI.Application;\n  scaleX: number = 1;\n  scaleY: number = 1;\n\n  static defaultProps = {\n    mouseDown: () => {},\n    stageResolution: {\n      width: 485,\n      height: 650\n    },\n    viewportProps: {\n      useDrag: true,\n      usePinch: true,\n      useWheel: true,\n      zoomPercent: 0\n    }\n  };\n\n  sliderChanged(newValue: number, xy: \"x\" | \"y\") {\n    if (this.app) {\n      this.app.stage.children.forEach(sprite => {\n        if (xy === \"x\") {\n          sprite.scale.x = newValue;\n        } else {\n          sprite.scale.y = newValue;\n        }\n      });\n    }\n  }\n\n  render() {\n    const {\n      alignment,\n      alignmentType,\n      colorScheme,\n      highlightRows,\n      id,\n      positionsToStyle,\n      sortBy,\n      stageResolution,\n      viewportProps\n    } = this.props;\n    if (!alignment) {\n      return null;\n    }\n    const numSequences = alignment.getSequences().length;\n    const maxSeqLength = alignment.getMaxSequenceLength();\n\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST; //\n    //TODO: still anti-aliases on retina devices. probably requires\n    //      writing 4x the pixels and telling pixi that it is a retina\n    //      image\n    //PIXI.settings.RESOLUTION = 2;\n    //PIXI.settings.ROUND_PIXELS = true; //\n\n    const height = highlightRows\n      ? highlightRows[1] - highlightRows[0]\n      : undefined;\n    return (\n      <div\n        id={id}\n        onWheel={this.onWheel}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n      >\n        <Stage\n          width={stageResolution?.width}\n          height={stageResolution?.height}\n          options={{ transparent: true }}\n        >\n          <AppContext.Consumer>\n            {app => {\n              this.app = app;\n              return <></>;\n            }}\n          </AppContext.Consumer>\n          <AppContext.Consumer>\n            {app => (\n              <PixiViewport\n                app={app}\n                numColumns={maxSeqLength}\n                numRows={numSequences}\n                mouseDown={this.props.mouseDown}\n                {...viewportProps}\n              >\n                <PixiAlignmentTiled\n                  id=\"tiled-alignment\"\n                  alignment={alignment}\n                  alignmentType={alignmentType}\n                  sortBy={sortBy}\n                  colorScheme={colorScheme}\n                  positionsToStyle={positionsToStyle}\n                />\n                {height ? (\n                  <>\n                    {this.renderAlignmentHighlighter({\n                      x: 0,\n                      y: this.props.highlightRows![0],\n                      width: maxSeqLength,\n                      height\n                    })}\n                  </>\n                ) : (\n                  <></>\n                )}\n              </PixiViewport>\n            )}\n          </AppContext.Consumer>\n        </Stage>\n      </div>\n    );\n  }\n\n  protected renderAlignmentHighlighter = (props: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    fillColor?: number;\n    fillAlpha?: number;\n  }) => (\n    <AlignmentHighlighter\n      {...{ fillColor: 0xff0000, fillAlpha: 0.25, ...props }}\n    />\n  );\n\n  protected onMouseEnter = (e: React.MouseEvent<HTMLDivElement>) => {\n    document.body.style.overflow = \"hidden\";\n  };\n\n  protected onMouseLeave = (e: React.MouseEvent<HTMLDivElement>) => {\n    document.body.style.overflow = \"auto\";\n  };\n\n  protected onWheel = (e: React.WheelEvent<HTMLDivElement>) => {\n    //e.preventDefault(); //TODO Drew is this necessary?\n  };\n}\nclass PixiAlignmentTiled extends React.Component<\n  IAlignmentCanvasComponentProps\n> {\n  shouldComponentUpdate(nextProps: IAlignmentCanvasComponentProps) {\n    const toReturn =\n      nextProps.alignment !== this.props.alignment ||\n      nextProps.colorScheme !== this.props.colorScheme ||\n      nextProps.positionsToStyle !== this.props.positionsToStyle ||\n      nextProps.sortBy !== this.props.sortBy;\n    /*console.log(\n      \"UPDATING Canvas Tiling: \" +\n        (nextProps.colorScheme !== this.currentColorScheme) +\n        \":\" +\n        (nextProps.positionsToStyle !== this.currentPositionsStyled) +\n        \" :: \" +\n        toReturn\n    );*/\n    return toReturn;\n  }\n\n  render() {\n    if (!this.props.alignment) {\n      return null;\n    }\n\n    const {\n      alignment,\n      alignmentType,\n      colorScheme,\n      positionsToStyle,\n      sortBy\n    } = this.props;\n\n    // Generate multiple tiled images from the alignment\n    const sequences = alignment.getSequences(sortBy);\n    const fullWidth = alignment.getMaxSequenceLength();\n    const fullHeight = sequences.length;\n\n    const sizes = {\n      fullWidth,\n      fullHeight,\n      targetTileWidth: Math.min(400, fullWidth),\n      targetTileHeight: Math.min(400, fullHeight)\n    };\n\n    const tiledImages: ITiledImages = this.initializeTiledImages(sizes);\n\n    for (\n      let tileYNumber = 0;\n      tileYNumber < tiledImages.numYTiles;\n      tileYNumber++\n    ) {\n      for (\n        let tileXNumber = 0;\n        tileXNumber < tiledImages.numXTiles;\n        tileXNumber++\n      ) {\n        const tiledImage = this.generateCanvasForTile(\n          tileXNumber,\n          tileYNumber,\n          sizes.targetTileWidth,\n          sizes.targetTileHeight,\n          tiledImages,\n          sequences\n        );\n        tiledImages.tiles.push(tiledImage);\n      }\n    }\n\n    console.log(\"CANVAS rerender [\" + sortBy.key + \"]\", sequences);\n\n    return (\n      <>\n        {tiledImages.tiles.map(tile => (\n          <Sprite\n            source={tile.image}\n            x={tile.pixelX}\n            y={tile.pixelY}\n            key={`${tile.tileX}_\n                  ${tile.tileY}_\n                  ${colorScheme.commonName}_\n                  ${positionsToStyle.key}_\n                  ${alignmentType.key}_\n                  ${sortBy.key}_\n                  ${alignment.getName()}`}\n          ></Sprite>\n        ))}\n      </>\n    );\n  }\n\n  protected colorCanvasWithSequence(\n    tileImageData: ImageData,\n    tileCanvasContext: CanvasRenderingContext2D,\n    tileCanvas: HTMLCanvasElement,\n    sequences: ISequence[],\n    offsets: { seqY: number; letterX: number }\n  ) {\n    let imageDataIdx = 0;\n\n    for (let seqIdx = 0; seqIdx < tileCanvas.height; seqIdx++) {\n      const seq = sequences[seqIdx + offsets.seqY];\n      for (let letterIdx = 0; letterIdx < tileCanvas.width; letterIdx++) {\n        const letter = seq.sequence[letterIdx + offsets.letterX];\n        const colorScheme = this.getCurrentMoleculeColors(\n          letter,\n          letterIdx,\n          offsets\n        );\n\n        tileImageData.data[imageDataIdx] = colorScheme.rgb.red;\n        tileImageData.data[imageDataIdx + 1] = colorScheme.rgb.green;\n        tileImageData.data[imageDataIdx + 2] = colorScheme.rgb.blue;\n        tileImageData.data[imageDataIdx + 3] = 255; //alpha between 0 (transparent) and 255 (opaque)\n\n        imageDataIdx += 4;\n      }\n    }\n    tileCanvasContext.putImageData(tileImageData, 0, 0);\n  }\n\n  protected generateCanvasForTile(\n    tileXNumber: number,\n    tileYNumber: number,\n    targetTileWidth: number,\n    targetTileHeight: number,\n    tiledImages: ITiledImages,\n    sequences: ISequence[]\n  ) {\n    const tileCanvas = document.createElement(\"canvas\") as HTMLCanvasElement;\n    tileCanvas.height =\n      tileYNumber === tiledImages.numYTiles - 1\n        ? tiledImages.lastTileHeight\n        : targetTileHeight;\n    tileCanvas.width =\n      tileXNumber === tiledImages.numXTiles - 1\n        ? tiledImages.lastTileWidth\n        : targetTileWidth;\n\n    const offsets = {\n      seqY: tileYNumber * targetTileHeight,\n      letterX: tileXNumber * targetTileWidth\n    };\n\n    const tileCanvasContext = tileCanvas.getContext(\"2d\");\n    tileCanvasContext?.fillRect(0, 0, tileCanvas.width, tileCanvas.height); //unclear why necessary\n    const tileImageData = tileCanvasContext?.getImageData(\n      0,\n      0,\n      tileCanvas.width,\n      tileCanvas.height\n    );\n\n    if (tileImageData && tileCanvasContext) {\n      this.colorCanvasWithSequence(\n        tileImageData,\n        tileCanvasContext,\n        tileCanvas,\n        sequences,\n        offsets\n      );\n    }\n\n    return {\n      tileX: tileXNumber,\n      tileY: tileYNumber,\n      pixelX: offsets.letterX,\n      pixelY: offsets.seqY,\n      width: tileCanvas.width,\n      height: tileCanvas.height,\n      image: tileCanvas\n    };\n  }\n\n  protected getCurrentMoleculeColors(\n    letter: string,\n    letterIdx: number,\n    offsets: { seqY: number; letterX: number }\n  ) {\n    const { alignment, alignmentType, colorScheme } = this.props;\n    const consensusSequence = alignment.getConsensus();\n    const querySequence = alignment.getTargetSequence().sequence;\n    const moleculeClass =\n      alignmentType === AlignmentTypes.AMINOACID ? AminoAcid : Nucleotide;\n    let molecule = moleculeClass.UNKNOWN;\n\n    if (this.props.positionsToStyle === PositionsToStyle.ALL) {\n      molecule = moleculeClass.fromSingleLetterCode(letter);\n    } else {\n      const isConsensus =\n        consensusSequence[letterIdx + offsets.letterX].letter === letter;\n      const isQuery = querySequence[letterIdx + offsets.letterX] === letter;\n      if (\n        (this.props.positionsToStyle === PositionsToStyle.CONSENSUS &&\n          isConsensus) ||\n        (this.props.positionsToStyle === PositionsToStyle.CONSENSUS_DIFF &&\n          !isConsensus) ||\n        (this.props.positionsToStyle === PositionsToStyle.QUERY && isQuery) ||\n        (this.props.positionsToStyle === PositionsToStyle.QUERY_DIFF &&\n          !isQuery)\n      ) {\n        molecule = moleculeClass.fromSingleLetterCode(letter);\n      }\n    }\n    return molecule.colors[colorScheme.commonName];\n  }\n\n  protected initializeTiledImages({\n    targetTileWidth = 0,\n    targetTileHeight = 0,\n    fullWidth = 0,\n    fullHeight = 0\n  }): ITiledImages {\n    return {\n      targetTileWidth: targetTileWidth,\n      targetTileHeight: targetTileHeight,\n      lastTileWidth:\n        fullWidth % targetTileWidth !== 0\n          ? fullWidth % targetTileWidth\n          : targetTileWidth,\n      lastTileHeight:\n        fullHeight % targetTileHeight !== 0\n          ? fullHeight % targetTileHeight\n          : targetTileHeight,\n      numXTiles:\n        fullWidth % targetTileWidth !== 0\n          ? Math.floor(fullWidth / targetTileWidth) + 1\n          : Math.floor(fullWidth / targetTileWidth),\n      numYTiles:\n        fullHeight % targetTileHeight !== 0\n          ? Math.floor(fullHeight / targetTileHeight) + 1\n          : Math.floor(fullHeight / targetTileHeight),\n      tiles: []\n    };\n  }\n}\n\nexport interface IViewportProps {\n  useDrag?: boolean; // Allows the user to drag the viewport around.\n  usePinch?: boolean; // Allows the user to pinch to zoom; e.g. on a trackpad.\n  useWheel?: boolean; // Allows the user to use a mouse wheel to zoom.\n  numColumns: number;\n  numRows: number;\n  app: PIXI.Application;\n  mouseDown?: (x: number, y: number) => void;\n  zoomPercent?: number;\n}\n\nlet viewport: Viewport;\n\nconst PixiViewport = PixiComponent<IViewportProps, any>(\"PixiViewport\", {\n  create(props: IViewportProps) {\n    const {\n      app,\n      numColumns,\n      numRows,\n      useDrag,\n      usePinch,\n      useWheel,\n      zoomPercent\n    } = props;\n    app.renderer.backgroundColor = 0xffffff;\n\n    let vp = new Viewport({\n      screenWidth: app.renderer.width,\n      screenHeight: app.renderer.height,\n      worldWidth: Math.max(numColumns, app.renderer.width) + 1, //app.renderer.width,\n      worldHeight: numRows, //23627,\n      interaction: app.renderer.plugins.interaction\n    })\n      .decelerate()\n      .clamp({\n        direction: \"all\"\n      })\n      .bounce({ friction: 0.1, time: 150, underflow: \"center\" })\n      .clampZoom({\n        maxHeight: app.renderer.height,\n        maxWidth: app.renderer.width\n      });\n    /*\n      .drag()\n      .pinch()\n      .wheel()\n      .decelerate()\n      .clamp({\n        direction: \"all\"\n      })\n      .bounce({ friction: 0.1, time: 500, underflow: \"center\" })\n      .clampZoom({\n        maxHeight: app.renderer.height,\n        maxWidth: app.renderer.width\n      });*/\n\n    // !IMPORTANT\n    // Two-finger drag on trackpad is also enabled by this.\n    // Issue currently open: https://github.com/davidfig/pixi-viewport/issues/143\n    if (useDrag) {\n      vp = vp.drag({\n        direction: \"all\" //this is the line that kills pinch\n      });\n    }\n\n    if (usePinch) {\n      vp = vp.pinch();\n    }\n\n    if (useWheel) {\n      vp = vp.wheel();\n    }\n\n    console.log(zoomPercent);\n    if (zoomPercent) {\n      vp = vp.zoomPercent(zoomPercent);\n    }\n    vp.on(\"clicked\", e => {\n      if (props.mouseDown) {\n        props.mouseDown(e.world.x, e.world.y);\n      }\n    });\n\n    viewport = vp;\n    return vp;\n  },\n  applyProps(\n    ins: PIXI.Graphics,\n    oldProps: IViewportProps,\n    newProps: IViewportProps\n  ) {\n    if (oldProps.zoomPercent !== newProps.zoomPercent && newProps.zoomPercent) {\n      viewport = viewport.setZoom(newProps.zoomPercent, false);\n    }\n    return viewport;\n  }\n});\n","import * as React from \"react\";\n\nimport { AlignmentCanvasComponent } from \"../AlignmentCanvasComponent\";\nimport Alignment, { SequenceSortOptions } from \"../Alignment\";\nimport {\n  AminoAcidAlignmentStyle,\n  NucleotideAlignmentStyle\n} from \"../MolecularStyles\";\n\nexport interface IMiniMapProps {\n  alignHorizontal: \"left\" | \"right\";\n  alignVertical: \"top\" | \"bottom\";\n  alignment: Alignment;\n  height: number;\n  highlightRows?: [number, number];\n  onClick?: (x: number, y: number) => void;\n  sortBy: SequenceSortOptions;\n  style: AminoAcidAlignmentStyle | NucleotideAlignmentStyle;\n  width: number;\n}\n\nexport interface IMiniMapState {\n  zoomPercent: number;\n}\n\nexport class MiniMap extends React.Component<IMiniMapProps, IMiniMapState> {\n  public static defaultProps = {\n    alignHorizontal: \"right\",\n    alignVertical: \"top\",\n    height: 600,\n    width: 300\n  };\n  constructor(props: IMiniMapProps) {\n    super(props);\n    this.state = {\n      zoomPercent: 1\n    };\n  }\n\n  public render() {\n    const { alignHorizontal, alignVertical, height, width } = this.props;\n    return (\n      <div\n        style={{\n          zIndex: 100000,\n          ...(alignHorizontal === \"left\" ? { left: 0 } : { right: 0 }),\n          ...(alignVertical === \"top\" ? { top: 0 } : { bottom: 0 }),\n          height,\n          position: \"fixed\",\n          width\n        }}\n      >\n        {this.renderCanvasComponent()}\n        {this.renderZoomControls()}\n      </div>\n    );\n  }\n\n  protected renderCanvasComponent = () => {\n    const {\n      alignment,\n      height,\n      highlightRows,\n      sortBy,\n      style,\n      width\n    } = this.props;\n    const { zoomPercent } = this.state;\n    return (\n      <div style={{ opacity: 0.75 }}>\n        <AlignmentCanvasComponent\n          id=\"alignment_canvas\"\n          alignment={alignment}\n          alignmentType={style.alignmentType}\n          positionsToStyle={style.positionsToStyle}\n          colorScheme={style.colorScheme}\n          sortBy={sortBy}\n          stageResolution={{\n            width,\n            height\n          }}\n          highlightRows={highlightRows}\n          viewportProps={{\n            useDrag: true,\n            usePinch: true,\n            useWheel: true,\n            zoomPercent\n          }}\n          mouseDown={this.onMouseDown}\n        />\n      </div>\n    );\n  };\n\n  protected renderZoomControls = () => (\n    <div style={{ textAlign: \"center\", opacity: 1 }}>\n      <button onClick={this.onZoomOut}>-</button>\n      <button onClick={this.onZoomReset}>Reset</button>\n      <button onClick={this.onZoomIn}>+</button>\n    </div>\n  );\n\n  protected onMouseDown = (x: number, y: number) => {\n    const { onClick } = this.props;\n    if (onClick) {\n      onClick(x, y);\n    }\n  };\n\n  protected onZoomIn = () => {\n    const { zoomPercent } = this.state;\n    this.setState({\n      zoomPercent: Math.min(8, zoomPercent + 0.25)\n    });\n  };\n\n  protected onZoomOut = () => {\n    const { zoomPercent } = this.state;\n    this.setState({\n      // A zoomPercent of 0 will not actually zoom out!\n      zoomPercent: Math.max(0.25, zoomPercent - 0.25)\n    });\n  };\n\n  protected onZoomReset = () => {\n    this.setState({\n      zoomPercent: 1\n    });\n  };\n}\n","import React from \"react\";\nimport \"./AlignmentViewer.scss\";\nimport { Ace } from \"ace-builds\";\nimport Alignment, { SequenceSortOptions } from \"./Alignment\";\nimport ScrollSync, { ScrollType } from \"./ScrollSync\";\nimport { AceMSAComponent, AceEditorTypes } from \"./AceMSAComponent\";\nimport { SequenceLogoComponent, LOGO_TYPES } from \"./SequenceLogoComponent\";\nimport { SequenceConservationComponent } from \"./SequenceConservationComponent\";\nimport { AlignmentCanvasComponent } from \"./AlignmentCanvasComponent\";\nimport {\n  AminoAcidAlignmentStyle,\n  NucleotideAlignmentStyle,\n  PositionsToStyle\n} from \"./MolecularStyles\";\nimport { MiniMap } from \"./components/MiniMap\";\n\nexport interface AppProps {\n  alignment: Alignment;\n  style: AminoAcidAlignmentStyle | NucleotideAlignmentStyle;\n  logoPlotStyle: LOGO_TYPES;\n  zoomLevel: number;\n  sortBy: SequenceSortOptions;\n}\nexport interface AppState {\n  aceCharacterWidth: number;\n  aceEditors: Ace.Editor[];\n  alignmentEditorFirstRow?: number;\n  alignmentEditorLastRow?: number;\n}\n\nexport class AlignmentViewer extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n    this.state = {\n      aceEditors: [],\n      aceCharacterWidth: 0\n    };\n\n    //setup scroll groups\n    ScrollSync.getInstance().setScrollerGroup(\n      \"horizontal\",\n      ScrollType.horizontal\n    );\n    ScrollSync.getInstance().setScrollerGroup(\"vertical\", ScrollType.vertical);\n  }\n\n  _handleCharacterSizeChanged = (newCharSize: number) => {\n    this.setState({\n      aceCharacterWidth: newCharSize\n    });\n  };\n\n  _aceEditorLoaded = (\n    id: string,\n    editor: Ace.Editor,\n    scrollSyncDirection: ScrollType\n  ) => {\n    //console.log(\"_aceEditorLoaded id =\" + id);\n\n    let scrollSync = ScrollSync.getInstance();\n    if (\n      scrollSyncDirection === ScrollType.horizontal ||\n      scrollSyncDirection === ScrollType.both\n    ) {\n      scrollSync.registerScroller(editor, \"horizontal\");\n    }\n    if (\n      scrollSyncDirection === ScrollType.vertical ||\n      scrollSyncDirection === ScrollType.both\n    ) {\n      scrollSync.registerScroller(editor, \"vertical\");\n    }\n    this.setState({\n      aceCharacterWidth: editor.renderer.characterWidth, //todo: check if the same always.\n      aceEditors: [editor].concat(this.state.aceEditors)\n    });\n\n    //track visible rows to show in canvas MSA\n    if (id === \"ace-alignment\") {\n      editor.renderer.on(\"afterRender\", () => {\n        // BREAKS LOGO, rerenders everything below and kills performance. React lifecycle stuff.\n        setTimeout(() => {\n          this.setState({\n            alignmentEditorFirstRow: editor.renderer.getFirstFullyVisibleRow(),\n            alignmentEditorLastRow: editor.renderer.getLastFullyVisibleRow()\n          });\n        });\n      });\n    }\n  };\n\n  _elementLoaded(className: string, scroller: HTMLElement) {\n    //console.log(\"_elementLoaded className =\" + className + \":\", scroller);\n\n    let scrollSync = ScrollSync.getInstance();\n    scrollSync.registerScroller(scroller, \"horizontal\", true);\n  }\n\n  protected generateWidget(\n    className: string,\n    annotation: string | JSX.Element,\n    content: JSX.Element,\n    addToScrollSync?: boolean\n  ) {\n    return (\n      <div className={`av-widget ${className}`}>\n        <div className=\"av-annotation\">{annotation}</div>\n        <div\n          className=\"av-content\"\n          ref={e => {\n            if (e && addToScrollSync) {\n              //TODO: move into separate component .. Ref can be null here and\n              //      also good to keep track of removal / addition for scroll sync\n              //console.log(\"the ref is:\", e);\n              this._elementLoaded(className, e);\n            }\n          }}\n        >\n          {content}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return !this.props.alignment ? null : (\n      <div className=\"alignment_viewer\">\n        {this.renderMiniMap()}\n        {/*<div id=\"column_mouseover\"></div>*/}\n\n        {this.generateWidget(\n          \"av-conservation-gaps\",\n          \"Conservation / gaps:\",\n          this.renderConservationBox(),\n          true\n        )}\n\n        {this.generateWidget(\n          \"av-sequence-logo\",\n          \"Logo:\",\n          this.renderSequenceLogo(),\n          true\n        )}\n\n        {this.generateWidget(\n          \"av-consensus-seq\",\n          \"Consensus sequence:\",\n          this.renderConsensusQueryBox()\n        )}\n\n        {this.generateWidget(\n          \"av-target-seq\",\n          \"Query sequence:\",\n          this.renderQuerySeqBox()\n        )}\n\n        {this.generateWidget(\n          \"av-position-indicator\",\n          \"Position:\",\n          this.renderPositionBox()\n        )}\n\n        {this.generateWidget(\n          \"av-ace-msa\",\n          this.renderAlignmentAnnotationBox(),\n          this.renderAlignmentBox()\n        )}\n\n        {/*\n        //this is where we would add the webgl msa ..\n        this.generateWidget(\n          \"av-webgl-msa\",\n          \"\",\n          this.renderDatatableBox()\n        )*/}\n      </div>\n    );\n  }\n\n  protected renderSequenceLogo = () => (\n    <div\n      className={\n        `logo_box ${this.props.style.alignmentType.className} ` +\n        `${this.props.style.colorScheme.className} ` +\n        `${PositionsToStyle.ALL.className}`\n      }\n    >\n      {\n        <SequenceLogoComponent\n          id=\"sequence_logo\"\n          alignment={this.props.alignment}\n          glyphWidth={this.state.aceCharacterWidth}\n          logoType={this.props.logoPlotStyle}\n        />\n      }\n    </div>\n  );\n\n  protected renderConservationBox = () => (\n    <SequenceConservationComponent\n      id=\"sequence_conservation\"\n      alignment={this.props.alignment}\n      characterWidth={this.state.aceCharacterWidth}\n    />\n  );\n\n  protected renderConsensusQueryBox = () => (\n    <div className=\"consensusseq_box\">\n      {\n        <AceMSAComponent\n          id=\"ace-consensusseq\"\n          type={AceEditorTypes.consensus}\n          alignment={this.props.alignment}\n          fontSize={this.props.zoomLevel}\n          sortBy={this.props.sortBy}\n          topLevelClassNames={[\n            this.props.style.residueDetail.className,\n            this.props.style.alignmentType.className,\n            this.props.style.positionsToStyle.className,\n            this.props.style.colorScheme.className\n          ].join(\" \")}\n          editorLoaded={editor => {\n            this._aceEditorLoaded(\n              \"ace-consensusseq\",\n              editor,\n              ScrollType.horizontal\n            );\n          }}\n        />\n      }\n    </div>\n  );\n\n  protected renderQuerySeqBox = () => (\n    <div className=\"queryseq_box\">\n      {\n        <AceMSAComponent\n          id=\"ace-queryseq\"\n          type={AceEditorTypes.query}\n          alignment={this.props.alignment}\n          fontSize={this.props.zoomLevel}\n          sortBy={this.props.sortBy}\n          topLevelClassNames={[\n            this.props.style.residueDetail.className,\n            this.props.style.alignmentType.className,\n            this.props.style.positionsToStyle.className,\n            this.props.style.colorScheme.className\n          ].join(\" \")}\n          editorLoaded={editor => {\n            this._aceEditorLoaded(\n              \"ace-queryseq\",\n              editor,\n              ScrollType.horizontal\n            );\n          }}\n        />\n      }\n    </div>\n  );\n\n  protected renderPositionBox = () => (\n    <div className=\"position_box\">\n      {\n        <AceMSAComponent\n          id=\"ace-positions\"\n          type={AceEditorTypes.position}\n          alignment={this.props.alignment}\n          fontSize={this.props.zoomLevel}\n          sortBy={this.props.sortBy}\n          editorLoaded={editor => {\n            this._aceEditorLoaded(\n              \"ace-positions\",\n              editor,\n              ScrollType.horizontal\n            );\n          }}\n        />\n      }\n    </div>\n  );\n\n  /*\n  protected renderDatatableBox = () => (\n    <div className=\"datatable_box\" id=\"datatable\">\n      {\n        <AlignmentCanvasComponent\n          id=\"alignment_canvas\"\n          alignment={this.props.alignment}\n          alignmentType={this.props.style.alignmentType}\n          positionsToStyle={this.props.style.positionsToStyle}\n          colorScheme={this.props.style.colorScheme}\n          sortBy={this.props.sortBy}\n          mouseDown={(x, y) => {\n            console.log(\"someone clicked on the canvas:\" + x + \",\" + y);\n          }}\n          highlightRows={\n            this.state.alignmentEditorFirstRow !== undefined &&\n            this.state.alignmentEditorLastRow !== undefined\n              ? [\n                  this.state.alignmentEditorFirstRow,\n                  this.state.alignmentEditorLastRow\n                ]\n              : undefined\n          }\n        />\n      }\n    </div>\n  );\n*/\n  protected renderAlignmentBox = () => (\n    <div className=\"alignment_box\">\n      <AceMSAComponent\n        id=\"ace-alignment\"\n        type={AceEditorTypes.alignment}\n        alignment={this.props.alignment}\n        fontSize={this.props.zoomLevel}\n        sortBy={this.props.sortBy}\n        topLevelClassNames={[\n          this.props.style.residueDetail.className,\n          this.props.style.alignmentType.className,\n          this.props.style.positionsToStyle.className,\n          this.props.style.colorScheme.className\n        ].join(\" \")}\n        characterSizeChanged={this._handleCharacterSizeChanged}\n        editorLoaded={editor => {\n          this._aceEditorLoaded(\"ace-alignment\", editor, ScrollType.both);\n        }}\n      />\n    </div>\n  );\n\n  protected renderAlignmentAnnotationBox = () => (\n    <div className=\"alignment_metadata_box\">\n      <AceMSAComponent\n        id=\"ace-alignment-metadata\"\n        type={AceEditorTypes.alignment_metadata}\n        alignment={this.props.alignment}\n        fontSize={this.props.zoomLevel}\n        sortBy={this.props.sortBy}\n        characterSizeChanged={this._handleCharacterSizeChanged}\n        editorLoaded={editor => {\n          this._aceEditorLoaded(\n            \"ace-alignment-metadata\",\n            editor,\n            ScrollType.vertical\n          );\n        }}\n      />\n    </div>\n  );\n\n  protected renderMiniMap() {\n    const { alignment, sortBy, style } = this.props;\n    return (\n      alignment &&\n      style && (\n        <MiniMap\n          width={alignment.getMaxSequenceLength()}\n          height={500}\n          alignHorizontal={\"right\"}\n          alignment={alignment}\n          style={style}\n          sortBy={sortBy}\n          highlightRows={\n            this.state.alignmentEditorFirstRow !== undefined &&\n            this.state.alignmentEditorLastRow !== undefined\n              ? [\n                  this.state.alignmentEditorFirstRow,\n                  this.state.alignmentEditorLastRow\n                ]\n              : undefined\n          }\n          onClick={this.onMinimapClick}\n        />\n      )\n    );\n  }\n\n  protected onMinimapClick = (x: number, y: number) => {\n    const {\n      aceEditors,\n      alignmentEditorFirstRow,\n      alignmentEditorLastRow\n    } = this.state;\n    let rowCount = 40;\n    if (alignmentEditorFirstRow && alignmentEditorLastRow) {\n      rowCount = alignmentEditorLastRow - alignmentEditorFirstRow;\n    }\n\n    if (aceEditors.length >= 1) {\n      aceEditors[0].scrollToRow(Math.floor(y - rowCount / 2));\n    }\n  };\n}\n","import * as React from \"react\";\n\nexport interface IFileInputProps {\n  labelText: string;\n  onFileLoadCb?: (file: File, event: React.FormEvent) => void;\n}\n\n// Shamelessly based on from https://reactjs.org/docs/uncontrolled-components.html\nexport class FileInputComponent extends React.Component<IFileInputProps> {\n  public static defaultProps = {\n    labelText: \"Upload:\"\n  };\n\n  protected fileInput: React.RefObject<HTMLInputElement>;\n  constructor(props: IFileInputProps) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = React.createRef();\n  }\n\n  handleSubmit(event: React.FormEvent) {\n    const { onFileLoadCb } = this.props;\n    event.preventDefault();\n    if (\n      onFileLoadCb &&\n      this.fileInput.current &&\n      this.fileInput.current.files\n    ) {\n      onFileLoadCb(this.fileInput.current.files[0], event);\n    }\n  }\n\n  render() {\n    const { labelText } = this.props;\n    return (\n      <label>\n        <strong>{labelText}</strong>\n        <input type=\"file\" ref={this.fileInput} onInput={this.handleSubmit} />\n      </label>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.scss\";\nimport Alignment, { SequenceSortOptions } from \"./Alignment\";\nimport { AlignmentViewer } from \"./AlignmentViewer\";\nimport {\n  AminoAcidAlignmentStyle,\n  NucleotideAlignmentStyle,\n  AlignmentStyle,\n  AlignmentTypes,\n  PositionsToStyle,\n  IColorScheme,\n  ResidueDetailTypes\n} from \"./MolecularStyles\";\nimport { LOGO_TYPES } from \"./SequenceLogoComponent\";\nimport { FileInputComponent } from \"./components/FileInputComponent\";\n\nexport interface AppProps {}\nexport interface AppState {\n  alignment?: Alignment;\n  style: AminoAcidAlignmentStyle | NucleotideAlignmentStyle;\n  sortBy: SequenceSortOptions;\n  logoPlotStyle: LOGO_TYPES;\n  zoomLevel: number;\n}\n\nexport default class App extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n    this.state = {\n      style: new AminoAcidAlignmentStyle(),\n      logoPlotStyle: LOGO_TYPES.LETTERS, //TODO - decide NT or AA based on alignment\n      zoomLevel: 12,\n      sortBy: SequenceSortOptions.INPUT\n    };\n  }\n\n  async componentDidMount() {\n    /*this.setState({\n      alignment: await this.getAlignmentForFile(\n        \"7fa1c5691376beab198788a726917d48_b0.4.a2m\"\n      ),\n      style: new AminoAcidAlignmentStyle()\n    });*/\n  }\n\n  render() {\n    const { alignment, logoPlotStyle, sortBy, style, zoomLevel } = this.state;\n\n    const alignmentElement = !alignment ? (\n      <></>\n    ) : (\n      <div className=\"av_holder\">\n        <AlignmentViewer\n          alignment={alignment}\n          style={style}\n          logoPlotStyle={logoPlotStyle}\n          zoomLevel={zoomLevel}\n          sortBy={sortBy}\n        ></AlignmentViewer>\n      </div>\n    );\n\n    return (\n      <div>\n        {this.renderSettingsBox(style)}\n        {alignmentElement}\n      </div>\n    );\n  }\n\n  /*\n  protected getAlignmentForFile = async (filename: string) => {\n    const result = await fetch(`${process.env.PUBLIC_URL}/${filename}`);\n\n    return Alignment.fromFileContents(filename, await result.text());\n  };*/\n\n  protected renderSettingsBox = (\n    style: AminoAcidAlignmentStyle | NucleotideAlignmentStyle\n  ) => {\n    const { alignment } = this.state;\n    const alignmentName = alignment ? <h3>{alignment.getName()}</h3> : <></>;\n\n    return (\n      <div className=\"settings_box\">\n        <form>\n          <div>\n            <h2>{`AlignmentViewer 2.0 Settings Demo`}</h2>\n            {alignmentName}\n          </div>\n          {this.renderSortControl()}\n          {this.renderAlignmentTypeLabel(style)}\n          {this.renderColorScheme(style)}\n          {this.renderResidueDetail(style)}\n          {this.renderPositionStyling(style)}\n          {this.renderSequenceLogo()}\n          {this.renderZoomButtons()}\n          {this.renderFileUpload()}\n          {this.renderExampleLinks()}\n        </form>\n      </div>\n    );\n  };\n\n  protected renderSortControl = () => {\n    const { sortBy } = this.state;\n    return (\n      <div>\n        <label>\n          <strong>Sort order:</strong>\n          <select\n            value={sortBy.key}\n            onChange={e =>\n              this.setState({\n                sortBy: SequenceSortOptions.fromKey(e.target.value)!\n              })\n            }\n          >\n            {SequenceSortOptions.list.map(sso => {\n              return (\n                <option value={sso.key} key={sso.key}>\n                  {sso.description}\n                </option>\n              );\n            })}\n          </select>\n        </label>\n      </div>\n    );\n  };\n  protected renderAlignmentTypeLabel = (\n    style: AminoAcidAlignmentStyle | NucleotideAlignmentStyle\n  ) => {\n    return (\n      <div>\n        <label>\n          <strong>Alignment Type:</strong>\n          <select\n            value={style.alignmentType.key}\n            onChange={e =>\n              this.setState({\n                style: AlignmentStyle.fromAlignmentType(\n                  AlignmentTypes.fromKey(e.target.value)!\n                )\n              })\n            }\n          >\n            {AlignmentTypes.list.map(alignmentType => {\n              return (\n                <option value={alignmentType.key} key={alignmentType.key}>\n                  {alignmentType.description}\n                </option>\n              );\n            })}\n          </select>\n        </label>\n      </div>\n    );\n  };\n  protected renderColorScheme = (\n    style: AminoAcidAlignmentStyle | NucleotideAlignmentStyle\n  ) => {\n    return (\n      <div>\n        <label>\n          <strong>Style:</strong>\n          <select\n            value={style.alignmentType.allColorSchemes.indexOf(\n              style.colorScheme\n            )}\n            onChange={e => {\n              this.setState({\n                style: {\n                  ...style!,\n                  colorScheme:\n                    style.alignmentType.allColorSchemes[\n                      parseInt(e.target.value)\n                    ]\n                }\n              });\n            }}\n          >\n            {style.alignmentType.allColorSchemes.map(\n              (colorScheme: IColorScheme, index: number) => {\n                return (\n                  <option key={index} value={index}>\n                    {colorScheme.description}\n                  </option>\n                );\n              }\n            )}\n          </select>\n        </label>\n      </div>\n    );\n  };\n  protected renderResidueDetail = (\n    style: AminoAcidAlignmentStyle | NucleotideAlignmentStyle\n  ) => {\n    return (\n      <div>\n        <label>\n          <strong>Residue Detail:</strong>\n          <select\n            value={style.residueDetail.key}\n            onChange={e => {\n              this.setState({\n                style: {\n                  ...style,\n                  residueDetail: ResidueDetailTypes.fromKey(e.target.value)!\n                }\n              });\n            }}\n          >\n            {ResidueDetailTypes.list.map(rd => {\n              return (\n                <option key={rd.key} value={rd.key}>\n                  {rd.description}\n                </option>\n              );\n            })}\n          </select>\n        </label>\n      </div>\n    );\n  };\n  protected renderPositionStyling = (\n    style: AminoAcidAlignmentStyle | NucleotideAlignmentStyle\n  ) => {\n    return (\n      <div>\n        <label>\n          <strong>Positions to Style:</strong>\n          <select\n            value={PositionsToStyle.list.indexOf(style.positionsToStyle)}\n            onChange={e => {\n              this.setState({\n                style: {\n                  ...style,\n                  positionsToStyle:\n                    PositionsToStyle.list[parseInt(e.target.value)]\n                }\n              });\n            }}\n          >\n            {PositionsToStyle.list.map(\n              (pts: PositionsToStyle, index: number) => {\n                return (\n                  <option key={index} value={index}>\n                    {pts.description}\n                  </option>\n                );\n              }\n            )}\n          </select>\n        </label>\n      </div>\n    );\n  };\n  protected renderSequenceLogo = () => {\n    const { logoPlotStyle } = this.state;\n    return (\n      <div>\n        <label>\n          <strong>Sequence Logo Style:</strong>\n          <select\n            value={logoPlotStyle}\n            onChange={e => {\n              this.setState({\n                logoPlotStyle: e.target.value as LOGO_TYPES\n              });\n            }}\n          >\n            {Object.values(LOGO_TYPES).map(logoType => {\n              return (\n                <option key={logoType} value={logoType}>\n                  {logoType}\n                </option>\n              );\n            })}\n          </select>\n        </label>\n      </div>\n    );\n  };\n  protected renderZoomButtons = () => {\n    const { zoomLevel } = this.state;\n    return (\n      <div>\n        <label>\n          <strong>Zoom:</strong>\n          <div className=\"zoom-level\">\n            <button\n              type=\"button\"\n              disabled={zoomLevel < 3}\n              onClick={e => {\n                this.setState({\n                  zoomLevel: zoomLevel - 1\n                });\n              }}\n            >\n              -\n            </button>\n            {zoomLevel}\n            <button\n              type=\"button\"\n              disabled={zoomLevel > 15}\n              onClick={e => {\n                this.setState({\n                  zoomLevel: zoomLevel + 1\n                });\n              }}\n            >\n              +\n            </button>\n          </div>\n        </label>\n      </div>\n    );\n  };\n\n  protected renderFileUpload = () => {\n    return (\n      <div>\n        <FileInputComponent\n          labelText={\"Upload Sequence File:\"}\n          onFileLoadCb={this.onFileUpload}\n        />\n      </div>\n    );\n  };\n\n  protected renderExampleLinks = () => {\n    return (\n      <div className=\"examples\">\n        <label>\n          <strong>Example Alignments:</strong>\n          <button\n            type=\"button\"\n            className=\"button-link\"\n            onClick={async e => {\n              const f = new File(\n                [\n                  await (\n                    await fetch(\n                      `${process.env.PUBLIC_URL}/7fa1c5691376beab198788a726917d48_b0.4.a2m`\n                    )\n                  ).blob()\n                ],\n                \"beta_lactamase_example.fasta\"\n              );\n              this.onFileUpload(f);\n            }}\n          >\n            β-lactamase\n          </button>\n        </label>\n      </div>\n    );\n  };\n\n  protected onFileUpload = async (file: File) => {\n    const fileText = await file.text();\n    this.setState({\n      alignment: Alignment.fromFileContents(file.name, fileText)\n    });\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"acePrefix\":\"ace_\",\"preAceQueryClass\":\"query\",\"preAceConsensusClass\":\"consensus\",\"aceQueryClass\":\"ace_query\",\"aceConsensusClass\":\"ace_consensus\",\"transparentLetterClass\":\"transparent-letters\",\"transparentBackgroundClass\":\"transparent-background\",\"aaAlignTypeClass\":\"alignment-aa\",\"ntAlignTypeClass\":\"alignment-nt\",\"styPosAllClass\":\"alignment-positions-tostyle-all\",\"styPosQueryClass\":\"alignment-positions-tostyle-query\",\"styPosQueryDiffClass\":\"alignment-positions-tostyle-query-diff\",\"styPosConsensusClass\":\"alignment-positions-tostyle-consensus\",\"styPosConsensusDiffClass\":\"alignment-positions-tostyle-consensus-diff\",\"aaStyClass_Default\":\"aa-alignment-style-default\",\"aaStyDesc_Default\":\"Default\",\"aaStyBGAlpha_Default\":\".25\",\"aaStyColorOrder_Default\":\"A,R,N,D,C,Q,E,G,H,I,L,K,M,F,P,S,T,W,Y,V\",\"aaStyColors_Default\":\"#3c0,#c00,#60c,#03f,#ff0,#60c,#03f,#3c0,#090,#3c0,#3c0,#c00,#3c0,#090,#3c0,#09f,#09f,#090,#090,#3c0\",\"aaStyClass_Hydrophobicity\":\"aa-alignment-style-hydrophobicity\",\"aaStyDesc_Hydrophobicity\":\"Hydrophobicity\",\"aaStyBGAlpha_Hydrophobicity\":\".25\",\"aaStyColorOrder_Hydrophobicity\":\"F,I,W,L,V,M,Y,C,A,T,H,G,S,Q,R,K,N,E,P,D\",\"aaStyColors_Hydrophobicity\":\"red,red,#ff0606,#ff0606,#ff4c4c,#ff5252,#f77,#ffa5a5,#ffc0c0,#e1e1ff,#d0d0ff,#b6b6ff,#a5a5ff,#9595ff,#8787ff,#6969ff,#5959ff,#4f4fff,#1d1dff,blue\",\"ntStyClass_Default\":\"nt-alignment-style-default\",\"ntStyDesc_Default\":\"Default\",\"ntStyBGAlpha_Default\":\".25\",\"ntStyColorOrder_Default\":\"A,C,G,T,U,R,Y\",\"ntStyColors_Default\":\"#5050ff,#e00000,#00c000,#e6e600,#c90,#2e8b57,#ff8c00\"};"],"sourceRoot":""}