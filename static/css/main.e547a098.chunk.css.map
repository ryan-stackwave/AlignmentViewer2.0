{"version":3,"sources":["index.css","App.scss","MolecularStyles.module.scss","AlignmentViewer.scss","SequenceLogo.scss","SequenceBarplot.scss"],"names":[],"mappings":"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","file":"main.e547a098.chunk.css","sourcesContent":["body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n","/** App.scss */\n.settings_box {\n  font-size: 11px;\n  margin: auto;\n  width: 450px;\n  border: 2px solid black;\n  padding: 15px;\n}\n.settings_box h3 {\n  margin-bottom: 0;\n  text-align: center;\n}\n.settings_box h4 {\n  margin-top: 0;\n  text-align: center;\n}\n.settings_box h2 {\n  padding-top: 0;\n  margin-top: 0;\n  text-align: center;\n}\n\n.settings_box .settings-header {\n  position: relative;\n}\n.settings_box .settings-header button {\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.settings_box label strong {\n  width: 200px;\n  display: inline-block;\n}\n.settings_box label select,\n.settings_box label .zoom-level {\n  width: 200px;\n  display: inline-block;\n}\n\n.examples button.button-link {\n  border: 1px solid transparent;\n}\n\nbutton.button-link {\n  background: none !important;\n  border: none;\n  //padding: 0 !important;\n  /*optional*/\n  //font-family: arial, sans-serif;\n  /*input has OS specific font-family*/\n  color: #069;\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n.hide {\n  display: none;\n}\n\n.av_holder {\n  padding-top: 20px;\n}\n\n.loader {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  border: 3px solid #f3f3f3; /* Light grey */\n  border-top: 3px solid #3498db; /* Blue */\n  border-radius: 50%;\n  width: 14px;\n  height: 14px;\n  animation: spin 2s linear infinite;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","/**\n * MolecularStyles.module.scss\n * \n * Style definitions for amino acids and nucleotides in e.g. an alignment or logo.\n *  \n * INDIVIDUAL AMINO ACID / NUCLEOTIDE CLASSES\n * The Ace editor prefixes all classes it adds in the alignment mode with \"ace_\". Because\n * of this, any other components (e.g., logo plots) should also apply classes with this\n * prefix. Amino acids and nucleotides will be styled with the single letter upper case\n * character, prefixed with ace_ (e.g., Alanine and Adenine would both be ace_A).\n * \n * Positional modifying classes can be accessed via 4 exported parameters:\n *    preAceQueryClass:       string to indicate a residue matches the query sequence (this\n *                                (should only be used by the ace highlight parser)\n *    preAceConsensusClass:   string to indicate a residue matches the consensus sequence \n *                                (should only be used by the ace highlight parser)\n *    aceQueryClass:          final ace_ prefixed class name to indicate a residue matches \n *                            the query sequence \n *    aceConsensusClass:      final ace_ prefixed class name to indicate a residue matches    \n *                            the consensus sequence\n *\n * TOP LEVEL STYLING\n * Style of an alignment or logo are dictated by 3 parent element classes #1, #2, #3.\n * All 3 are required and must be on the same parent element. The top level classes\n * are \"exported\" and should be read by typescript and the value placed as the classes:\n *  Class  Exported Parameter    Description\n *  -----  ------------------    -----------\n *    #1   aaAlignTypeClass            style alignment as amino acid sequences\n *    #1   ntAlignTypeClass            style alignment as nucleotide sequences\n *\n *    #2   styPosAllClass              style all positions \n *    #2   styPosQueryClass            style only positions that have the ace_query class \n *    #2   styPosQueryDiffClass        style only positions that don't have the ace_query class \n *    #2   styPosConsensusClass        style only positions that have the ace_consensus class \n *    #2   styPosConsensusDiffClass    style only positions that don't have the ace_consensus class \n *\n *    #3   aaStyClass_{STYLENAME}      amino acid style with name {STYLENAME} excluding curly braces\n *    #3   aaStyColorOrder_{STYLENAME} order of amino acids in the colors object for this style. this\n *                                     string is comma space (, ) delimited.\n *    #3   aaStyColors_{STYLENAME}     colors for all amino acids for this style. this string is \n *                                     comma space (, ) delimited.\n *    #3   ntStyClass_{STYLENAME}      nucleotide style with name {STYLENAME} excluding curly braces\n *    #3   ntStyColorOrder_{STYLENAME} order of nucleotides in the colors object for this style. this\n *                                     string is comma space (, ) delimited.\n *    #3   ntStyColors_{STYLENAME}     colors for all nucleotides for this style. this string is \n *                                     comma space (, ) delimited.\n *\n *\n * Example: e.g.:\n *   <div class=\"$alignTypeAA $aaStyleDefault $styPosQuery\">\n *     <logo .../> || <aceMSA .../>\n *   </div>\n */\n\n//ace specific props\n$acePrefix: ace_;\n$preAceQueryClass: q;\n$preAceConsensusClass: c;\n$aceQueryClass: $preAceQueryClass;\n$aceConsensusClass: $preAceConsensusClass;\n$aceResidueParentClass: $acePrefix + line; //directly above ace residues\n\n//general global props\n$aaStyleClassPrefix: aa-alignment-style-;\n$ntStyleClassPrefix: nt-alignment-style-;\n$styPosClassPrefix: alignment-positions-tostyle-;\n$defaultBackgroundAlpha: 0.25;\n\n//residue style\n$darkHueClass: dark-residues;\n$lightHueClass: light-residues;\n\n//which positions should get styled?\n$styPosAll: $styPosClassPrefix + all;\n$styPosQuery: $styPosClassPrefix + query;\n$styPosQueryDiff: $styPosClassPrefix + query-diff;\n$styPosConsensus: $styPosClassPrefix + consensus;\n$styPosConsensusDiff: $styPosClassPrefix + consensus-diff;\n\n//amino acid props\n$aaProps: (\n  topLevelAlignmentClass: alignment-aa,\n  styles: (\n    Default: (\n      description: \"Default\",\n      topLevelClass: $aaStyleClassPrefix + default,\n      backgroundAlpha: $defaultBackgroundAlpha,\n      defaultLetterColor: #cccccc,\n      colors: (\n        A: #33cc00,\n        R: #cc0000,\n        N: #6600cc,\n        D: #0033ff,\n        C: #ffff00,\n        Q: #6600cc,\n        E: #0033ff,\n        G: #33cc00,\n        H: #009900,\n        I: #33cc00,\n        L: #33cc00,\n        K: #cc0000,\n        M: #33cc00,\n        F: #009900,\n        P: #33cc00,\n        S: #0099ff,\n        T: #0099ff,\n        W: #009900,\n        Y: #009900,\n        V: #33cc00,\n      ),\n    ),\n    Hydrophobicity: (\n      description: \"Hydrophobicity\",\n      //(red = hydrophilic, blue = hydrophobic)\n        topLevelClass: $aaStyleClassPrefix + hydrophobicity,\n      backgroundAlpha: $defaultBackgroundAlpha,\n      defaultLetterColor: #cccccc,\n      /*\n      colors based on: https://www.sigmaaldrich.com/life-science/metabolomics/learning-center/amino-acid-reference-chart.html\n      to get hex in python:\n          from matplotlib import cm\n          def rgb2hex(r,g,b):\n            return \"#{:02x}{:02x}{:02x}\".format(r,g,b)\n\n          redBlueColormap = cm.get_cmap('bwr', 155)\n          aas = {  \n            'F': 100,   'I': 99,  'W': 97,  'L': 97,  'V': 76,  'M': 74, 'Y': 63,  \n            'C': 49,  'A': 41,   'T': 13,  'H': 8,  'G': 0, 'S': -5,  'Q': -10,   \n            'R': -14,  'K': -23,  'N': -28,  'E': -31, 'P': -46,  'D': -55\n          }\n\n          //normalize and convert to rgb\n          rgba = {}\n          for aa in aas.keys(): \n            rgba[aa] = redBlueColormap(aas[aa]+55)\n\n          hex = {}\n          for aa in aas.keys(): \n              hex[aa] = rgb2hex(int(rgba[aa][0]*255), int(rgba[aa][1]*255), int(rgba[aa][2]*255))\n\n          print(hex);\n      */\n        colors:\n        (\n          F: #ff0000,\n          I: #ff0000,\n          W: #ff0606,\n          L: #ff0606,\n          V: #ff4c4c,\n          M: #ff5252,\n          Y: #ff7777,\n          C: #ffa5a5,\n          A: #ffc0c0,\n          T: #e1e1ff,\n          H: #d0d0ff,\n          G: #b6b6ff,\n          S: #a5a5ff,\n          Q: #9595ff,\n          R: #8787ff,\n          K: #6969ff,\n          N: #5959ff,\n          E: #4f4fff,\n          P: #1d1dff,\n          D: #0000ff,\n        ),\n    ),\n  ),\n);\n\n//amino acid props\n$ntProps: (\n  topLevelAlignmentClass: alignment-nt,\n  styles: (\n    Default: (\n      description: \"Default\",\n      topLevelClass: $ntStyleClassPrefix + default,\n      backgroundAlpha: $defaultBackgroundAlpha,\n      defaultLetterColor: #cccccc,\n      colors: (\n        A: #5050ff,\n        C: #e00000,\n        G: #00c000,\n        T: #e6e600,\n        U: #cc9900,\n        R: #2e8b57,\n        Y: #ff8c00,\n      ),\n    ),\n  ),\n);\n\n//\n// EXPORT\n// export alignment type classes, color scheme classes, position coloring classes,\n// and then individual colors for use in javascript.\n//\n\n:export {\n  acePrefix: $acePrefix;\n  preAceQueryClass: $preAceQueryClass;\n  preAceConsensusClass: $preAceConsensusClass;\n  aceQueryClass: $aceQueryClass;\n  aceConsensusClass: $aceConsensusClass;\n  aceResidueParentClass: $aceResidueParentClass;\n  darkHueClass: $darkHueClass;\n  lightHueClass: $lightHueClass;\n\n  aaAlignTypeClass: map-get($aaProps, topLevelAlignmentClass);\n  ntAlignTypeClass: map-get($ntProps, topLevelAlignmentClass);\n\n  styPosAllClass: $styPosAll;\n  styPosQueryClass: $styPosQuery;\n  styPosQueryDiffClass: $styPosQueryDiff;\n  styPosConsensusClass: $styPosConsensus;\n  styPosConsensusDiffClass: $styPosConsensusDiff;\n}\n\n//export coloring\n:export {\n  @each $styleName, $styleObj in map-get($aaProps, styles) {\n    #{unquote(\"aaStyClass_\"+$styleName)}: map-get($styleObj, topLevelClass);\n    #{unquote(\"aaStyDesc_\"+$styleName)}: unquote(\n      map-get($styleObj, description)\n    );\n    #{unquote(\"aaStyBGAlpha_\"+$styleName)}: map-get($styleObj, backgroundAlpha);\n    #{unquote(\"aaStyColorOrder_\"+$styleName)}: map-keys(\n      map-get($styleObj, colors)\n    );\n    #{unquote(\"aaStyColors_\"+$styleName)}: map-values(\n      map-get($styleObj, colors)\n    );\n  }\n}\n:export {\n  @each $styleName, $styleObj in map-get($ntProps, styles) {\n    #{unquote(\"ntStyClass_\"+$styleName)}: map-get($styleObj, topLevelClass);\n    #{unquote(\"ntStyDesc_\"+$styleName)}: unquote(\n      map-get($styleObj, description)\n    );\n    #{unquote(\"ntStyBGAlpha_\"+$styleName)}: map-get($styleObj, backgroundAlpha);\n    #{unquote(\"ntStyColorOrder_\"+$styleName)}: map-keys(\n      map-get($styleObj, colors)\n    );\n    #{unquote(\"ntStyColors_\"+$styleName)}: map-values(\n      map-get($styleObj, colors)\n    );\n  }\n}\n\n//\n// FUNCTIONS\n//\n\n//see https://stackoverflow.com/questions/11867545\n@function brightness($color) {\n  @return ((red($color) * 299) + (green($color) * 587) + (blue($color) * 114)) /\n    1000;\n}\n\n//\n//Output all selectors for nt and aa props.\n//\n@mixin outputMajorSelectors($propsObj) {\n  $alignmentClass: map-get($propsObj, topLevelAlignmentClass);\n\n  @each $styleName, $styleObj in map-get($propsObj, styles) {\n    $styleClass: map-get($styleObj, topLevelClass);\n    $backgroundAlpha: map-get($styleObj, backgroundAlpha);\n\n    //set default letter color for letters - used for unstyled residues\n    // (i.e., dashes, dots, unrecognized letters, lowercase letters)\n    $defaultColor: map-get($styleObj, defaultLetterColor);\n    :global\n      .#{$alignmentClass}\n      .#{$aceResidueParentClass}\n      [class^=\"#{$acePrefix}\"] {\n      color: $defaultColor;\n      fill: $defaultColor;\n    }\n\n    //SPECIAL CASE 1\n    //the glyph for \"S\" needs to have a fill and stroke\n    //this selector captures an special case - when user selects\n    //nucleotide alignment and there is an S in the alignment\n    //it would disappear in the logo plot without this class.\n    :global .#{$alignmentClass} .#{$aceResidueParentClass} .#{$acePrefix}S {\n      color: $defaultColor;\n      stroke: $defaultColor;\n      fill: #ffffff;\n    }\n\n    //SPECIAL CASE 2.1\n    //logo plot fo \"S\" when rectangles are shown needs to have\n    //fill with the color, not white as required for the glyph\n    //NOTE: this for amino acids, this is handled by on a per-style\n    //      basis (see SPECIAL CASE 2.2 below)\n    :global .#{$alignmentClass} .#{$aceResidueParentClass} rect.#{$acePrefix}S {\n      fill: $defaultColor;\n    }\n\n    @each $aa, $color in map-get($styleObj, colors) {\n      $aceAAClass: $acePrefix + $aa;\n\n      //\n      //dark hues\n      //\n      :global\n        .#{$alignmentClass}.#{$darkHueClass}.#{$styleClass}.#{$styPosAll}\n        .#{$aceAAClass},\n      :global\n        .#{$alignmentClass}.#{$darkHueClass}.#{$styleClass}.#{$styPosConsensus}\n        .#{$aceAAClass}.#{$aceConsensusClass},\n      :global\n        .#{$alignmentClass}.#{$darkHueClass}.#{$styleClass}.#{$styPosConsensusDiff}\n        .#{$aceAAClass}:not(.#{$aceConsensusClass}),\n      :global\n        .#{$alignmentClass}.#{$darkHueClass}.#{$styleClass}.#{$styPosQuery}\n        .#{$aceAAClass}.#{$aceQueryClass},\n      :global\n        .#{$alignmentClass}.#{$darkHueClass}.#{$styleClass}.#{$styPosQueryDiff}\n        .#{$aceAAClass}:not(.#{$aceQueryClass}) {\n        background-color: rgba($color, 1) !important;\n\n        //set letter color based on brightness of background color\n        $tmpcolor: white;\n        @if brightness($color) > 125 {\n          $tmpcolor: black;\n        }\n        color: $tmpcolor !important;\n      }\n\n      //\n      // light hues - default of no class is added and also for logo\n      //\n      :global .#{$alignmentClass}.#{$styleClass}.#{$styPosAll} .#{$aceAAClass},\n      :global\n        .#{$alignmentClass}.#{$styleClass}.#{$styPosConsensus}\n        .#{$aceAAClass}.#{$aceConsensusClass},\n      :global\n        .#{$alignmentClass}.#{$styleClass}.#{$styPosConsensusDiff}\n        .#{$aceAAClass}:not(.#{$aceConsensusClass}),\n      :global\n        .#{$alignmentClass}.#{$styleClass}.#{$styPosQuery}\n        .#{$aceAAClass}.#{$aceQueryClass},\n      :global\n        .#{$alignmentClass}.#{$styleClass}.#{$styPosQueryDiff}\n        .#{$aceAAClass}:not(.#{$aceQueryClass}) {\n        @if $aa == S {\n          //serine glyph needs stoke coloring also\n          color: $color;\n          stroke: $color;\n          fill: #ffffff;\n          background-color: rgba($color, $backgroundAlpha);\n        } @else {\n          color: $color;\n          fill: $color;\n          background-color: rgba($color, $backgroundAlpha);\n        }\n      }\n\n      //SPECIAL CASE 2.2\n      //logo plot fo \"S\" when rectangles are shown needs to have\n      //fill with the color, not white as required for the glyph\n      @if $aa == S {\n        :global\n          .#{$alignmentClass}.#{$styleClass}.#{$styPosAll}\n          svg\n          rect.#{$aceAAClass} {\n          fill: $color;\n        }\n      }\n    }\n  }\n}\n\n@include outputMajorSelectors($aaProps);\n@include outputMajorSelectors($ntProps);\n","/** AlignmentViewer.scss */\n\n$layoutGapSize: 5px;\n$annotationContentGapSize: 20px;\n$rowHeight: 25px;\n\n.alignment_viewer.annotation-closed .av-annotation {\n  display: none;\n}\n\n.alignment_viewer {\n  display: grid;\n  grid-template-columns: 10px repeat(auto-fill, minmax(200px, 1fr)) 10px;\n  grid-auto-rows: minmax($rowHeight, auto);\n  grid-gap: $layoutGapSize;\n\n  .av-widget {\n    grid-column: 2 / -2;\n    grid-row-start: auto;\n\n    display: flex;\n    flex-direction: row;\n\n    position: relative;\n  }\n  .av-widget.av-webgl-msa {\n    display: none;\n  }\n  .av-widget.av-conservation-gaps {\n    grid-row-end: span 3;\n  }\n  .av-widget.av-sequence-logo {\n    grid-row-end: span 4;\n  }\n  .av-widget.av-ace-msa {\n    grid-row-end: span 23;\n  }\n\n  .av-annotation,\n  .av-content {\n    display: flex;\n    overflow: auto;\n  }\n  .av-annotation {\n    flex: 0 1 20%;\n    justify-content: flex-end;\n    align-items: center;\n    /* bit of a hack to put space between annotation and content */\n    margin-right: $annotationContentGapSize;\n    font-weight: bold;\n    text-align: right;\n  }\n  .av-content {\n    flex: 1 0 80%;\n    position: relative;\n    align-items: center;\n  }\n  .av-content::-webkit-scrollbar {\n    background: transparent; /* make scrollbar transparent */\n  }\n\n  .av-widget.av-consensus-seq #ace-consensusseq,\n  .av-widget.av-target-seq #ace-queryseq,\n  .av-widget.av-position-indicator #ace-positions {\n    line-height: $rowHeight;\n  }\n\n  .av-widget.av-consensus-seq #ace-consensusseq,\n  .av-widget.av-target-seq #ace-queryseq,\n  .av-widget.av-position-indicator #ace-positions,\n  .av-widget.av-ace-msa #ace-alignment,\n  .av-widget.av-ace-msa #ace-alignment-metadata {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n    bottom: 0px;\n    overflow: auto;\n    overflow-x: hidden;\n    overflow-y: hidden;\n  }\n\n  .mini-map.hidden {\n    display: none;\n  }\n}\n","/** SequenceLogo.scss */\n\n.sequence-logo {\n  rect.interaction-placeholder {\n    opacity: 0;\n  }\n\n  .sequence-logo-tooltip-container {\n    margin: 0;\n\n    .logo-tooltip {\n      display: table;\n      width: auto;\n      line-height: 16px;\n      font-size: 12px;\n\n      h1 {\n        text-align: center;\n        text-decoration: underline;\n        padding-bottom: 4px;\n        margin: 0;\n        font-size: 13px;\n      }\n\n      .row {\n        display: table-row;\n        width: auto;\n        clear: both;\n      }\n\n      .col {\n        float: left;\n        display: table-column;\n        text-align: center;\n        width: 60px;\n        line-height: 16px;\n      }\n\n      .col.header {\n        font-weight: bold;\n        margin-bottom: 5px;\n      }\n\n      .legend-square {\n        width: 12px;\n        height: 12px;\n        margin-top: 2px;\n        margin-bottom: 2px;\n      }\n      .name {\n        width: 100px;\n      }\n      .frequency {\n      }\n      .count {\n      }\n    }\n  }\n}\n","/** SequenceBarplot.scss */\n\n.barplot .barplot-tooltip-container {\n  margin: 0;\n\n  .bar-position-textblock {\n    h1 {\n      text-decoration: underline;\n      padding-bottom: 4px;\n      margin: 0;\n      font-size: 14px;\n    }\n    .dataseries-line {\n      line-height: 16px;\n      font-size: 13px;\n    }\n    .legend-square {\n      width: 8px;\n      height: 8px;\n      display: inline-block;\n      margin-right: 6px;\n    }\n  }\n}\n\n.barplot {\n  svg {\n    .position-container rect.interaction-placeholder {\n      fill-opacity: 0;\n      stroke: none;\n    }\n    .position-container.selected rect.interaction-placeholder {\n      //stroke: red;\n      //stroke-width: 5;\n    }\n  }\n}\n\n//\n//users should override what is below to change bar colors\n//\n\n.barplot svg rect.barplot-shannon-entropy {\n  fill: #000000;\n  color: #000000;\n}\n.bar-position-textblock .barplot-shannon-entropy .legend-square {\n  background-color: #000000;\n}\n\n.barplot svg rect.barplot-gaps {\n  fill: #b7b7b7;\n  color: #b7b7b7;\n}\n.bar-position-textblock .barplot-gaps .legend-square {\n  background-color: #b7b7b7;\n}\n\n.barplot svg rect.barplot-kullback-leibler-divergence {\n  fill: darkred;\n  color: darkred;\n}\n.bar-position-textblock .barplot-kullback-leibler-divergence .legend-square {\n  background-color: darkred;\n}\n"]}